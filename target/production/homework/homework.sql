-- MySQL Administrator dump 1.4
--
-- ------------------------------------------------------
-- Server version	5.7.13-log


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


--
-- Create schema homework
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ homework;
USE homework;

--
-- Table structure for table `homework`.`student_course`
--

DROP TABLE IF EXISTS `student_course`;
CREATE TABLE `student_course` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `course_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `course_id` (`course_id`),
  KEY `student_id` (`student_id`),
  CONSTRAINT `student_course_ibfk_1` FOREIGN KEY (`course_id`) REFERENCES `tb_course` (`id`),
  CONSTRAINT `student_course_ibfk_2` FOREIGN KEY (`student_id`) REFERENCES `tb_student` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `homework`.`student_course`
--

/*!40000 ALTER TABLE `student_course` DISABLE KEYS */;
INSERT INTO `student_course` (`id`,`course_id`,`student_id`) VALUES 
 (1,10,275),
 (2,10,276),
 (3,11,275),
 (4,11,276),
 (5,11,278);
/*!40000 ALTER TABLE `student_course` ENABLE KEYS */;


--
-- Table structure for table `homework`.`student_workbook`
--

DROP TABLE IF EXISTS `student_workbook`;
CREATE TABLE `student_workbook` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `workbook_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `exercise_id` int(11) NOT NULL,
  `studentAnswer` varchar(6000) DEFAULT NULL COMMENT '生学答案',
  `grade` int(11) DEFAULT NULL COMMENT '每个题的分值',
  `score` float DEFAULT NULL COMMENT '本题的得分',
  `notes` varchar(200) DEFAULT NULL COMMENT '师教批注',
  `rate` int(11) DEFAULT NULL COMMENT '最高的查重率',
  `studentRate` varchar(200) DEFAULT NULL COMMENT '存放多个学生的查重率，中间用",“分开',
  `instructions` varchar(200) DEFAULT NULL COMMENT '与rate对应的学生的ID,中间用","分开',
  `fileName` varchar(100) DEFAULT NULL COMMENT '学生上传作业文件',
  PRIMARY KEY (`id`),
  KEY `exercise_id` (`exercise_id`),
  KEY `student_id` (`student_id`),
  KEY `workbook_id` (`workbook_id`),
  CONSTRAINT `student_workbook_ibfk_3` FOREIGN KEY (`exercise_id`) REFERENCES `tb_exercise` (`id`),
  CONSTRAINT `student_workbook_ibfk_6` FOREIGN KEY (`student_id`) REFERENCES `tb_student` (`id`),
  CONSTRAINT `student_workbook_ibfk_9` FOREIGN KEY (`workbook_id`) REFERENCES `tb_workbook` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=6347 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `homework`.`student_workbook`
--

/*!40000 ALTER TABLE `student_workbook` DISABLE KEYS */;
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4356,40,602,55,'Not equal! 10\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4357,40,602,56,'We are equal 20		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4358,40,602,57,'17 9 17 9		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4359,40,602,60,'6 12	   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4360,40,602,61,'D	   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4361,40,610,55,'			Not equal!10		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4362,40,610,56,'			We are equal 20		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4363,40,610,57,'			17 9 17 9		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4364,40,610,60,'			i=6   count= 12		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4365,40,610,61,'					   D\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4366,39,563,55,'Not equal!10				   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4367,39,563,56,'We are equal 20				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4368,39,563,57,'17 9 17 9			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4369,39,563,60,'6   12',20,20,'					   ',0,NULL,NULL,NULL),
 (4370,39,563,61,'D			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4371,40,609,55,'			Not equal! 10		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4372,40,609,56,'			We are equal 20		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4373,40,609,57,'	17 9 17 9				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4374,40,609,60,'		6 12			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4375,40,609,61,'	D				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4376,39,562,55,' Not equal! 10  \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4377,39,562,56,'We are equal 20					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4378,39,562,57,'17 9 17 9	   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4379,39,562,60,'6 12		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4380,39,562,61,'D\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4381,40,586,55,'Not equal! 10	   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4382,40,586,56,'We are equal 20				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4383,40,586,57,'17 9 17 9				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4384,40,586,60,'6 12				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4385,40,586,61,'D				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4386,39,578,55,'Not equal! 10					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4387,39,578,56,'We are equal 20			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4388,39,578,57,'17 9 17 9					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4389,39,578,60,'i=6,count=12					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4390,39,578,61,'D				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4391,40,587,55,'Not equal!10\r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4392,40,587,56,'We are equal 20		   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4393,40,587,57,'17 9 17 9	   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4394,40,587,60,'i=6 count=12		   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4395,40,587,61,'D			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4396,40,611,55,'Not equal! 10\r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4397,40,611,56,'We are equal 20					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4398,40,611,57,'17 9 17 9				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4399,40,611,60,'i=6  count=12				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4400,40,611,61,'D		   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4401,39,564,55,'Not equal!10   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4402,39,564,56,'We are equal 20			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4403,39,564,57,'17 9 17 9			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4404,39,564,60,'i的最终取值为6，count的最终取值为12					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4405,39,564,61,'D					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4406,39,582,55,'Not equal! 10',20,20,'					   ',0,NULL,NULL,NULL),
 (4407,39,582,56,'We are equal 20',20,20,'					   ',0,NULL,NULL,NULL),
 (4408,39,582,57,'17 9 17 9',20,20,'					   ',0,NULL,NULL,NULL),
 (4409,39,582,60,'6 12',20,20,'					   ',0,NULL,NULL,NULL),
 (4410,39,582,61,'D',20,20,'					   ',0,NULL,NULL,NULL),
 (4411,40,592,55,'	Not equal! 10		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4412,40,592,56,'	We are equal 20		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4413,40,592,57,'	17 9 17 9	   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4414,40,592,60,'	6  12				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4415,40,592,61,'	D				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4416,40,599,55,'Not equal! 10		   \r\n					   ',20,20,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4417,40,599,56,'We are equal 20			   \r\n					   ',20,20,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4418,40,599,57,'17 9 17 9		   \r\n					   ',20,20,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4419,40,599,60,'6 12\r\n					   ',20,20,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4420,40,599,61,'D			   \r\n					   ',20,20,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4421,39,581,55,'Not equal! 10			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4422,39,581,56,'We are equal 20			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4423,39,581,57,'17 9 17 9			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4424,39,581,60,'6 12					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4425,39,581,61,'D			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4426,40,591,55,'					   Not equal!10\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4427,40,591,56,'				   we are equal 20		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4428,40,591,57,'					   17 9 17 9\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4429,40,591,60,'					   6 12\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4430,40,591,61,'					   D\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4431,39,557,55,'	Not equal! 10				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4432,39,557,56,' We are equal 20				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4433,39,557,57,'		17 9 17 9			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4434,39,557,60,'	6 12				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4435,39,557,61,'			D		   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4436,40,605,55,'Not equal! 10				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4437,40,605,56,'we are equal 20		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4438,40,605,57,'17 9 17 9			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4439,40,605,60,'6 12			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4440,40,605,61,'D					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4441,40,606,55,'	Not equal! 20				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4442,40,606,56,'	We are equal 20				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4443,40,606,57,'	17 9 17 9				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4444,40,606,60,'		6 12			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4445,40,606,61,'		D			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4446,40,596,55,'not equal! 10  \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4447,40,596,56,'We are equal 20					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4448,40,596,57,'17 9 17 9			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4449,40,596,60,'6 12	   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4450,40,596,61,'D   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4451,39,565,55,' Not equal!10\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4452,39,565,56,'We are equal 20			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4453,39,565,57,'17 9 17 9	   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4454,39,565,60,'  6 12\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4455,39,565,61,'  D\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4456,39,560,55,'Not equal! 10			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4457,39,560,56,'We are equal 20					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4458,39,560,57,'	17 9 17 9				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4459,39,560,60,'	6    12				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4460,39,560,61,'	D				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4461,40,590,55,'Not equal!10				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4462,40,590,56,'we are equal 20					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4463,40,590,57,'17 9 17 9\r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4464,40,590,60,'i=6  count=12		   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4465,40,590,61,'D					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4466,40,594,55,'			Not equal! 10		   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4467,40,594,56,'	   We are equal 20\r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4468,40,594,57,'			17 9 17 9		   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4469,40,594,60,'		6   12			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4470,40,594,61,'		D			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4471,40,607,55,'		Not equal! 10			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4472,40,607,56,'	We are equal 20		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4473,40,607,57,'	  17  9  17  9 \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4474,40,607,60,'	6  12			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4475,40,607,61,'	D		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4476,39,567,55,'	Not equal!10				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4477,39,567,56,'We are equal 20			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4478,39,567,57,'17\r\n9\r\n17\r\n9				   ',20,0,'					   ',0,NULL,NULL,NULL),
 (4479,39,567,60,'	6 12				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4480,39,567,61,'D					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4481,40,597,55,'Not equal! 10					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4482,40,597,56,'We are equal 20					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4483,40,597,57,'17 9 17 9					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4484,40,597,60,'6 12					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4485,40,597,61,'D					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4486,40,604,55,'		Not equal! 10			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4487,40,604,56,'			We are equal 20		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4488,40,604,57,'			17 9 17 9		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4489,40,604,60,'				6 12\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4490,40,604,61,'					 D\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4491,39,561,55,'					   Not equal!10\r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4492,39,561,56,'We are equal 20	   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4493,39,561,57,'17  9	17  9	 			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4494,40,593,55,'					   Not equal! 10',20,20,'					   ',0,NULL,NULL,NULL),
 (4495,39,561,60,'	6  12				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4496,40,593,56,'					   We are equal 20',20,20,'					   ',0,NULL,NULL,NULL),
 (4497,39,561,61,'			B D	   \r\n					   \r\n					   ',20,0,'					   ',0,NULL,NULL,NULL),
 (4498,40,593,57,'17 9 17 9					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4499,40,593,60,'			6 12		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4500,40,593,61,'			D		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4501,39,573,55,'		   Not equal! 10	\r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4502,39,573,56,'      we are euaql 20		   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4503,39,573,57,'			17 9 17 9		   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4504,39,573,60,'		6 12			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4505,39,573,61,'	D				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4506,39,574,55,'		Not equal! 10	   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4507,39,574,56,'	We are equal 20					   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4508,39,574,57,'			17 9 17 9		   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4509,39,574,60,'				6 12	   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4510,39,574,61,'	D				   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4511,39,584,55,'		Not equal!   10		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4512,39,584,56,'	We are equal  20			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4513,39,584,57,'		17   9   17   9			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4514,39,584,60,'		6   12			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4515,39,584,61,'		D			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4516,39,583,55,'Not equal! 10\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4517,39,583,56,'We are equal 20\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4518,39,583,57,'   17 9 17 9\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4519,39,583,60,'				6 12	   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4520,39,583,61,'					D   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4521,40,595,55,'	Not equal! 10				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4522,40,595,56,'	We are equal 20			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4523,40,595,57,'	17 9 17 9				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4524,40,595,60,'	6 12				   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4525,40,595,61,'	D				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4526,40,589,55,'			Not equal! 10		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4527,40,589,56,'			We are equal 20		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4528,40,589,57,'		17 9 17 9			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4529,40,589,60,'		6 12			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4530,40,589,61,'		D			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4531,40,603,55,'		Not equal! 10			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4532,40,603,56,'	We are equal 20\r\n	We are equal 20			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4533,40,603,57,'		17 9 17 9			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4534,40,603,60,'			6 12	   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4535,40,603,61,'			D		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4536,40,600,55,'        Not equal! 10				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4537,40,600,56,'	We are equal 20				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4538,40,600,57,'	17 9 17 9				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4539,40,600,60,'	6 12				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4540,40,600,61,'	D				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4541,40,588,55,'Not equal! 20					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4542,40,588,56,'We are equal 20					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4543,40,588,57,'17 9 17 9				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4544,40,588,60,'6 12				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4545,40,588,61,'D					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4546,40,601,55,'we are equal 20					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4547,40,601,56,'Not equal! 10				   ',20,0,'					   ',0,NULL,NULL,NULL),
 (4548,40,601,57,'17 9 17 9		   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4549,40,601,60,'6 12		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4550,40,601,61,'D			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4551,40,598,55,'			Not equal! 10	   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4552,40,598,56,'		   We are equal 20\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4553,40,598,57,'			17 9  17  9		   \r\n					17 9 17 9   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4554,40,598,60,'			6  12		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4555,40,598,61,'		D			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4556,39,579,55,'	Not equal!10				   \r\n					   \r\n					   ',20,0,'					   ',0,NULL,NULL,NULL),
 (4557,39,579,56,'	We are equal 20				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4558,39,579,57,'					   17 9 17 9\r\n					   \r\n					   ',20,0,'					   ',0,NULL,NULL,NULL),
 (4559,39,579,60,'		6 12			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4560,39,579,61,'		D			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4561,39,569,55,'Not equal!10		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4562,39,569,56,'We are equal 20				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4563,39,569,57,'17	\r\n9\r\n17\r\n9	   \r\n					   ',20,0,'					   ',0,NULL,NULL,NULL),
 (4564,39,569,60,'6   12  				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4565,39,569,61,'D				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4566,39,570,55,'Not equal! 10				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4567,39,570,56,'We are equal 20					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4568,39,570,57,'17 9 17 9					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4569,39,570,60,'6 12					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4570,39,570,61,'D					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4571,40,608,55,'Not equal! 10	   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4572,40,608,56,'			We are equal 20		   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4573,40,608,57,'		17 9 17 9			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4574,40,608,60,'		6 12			   \r\n			6 12		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4575,40,608,61,'					D   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4576,39,566,55,'Not equal! 10		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4577,39,566,56,'We are equal 20					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4578,39,566,57,'17\r\n9\r\n17\r\n9	   \r\n					   ',20,0,'					   ',0,NULL,NULL,NULL),
 (4579,39,566,60,'6、12\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4580,39,566,61,'D				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4581,39,577,55,'Not equal! 10			   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4582,39,577,56,'We are equal 20			   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4583,39,577,57,'17 9 17 9	   \r\n					   \r\n					   \r\n					   ',20,0,'					   ',0,NULL,NULL,NULL),
 (4584,39,577,60,'6 12					   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4585,39,577,61,'D				   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4586,39,572,55,'Not equal!10			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4587,39,572,56,'we are equal!20			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4588,39,572,57,'17 9 17 9                   				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4589,39,572,60,'6,12			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4590,39,572,61,'D	   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4591,39,568,55,'Not equal! 10		   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4592,39,568,56,'We are equal 20			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4593,39,568,57,'17\r\n9\r\n17\r\n9	   \r\n					   \r\n					   ',20,0,'					   ',0,NULL,NULL,NULL),
 (4594,39,568,60,'6 12	   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4595,39,568,61,'D			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4596,39,571,55,'Not equal! 10\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4597,39,571,56,'We are equal 20\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4598,39,571,57,'17\r\n9\r\n17\r\n9\r\n					   ',20,0,'					   ',0,NULL,NULL,NULL),
 (4599,39,571,60,'6、12\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4600,39,571,61,'D\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4601,39,576,55,'	Not equal!10				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4602,39,576,56,'		We are equal 20			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4603,39,576,57,'17 9 17 9				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4604,39,576,60,'	6 12				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4605,39,576,61,'		D			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4606,39,575,55,'		Not equal!10			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4607,39,575,56,'		We are equal 20			   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4608,39,575,57,'					   17 9 17 9\r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4609,39,575,60,'					   6 12\r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4610,39,575,61,'					   D\r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4611,39,580,55,'Not equal!10		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4612,39,580,56,'We are equal20			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4613,39,580,57,'17 9 17 9			   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4614,39,580,60,'6 12		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4615,39,580,61,'D			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4616,39,559,55,'		Not equal! 10		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4617,39,559,56,'		We are equal 20				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4618,39,559,57,'			17 9 17 9		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4619,39,559,60,'		6 12			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4620,39,559,61,'			D		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4621,39,558,55,'			Not equal!10		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4622,39,558,56,'			We are equal 20		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4623,39,558,57,'				17 9 17 9	   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4624,39,558,60,'			6  12	   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4625,39,558,61,'					D   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4626,41,557,63,'one			   \r\n					   \r\n					   ',20,20,'					   \r\n					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (4627,41,557,65,'import java.util.Arrays;\r\nimport java.util.Random;\r\n\r\n/*\r\n编写程序，产生30个素数，按重小到大的顺序放入数组prime中\r\n */\r\npublic class Homework2 {\r\n    public static void main(String[] args) {\r\n        int [] prime=new int[30];\r\n        Random random=new Random();\r\n       int i=0;\r\n       int j;\r\n       while (i<30) {\r\n           int num=random.nextInt();//产生一个随机数\r\n           for (j=2;j<=Math.sqrt(num);j++){//判断产生的随机数是否为素数\r\n               if (num%j==0) break;\r\n           }\r\n           if (j>Math.sqrt(num)){//如果是插入数组\r\n               prime[i]=num;\r\n               i++;\r\n\r\n           }\r\n\r\n       }\r\n        Arrays.sort(prime);//将A进行排序\r\n\r\n       for (int a:prime){\r\n           System.out.println(a);//输出数组\r\n       }\r\n\r\n\r\n    }\r\n}\r\n				   \r\n					   \r\n					   ',40,40,'					   \r\n					   \r\n					   \r\n					   ',0,'','',NULL),
 (4628,41,557,62,'import java.util.Arrays;\r\n\r\npublic class Homework1 {\r\n    public static void main(String[] args) {\r\n        int [] A={30,1,-9,70,25};\r\n        Arrays.sort(A);//排序函数贼好用\r\n        for (int a:A){\r\n            System.out.println(a);\r\n        }\r\n    }\r\n}\r\n				   \r\n					   \r\n					   ',40,40,'					   \r\n					   \r\n					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4629,42,602,63,'one					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4630,42,602,62,'import java.util.Arrays;\r\n\r\npublic class First {\r\n	public static void main(String[] args) {\r\n		// TODO Auto-generated method stub\r\n		int []arr = {30, 1, -9, 70, 25};\r\n		Arrays.sort(arr);\r\n		for(int i: arr)\r\n			System.out.print(i + \" \");\r\n	}\r\n}					   ',40,35,'					   ',0,'','',NULL),
 (4631,42,602,65,'public class Third {\r\n	public static void getPrime(int []prime){\r\n		int cnt = 0;\r\n		boolean []flag = new boolean[1020];\r\n		for(int i = 2; i <= 1000; ++i){\r\n			if(!flag[i]) prime[cnt++] = i;\r\n			if(cnt >= 30) break;\r\n			for(int j = i; j <= 1000; j += i){\r\n				flag[j] = true;\r\n			}\r\n		}\r\n	}\r\n	public static void main(String []args){\r\n		int []prime = new int[30];\r\n		getPrime(prime);\r\n		for(int i: prime)\r\n			System.out.println(i);\r\n	}\r\n}					   ',40,40,'					   ',0,'','',NULL),
 (4632,41,562,63,'		one			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4633,41,562,65,'//编写程序找出30个素数，并且从小到大存放在数组prime[]中\r\npublic class Prime {\r\n//创建一个方法，判断该数x是不是素数\r\n	private static boolean  IsPrime(int x) {\r\n		for(int i=2;i<x;i++) \r\n		{\r\n			if(x==2)return true;\r\n			if(x%i==0) return false;\r\n		}\r\n		\r\n		return true;\r\n	}	\r\n//按顺序找出30个素数\r\n	public static void main(String[] args) {\r\n		int t=0;//记录素数个数\r\n		int n=100;\r\n		int[] prime=new int [30];\r\n		int j=0;\r\n		for(int i=2;i<n;i++)\r\n		{\r\n			if(IsPrime(i)) {prime[j]=i;t++;j++;}\r\n			if(t<30)n++;\r\n			if(t==30)break;\r\n		}\r\n		for(int i=0;i<30;i++)\r\n		{\r\n		System.out.print(prime[i]+\" \");\r\n		}\r\n	}\r\n\r\n	\r\n	\r\n}				   ',40,40,'					   ',0,'','',NULL),
 (4634,41,562,62,'	public class Sort {\r\n\r\n	public static void main(String[] args) {\r\n		int []A= {30,1,-9,70,25};\r\n		for(int i=0;i<A.length;i++)//展示数组A中元素的原顺序\r\n			System.out.print(\" \"+A[i]);\r\n		System.out.println();\r\n		\r\n		for(int i=0;i<A.length;i++)\r\n		{	for(int j=i+1;j<A.length;j++)\r\n			{\r\n			int k;//记录较小数字坐标\r\n			if(A[j]<A[i]) {k=A[j];A[j]=A[i];A[i]=k;}\r\n			}\r\n			\r\n		}\r\n\r\n		for(int i=0;i<A.length;i++)\r\n			System.out.print(\" \"+A[i]);\r\n		System.out.println();\r\n	}\r\n\r\n}\r\n				   \r\n					   ',40,40,'					   ',0,'','',NULL),
 (4635,41,583,63,'					   one\r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4636,41,583,65,' public class primes{\r\n   public static void main(String[] args)\r\n{    int []prime=new int[30];\r\n     int i=1,count=3; \r\n     prime[0]=2;	\r\n     while(i<30)\r\n    {\r\n      boolean c=true;\r\n      for(int j=2;j<count;j++)\r\n      {\r\n         if(count%j==0)\r\n          { c=false; break;}\r\n       }\r\n      if(c){ \r\n          prime[i]=count;\r\n          count++;\r\n          i++;\r\n          }\r\n     } ',40,25,'					   编译错误',0,'','',NULL),
 (4637,41,583,62,'import java.util.Arrays;\r\npublic class AB{\r\n   public static void main (String[] args)\r\n         {   int []A={30,1,-9,70,25};\r\n             Arrays.sort(A);\r\n          }\r\n}\r\n					   \r\n					   ',40,20,'					   ',81,'81','华启磊',NULL),
 (4638,42,586,63,'one				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4639,42,586,62,'public class Main{\r\n	public static void main(String[] args) {\r\n		int A[] ={30,1,-9,70,25};\r\n		sort(A);\r\n	}\r\n	public static void sort(int[] arr) {\r\n		for(int i=0;i<arr.length-1;i++) {\r\n			boolean flag=true;\r\n			for(int j=0;j<arr.length-1-i;j++) {\r\n				if(arr[j]>arr[j+1]) {\r\n					int temp=arr[j];\r\n					arr[j]=arr[j+1];\r\n					arr[j+1]=temp;\r\n					flag=false;\r\n				}\r\n			}\r\n			if(flag)break;\r\n		}\r\n		for(int i=0;i<arr.length;i++)System.out.print(arr[i]+\" \");\r\n		System.out.println();\r\n	}\r\n}',40,40,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4640,42,586,65,'public class Main{\r\n	public static void main(String[] args) {\r\n		int[] prime=new int[30];\r\n		prime[0]=2;\r\n		int num=1;\r\n		for(int i=3;i<200;i++) {\r\n			boolean flag=true;\r\n			for(int j=2;j*j<=i;j++) {\r\n				if(i%j==0) {\r\n					flag=false;\r\n					break;\r\n				}\r\n			}\r\n			if(flag)prime[num++]=i;\r\n			if(num==30)break;\r\n		}\r\n		for(int i=0;i<30;i++)System.out.print(prime[i]+\" \");\r\n		System.out.println();\r\n	}\r\n}',40,35,'					   ',0,'','',NULL),
 (4641,42,610,63,'		one			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4642,42,610,62,'		public class booktest{\r\n public static void main(String[] args){\r\n int a[]={30,1,-7,70,25};\r\nSystem.out.print(\"数组原始数据:\");\r\nfor(int i=0;i<a.length;i++)\r\nSystem.out.print(a[i]+\"\");\r\nfor(int i=0;i<a.length;i++){\r\nint lowerindex=i;\r\nfor(int j=i+1;j<a.length:j++)\r\nif(a[j]<a[lowerindex])lowerindex=j;\r\nint temp=a[i];\r\na[i]=a[lowerindex];\r\na[lowerindex]=temp;\r\n\r\n\r\n}\r\nSystem.out,print(\"数组排序后的顺序:\");\r\nfor(int i=0;i<a.length;i++)\r\nSystem.out,print(a[i]+\"\");\r\n\r\n}\r\n}			   ',40,20,'					   代码与别人重复',88,'91,82,91,88,86,81','杨利英,徐昊,陈典,侯美伊,李浩,张陈鹏',NULL),
 (4643,42,610,65,'					public class PrimeArray{\r\n public static void main(String args[]){\r\nint[]primearry=new int[30];\r\nprimearry[0]=2;\r\nint num=1;\r\nSystem.out.print(2+\"\");\r\nfor(int i=3;i<=1000;i+=2){\r\nboolean f=ture;\r\nfor(int j=2;j<i;j++){\r\nif(i%j==0){\r\nf=false;\r\nbreak;\r\n}\r\n}\r\nif(!f){continue;}\r\nprimearryp[num++]=i;\r\nSystm.out,print(i+\"\");\r\nif(num%5==0)System.out.println();\r\nif(num==30)break;\r\n}\r\n}\r\n\r\n}   ',40,20,'					   代码与别人重复',90,'80,90,83,81,84,90,83,82','杨利英,陈典,卞金凤,侯美伊,曾金波,李浩,顾海泉,张陈鹏',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4644,41,563,63,'one				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4645,41,563,65,'public class primes{\r\n       public static void main(String[]args){\r\n       int []prime=new int[30];\r\n       int num=1;\r\n       System.out.println(2+\"\");\r\n       for(int i=3;i<1000;i+=2)\r\n       {\r\n         boolean f=true;\r\n         for(int j=2;j<i;j++)\r\n         {\r\n           if(i%j==0) { f=false; break; }\r\n         }\r\n         if(!f){ continue; }\r\n         prime[num++]=i;\r\n         System.out.println(i+\"\");\r\n         if(num==30) break;\r\n         }\r\n         }\r\n         }\r\n       			   \r\n					   ',40,30,'					   ',0,'','',NULL),
 (4646,41,563,62,'public class Sort{\r\n       public static void main(String[]args){\r\n       int []A={30,1,-9,70,25};\r\n       System.out.println(\"原始顺序为:\");\r\n       for(int i=0;i<A.length;i++)\r\n       System.out.println(A[i]+\"\");\r\n       for(int i=0;i<A.length;i++)\r\n       {\r\n        int t;\r\n        for(int j=i;j<A.length;j++)\r\n        {\r\n         if(A[i]>A[j])\r\n         {\r\n          t=A[j];A[j]=A[i];A[i]=t;\r\n          }\r\n         }\r\n        }\r\n       System.out.println(\"排序后顺序为:\");\r\n       for(int i=0;i<A.length;i++)\r\n       System.out.println(A[i]+\"\");\r\n      }\r\n     }\r\n					   \r\n					   ',40,30,'					   ',0,'','',NULL),
 (4647,41,581,63,'one					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4648,41,581,65,'public class primes{\r\n   public static void main(String[] args){\r\n    int []prime=new int[30];\r\n    int i=1,count=3; \r\n    prime[0]=2;	\r\n    while(i<30)\r\n    {\r\n      boolean c=true;\r\n      for(int j=2;j<count;j++)\r\n      {\r\n         if(count%j==0)\r\n          { c=false; break;}\r\n       }\r\n      if(c){ \r\n          prime[i]=count;\r\n          count++;\r\n          i++;\r\n          }\r\n     } \r\n     System.out.println(\"数组为：\");\r\n     for(i=0;i<30;i++)\r\n         System.out.println(prime[i]+\" \");   \r\n   }       \r\n }    				   \r\n     \r\n					   \r\n					   ',40,30,'				程序逻辑有问题	   ',0,'','',NULL),
 (4649,41,581,62,'public class sort{\r\n   public static void main(String[] args){\r\n     int []A={30,1,-9,70,25};\r\n     for(int i=0;i<5;i++)\r\n     {  int x;\r\n        for(int j=0;j<5;j++)\r\n        {  if(A[j]>A[j+1])\r\n           { x=A[j]; A[j]=A[j+1]; A[j+1]=x; }\r\n         }				  \r\n     }\r\n    System.out.println(\"排序后为： \");\r\n    for(int i=0;i<5;i++)\r\n       System.out.println(A[i]+\" \");\r\n  }\r\n} \r\n					   \r\n					   ',40,20,'					 程序运行错误  ',0,'','',NULL),
 (4650,41,561,63,'		one			   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4651,41,561,65,'public class turePrinmeArry{\r\n  public static void main(String arga[]{\r\n   int[] prinmearry=new int[30];\r\n   primearry[0]=2;\r\n   int num=1;\r\n  System.out.print(2+\"\");\r\n  for(int i=3;i<=1000;i+=2){\r\n   boolean f=ture;\r\n   for(int j=2;j<i;j++){\r\n   if(i%j==0){\r\n         f=false;\r\n          break;\r\n        }\r\n}\r\n if(!f){continue;}\r\n  primeaary[num++]=i;\r\n    System.out.print(i+\"\");\r\n  if(num%5==0)System.out.println();\r\n    if(num==30)break;\r\n   }\r\n }\r\n}',40,30,'					   ',84,'84,80,84,80','陈典,郑奇隆,曾金波,魏宗邦',NULL),
 (4652,41,561,62,'public class bookrest{\r\n public static void main(String[] srga){\r\nint a[]={30,1,-9;70;25};\r\nSystem.out.print(\"数组原始顺序：\");\r\nfor(int i=0;i<a.length;i++)System.out.print(a[i]+\"\");\r\nfor(int i=0;i<a.length;i++){\r\nint lowerIndex=i;\r\nfor(int j=i+1;j<a.length;j++);\r\nif(a[j]<a[lowerIndex])lowerIndex=j;\r\nint temp=a[i];\r\na[i]=a[lowerIndex];\r\na[lowerIndex]=temp;\r\n}\r\nSystem.out.print(\"\\n数组排序后的顺序：\");\r\nfor(int i=0;i<a.length;i++)System.out.print(a[i]+\"\");\r\n}\r\n}',40,30,'					   ',94,'80,85,94,91,87,86,82','马芸芸,徐昊,陈典,郑奇隆,侯美伊,李浩,张陈鹏',NULL),
 (4653,41,567,63,'one				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4654,41,567,65,'public class ArraySelect{ \r\n       public static void main(String[] args){\r\n              int[] prime=new int[30];\r\n              prime[0]=2;\r\n              int n=1;\r\n              for(int i=3;i<=1000;i+=2){\r\n                  boolean f=true;\r\n                  for(int j=2;j<i/2;j++){\r\n                      if(i%j==0){\r\n                         f=false;\r\n                         break;\r\n                      }\r\n                  }\r\n                      if(!f){\r\n                         continue;\r\n                      }\r\n                  prime[n++]=i;\r\n                  if(n==30){\r\n                     break;\r\n                  }\r\n              }\r\n       }\r\n}\r\n					   ',40,35,'					   程序没有输出',0,'','',NULL),
 (4655,41,567,62,'public class ArrayOrder{\r\n       public static void main(String[] args){\r\n              int[] a={30,1,-9,70,25};\r\n              for(int i=1;i<a.length;i++){\r\n                  for(int j=0;j<a.length-1;j++){\r\n                      if(a[j]>a[j+1]){\r\n                         int t=a[j];\r\n                         a[j]=a[j+1];\r\n                         a[j+1]=t;\r\n                      }\r\n                  }\r\n              }\r\n       }\r\n}					   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (4656,42,587,63,'one	   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4657,42,587,62,'public class Sort{\r\n  public static void main(String []args){\r\n     int []A={30,1,-9,70,25};\r\n     for(int i=0;i<A.length;i++)\r\n        { for(int j=0;j<A.length;j++)\r\n            { if(A[i]<A[j])\r\n                { int x;\r\n                  x=A[i]; \r\n                  A[i]=A[j];\r\n                  A[j]=x;\r\n                 }\r\n             }\r\n         }\r\n     for(int i=0;i<A.length;i++)\r\n        System.out.print(A[i]+\"   \");\r\n}\r\n}    \r\n					   ',40,40,'					   ',84,'84','刘双',NULL),
 (4658,42,587,65,'\r\npublic class Prime {\r\n	public static void main(String []args){\r\n		int []prime=new int [30];\r\n		int num=0,i,j;\r\n		for(i=2;i<=500;i++)\r\n		{ for(j=2;j<=i/2;j++)\r\n          {if(i%j==0)\r\n            break;\r\n          }\r\n          if(j>i/2) \r\n          {prime[num++]=i;\r\n           System.out.print(i+\"  \");}\r\n           if(num==30)break;\r\n		}\r\n		\r\n	}\r\n}\r\n',40,35,'					   ',0,'','',NULL),
 (4659,41,578,63,'one			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4660,41,578,65,'public class prime{\r\n       public static void main(String[] args){\r\n       int[] prime=new int[30];\r\n       prime[0]=2;\r\n       int num=1;\r\n       System.out.pritln(2+\" \");\r\n       for(int i=3;i<100;i+=2)\r\n          {\r\n           boolean f=true;\r\n           for(int j=2;j<i;j++)\r\n           { if(i%j==0)\r\n              {f=false;break;}}\r\n           if(!f){continue;}\r\n           prime[num++]=i;\r\n           System.out.pritln(i+\" \");\r\n           if(num==30)break;}\r\n         }\r\n					   ',40,30,'		有语法错误			   ',0,'','',NULL),
 (4661,41,578,62,'public class Sort{\r\n       public static void main(String[] args){\r\n              int[]A={30,1,-9,70,25};\r\n              for(int i=0;i<A.length;i++)\r\n                 {\r\n                  int t;			   \r\n                  for(int j=1;j<A.length;j++)\r\n                     { if(A[i]>A[j])\r\n                         { t=A[j];A[j]=A[i];A[i]=t;}\r\n                     }\r\n                 }\r\n     for(int i=0;i<A.length;i++)\r\n     System.out.pritln(A[i]+\" \");\r\n    }\r\n  }					   \r\n					   ',40,30,'					   		有语法错误	',0,'','',NULL),
 (4662,41,565,63,'one					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4663,41,565,65,'public class Primetest {\r\n    public static void main(String[] args) {\r\n        int n = 0;\r\n        int i, j;\r\n        int[] Prime = new int[30];\r\n        for (j = 2; n < 30; j++) {\r\n            for (i = 2; i <= j / 2; i++) {\r\n                if (j % i == 0) break;\r\n            }\r\n            if (i > j / 2) {\r\n                Prime[n] = j;\r\n                n++;\r\n            }\r\n        }\r\n        for(int k=0;k<30;k++)\r\n            System.out.println(Prime[k]);\r\n    }\r\n}					   \r\n					   ',40,40,'					   ',0,'','',NULL),
 (4664,41,565,62,'public class sort {\r\n    public static void main(String[] args)\r\n    {\r\n        int A[]={30,1,-9,70,25};\r\n        System.out.print(\"数组原始顺序\");\r\n        for(int i=0;i<A.length;i++) System.out.print(A[i]+\"\");\r\n        for(int i=0;i<A.length;i++){\r\n            int lowerindex=i;\r\n            for(int j=i+1;j<A.length;j++)\r\n                if(j<A[lowerindex]) lowerindex=j;\r\n                int temp=A[i];A[i]=A[lowerindex];A[lowerindex]=temp;\r\n        }\r\n        System.out.print(\"\\n数组排后：\");\r\n        for(int i=0;i<A.length;i++)\r\n            System.out.print(A[i]+\"\");\r\n    }\r\n\r\n}\r\n					   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (4665,41,558,63,'	one				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4666,41,558,65,'				\r\n\r\nimport java.util.Arrays;\r\npublic class kjbh{  public static void main(String[] args)\r\n{\r\nint[] prime=new int[30];\r\nprime[0]=2;\r\nint s=1;\r\nSystem.out.print(2+\"\");\r\nfor (int i=3;i<=1000;i+=2){\r\nBoolean f= true;\r\nfor (int j=2;j<i;j++){\r\nif(i%j==0){\r\nf=false;\r\nbreak;\r\n}\r\n}\r\nif(!f){continue;}\r\nprime[s++]=i;\r\nSystem.out.print();\r\nif(s==30) break;\r\n}}}\r\n					   ',40,40,'					   ',0,'','',NULL),
 (4667,41,558,62,'		\r\nimport java.util.Arrays;\r\npublic class kjbh{\r\npublic static void main (String[] args)\r\n}\r\nint[] A={30,1,-9,70,25};\r\nArrays.sort(A);\r\nfor (int i=0;i<5;i++)\r\nSystem.out.print(A[i]+\",\");\r\n}}			   \r\n					   ',40,35,'					   ',81,'81','卞金凤',NULL),
 (4668,41,580,63,'one   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4669,41,580,65,'public class primes{\r\n public static void main (String[] args){\r\n    int []prime=new int [30];\r\n    prime[0]=2;\r\n    int num=1;\r\n System.out.print(2+\" \");\r\nfor(int i=3;i<1000;i+=2){\r\nboolean f=true;\r\nfor (int j=2;j<i/2;j++){\r\nif(i%j==0)\r\n{\r\n f=false;\r\n break;\r\n}\r\n}\r\nif(!f){continue;}\r\nprime[num++]=i;\r\nSystem.out.print(i+\" \");\r\nif(num==30)break;\r\n}\r\n}	\r\n}	   ',40,40,'					   ',81,'81','陈嘉懿',NULL),
 (4670,41,580,62,'public class sort{\r\npublic static void main(String[] args){\r\nint A[]={30,1,-9,70,25};\r\nSystem.out.print(\"数组原始顺序：\");\r\nfor(int i=0;i<A.length;i++)\r\nSystem.out.print(A[i]+\" \");\r\nfor(int i=0;i<A.length;i++)\r\n for(int j=i+1;j<A.length;j++)\r\n{\r\n  if(A[i]>A[j])\r\n{ int t;\r\n  t=A[j];\r\n  A[j]=A[i];\r\n  A[i]=t;\r\n}\r\n}\r\nSystem.out.print(\"排序后的数组：\");\r\nfor(int i=0;i<A.length;i++)\r\nSystem.out.print(A[i]+\" \");\r\n}\r\n}	   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4671,42,609,63,'	one				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4672,42,609,62,'		public class paixu {\r\n	public static void main(String []args)\r\n	{\r\n		int temp =0;\r\n		int a[]={30,1,-9,70,25};\r\n		for(int i=0;i<a.length-1;i++)\r\n		{\r\n			for(int j=0;j<a.length-i-1;j++)\r\n			{\r\n				if(a[j]>a[j+1])\r\n				{\r\n					temp=a[j+1];\r\n					a[j+1]=a[j];\r\n					a[j]=temp;\r\n				}\r\n			}\r\n		}\r\n		for(int i=0;i<a.length;i++)\r\n			System.out.println(a[i]);\r\n	}\r\n\r\n}			   \r\n					   ',40,30,'					   ',0,'','',NULL),
 (4673,42,609,65,'				public class sushu {\r\n	public static void main(String[] args)\r\n	{        int []primearray=new int[30]; \r\n                 int num=1;\r\n		int count=30;\r\n		for(int i=2;i<200;i++)\r\n		{\r\n			int j=2;\r\n			while(i%j!=0)\r\n				j++;\r\n			if(j==i)\r\n			{\r\n				System.out.println(i);\r\n                              primearray[num++]=i;\r\n				count--;\r\n			}\r\n			if(count==0)\r\n				break;\r\n		}\r\n	}\r\n\r\n}\r\n	   \r\n					   ',40,30,'					   ',0,'','',NULL),
 (4674,41,584,63,'	one				   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4675,41,584,65,'	void Work(int p,int prime[])\r\n        {     bool isPrime(int n)\r\n              {     if(n<2)\r\n                    return false;\r\n                    for(int i=2;i<n;i++)\r\n                         if(n%i= =0)\r\n                         return false;\r\n                    else\r\n                    {   return ture; p=n;}\r\n              for(int count=0;count<=30;)\r\n              {    while(isPrime())\r\n                   {    for(int i=0,i<=30,i++)\r\n                            prime[i]=p;}\r\n              count++;\r\n               }\r\n         }				   ',40,20,'				程序没有写完整	   ',0,'','',NULL),
 (4676,41,584,62,'	import java.util.Arrays;\r\n        public class AB{\r\n          public static void main (String[] args)\r\n             {    int[] A={30,1,-9,70,25};\r\n                  Arrays.sort(A);\r\n              }\r\n         }				   ',40,35,'					   ',81,'81','刘晟',NULL),
 (4677,41,568,63,'one	   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4678,41,568,65,'public class PrimeArray {\r\n	public static void main(String[] args) {\r\n		int [] prime=new int[30];\r\n		prime[0]=2;\r\n		int num=1;\r\n		for(int i=3;i<=1000;i+=2)\r\n		{\r\n			boolean f=true;\r\n			for(int j=2;j<i;j++) \r\n			{\r\n				if(i%j==0)\r\n				{f=false;break;}\r\n			}\r\n			if(!f) {continue;}\r\n			prime[num++]=i;\r\n			if(num==30)break;\r\n		}\r\n	}\r\n\r\n}\r\n',40,35,'					   ',0,'','',NULL),
 (4679,41,568,62,'public class Sort {\r\n	public static void main(String[] args) {\r\n		int[] A= {30,1,-9,70,25};\r\n		for(int i=0;i<5;i++)\r\n			for(int j=0;j<4-i;j++)\r\n			{\r\n				if(A[j]>A[j+1])\r\n				{\r\n					int t=A[j];\r\n					A[j]=A[j+1];\r\n					A[j+1]=t;\r\n				}\r\n			}\r\n	}\r\n}  ',40,35,'					   ',0,'','',NULL),
 (4680,41,582,63,'one\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4681,41,582,65,'class number{\r\n  public static voidmain(String[] args){\r\n   int i,j,n=0;\r\n   int prime[30];\r\n   for(j=2;j<=10;j++){\r\n     for(i=2;i<=j/2;i++)\r\n     {\r\n       if(j%i==0)\r\n       break;\r\n      }\r\n    if(i>j/2){\r\n      prime[n]=j;\r\n      n++;\r\n     }\r\n   if(n==29)\r\n   break;\r\n   }\r\n  }\r\n}\r\n					   ',40,25,'				 int prime[30];这是什么意思？	   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4682,41,582,62,'public class Sort\r\n{\r\n  public static voidmain(String[] args)\r\n  {\r\n     int A[5]={30,1,-9,70,25};\r\n     for(int i=0;i<3;i++)\r\n     {\r\n        for(int j=i;j<3;j++)\r\n        {\r\n           if(a[j]>a[j+1])\r\n           {\r\n              int x=a[j+1];\r\n              a[j+1]=a[j];\r\n              a[j]=x;\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n					   ',40,25,'					        int A[5]={30,1,-9,70,25};这个能运行吗？',0,'','',NULL),
 (4683,41,579,63,'one		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4684,41,579,65,'public class primes{\r\n public static void main (String []args){\r\n  int []prime=new int [30];\r\n  int prime[0]=2;\r\n  int num=1;\r\n  System.out.println(2+\"   \");\r\n for(int i=3;i<1000;i+=2)\r\n  {boolean f=true;\r\n    for(int j=2;j<i;j++){\r\n      {if(i%j= =0) f=false;break;}\r\n   }\r\n  }\r\n   if(!f){continue;}\r\n    prime[num++]=i;\r\n   System.out.println(i+\"   \");\r\n   if(num= =30) break;\r\n }\r\n}\r\n					   ',40,20,'					   语法错误',81,'81','翁佳琦',NULL),
 (4685,41,579,62,'public class Sort{\r\n public static void main(String []args){\r\n  int []A={30,1,-9,70,25};\r\n for(int i=0;i<A.length;i++)\r\n   {int t;\r\n     for(int j=i;j<A.length;j++)\r\n     {\r\n        if(A[i]>a[j])\r\n        {t=A[j];A[j]=A[i];A[i]=t;}\r\n      }\r\n    }\r\n  System.out.println(\"排序后的顺序为：\");\r\n     for(int i=0;i<A.length;i++)\r\n        System.out.println(A[i]+\"   \");\r\n  }\r\n}\r\n					   ',40,30,'					      语法错误',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4686,41,560,63,'	one				   \r\n					   ',20,20,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4687,41,560,65,'public class PrimeArray{\r\n   public static void main(String args[]){\r\n       int[]primearray=new int[30];\r\n        primearray[0]=2;\r\n        int num=1;\r\n        System.out.print(2+\"\");\r\n          for(int i=3;i<=1000;i+=2){\r\n            boolean f=true;\r\n            for (int j=2;j<1;j++){\r\n              if(i%j==0){\r\n              f=false;\r\n               break;}\r\n         }\r\n         if(!f){continue;}\r\n          primearray[num++]=i;\r\n               System.out.print(i+\"\");\r\n             if(num%5==0)System.out.println();\r\n              if(num==30)break;\r\n        }\r\n    }\r\n}			   \r\n					   ',40,30,'					   \r\n					   ',85,'80,85,83,82,83','王伟杰,简江进,董海林,秦梓韵,魏宗邦',NULL),
 (4688,41,560,62,'public class booktest{\r\npublic static void main (String[] args){\r\n  int a[]={30,1,-9,70,25};\r\n   System.out.print(\"数组原始顺序：\");\r\n    for (int i=0;i<a.length;i++) System.out.print(a[i]+\"\");\r\n     for (int i=0;i<a.length;i++){\r\n     int lowerIndex=i;\r\n     for (int j=i+1;j<a.length;j++)\r\n        if (a[j]<a[lowerIndex])	lowerIndex=j;\r\n       int temp=a[i];\r\n       a[i]=a[lowerIndex];\r\n         a[lowerIndex]=temp;\r\n       }\r\n    System.out.print(\"\\n数组排序后的顺序：\");\r\n      for (int i=0;i<a.length;i++)  System.out.print(a[i]+\"\");\r\n   }\r\n}			   \r\n					   ',40,30,'					   \r\n					   ',90,'80,89,81,88,84,81,85,90,86','杨利英,徐昊,陈典,王伟杰,简江进,123456,董海林,徐百川,张陈鹏',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4689,41,559,63,'		one			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4690,41,559,65,'public class prime{\r\n   public static void main(String args[]){\r\n     int[] prime=new int[30];\r\n     prime[0]=2;\r\n     int x=1;\r\n     System.out.print(2+\"\");{\r\n    Boolean f=true;\r\n          for(int j=2;j<i;j++){\r\n          if(i%j==0){\r\n          f=false;\r\n          break;\r\n          }\r\n       }\r\n     if(!f){continue;}\r\n    prime[x++]=i;\r\n        System.out.print(i+\"\");\r\n     if(x%5==0)System.out.print();\r\n     if(x==30)break;\r\n     }\r\n  }\r\n}\r\n\r\n\r\n	   ',40,30,'					   ',0,'','',NULL),
 (4691,41,559,62,'\r\npublic class A {\r\npublic static void main{String[] args)\r\n{int[]A={30,1,-9,70,25};\r\nArrays.sort(A);\r\nSystem.out.print(\"升序排序为:\");\r\nfor(int a:A)\r\nSystem.out.print(a);\r\n}\r\n}			   ',40,35,'					   ',0,'','',NULL),
 (4692,42,597,63,'one					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4693,42,597,62,'public class sort {\r\n	 \r\n	public static void main(String[] args){\r\n		int[] A={30,1,-9,70,25};\r\n		for(int i=5;i>0;i--){\r\n			for(int j=0;j<i-1;j++){\r\n				if(A[j]>A[j+1])\r\n				{int c;c=A[j+1];A[j+1]=A[j];A[j]=c;}\r\n			}\r\n		}\r\n		System.out.println(A[0]);\r\n		System.out.println(A[1]);\r\n		System.out.println(A[2]);\r\n		System.out.println(A[3]);\r\n		System.out.println(A[4]);\r\n	}\r\n}					   \r\n					   ',40,30,'				为什么不用循环输出	   ',0,'','',NULL),
 (4694,42,597,65,'public class find_and_sort {\r\n	 \r\n	public static void main(String[] args){\r\n		int i=1,num=3,c;\r\n		int[] sushu=new int[30];\r\n		sushu[0]=2;\r\n		while(i<30){\r\n			for(c=2;c<=num/2;c++){\r\n				if(num%c==0)break;\r\n			}\r\n			if(c>num/2){sushu[i]=num;i++;}\r\n			num++;\r\n		}\r\n		for(int j=0;j<30;j++){\r\n			System.out.println(sushu[j]);\r\n		}	\r\n	}\r\n}					   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (4695,42,608,63,'		one			   \r\n					   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4696,42,608,62,' public class booktest{\r\n   public static void main(String[] args){\r\n     int a[]={30,1,-9,70,25};\r\n     System.out.print(\"数组原始顺序:\");\r\n     for (int i=0;i<a.length;i++) System.out.print(a[i]+\"\");\r\n     for (int i=0;i<a.length;i++){\r\n           int lowerIndex=i;\r\n           for (int j=i+1;j<a.length;j++)\r\n                if (a[j]<a[lowerIndex]) lowerIndex=j;\r\n            int temp=a[i];\r\n     a[i]=a[lowerIndex];\r\n         a[lowerIndex]=temp;\r\n}\r\nSystem.out.print(\"\\数组排序后的顺序:\");\r\n  for (int i=0;i<a.length;i++) System.out.print(a[i]+\"\");\r\n    }\r\n}			   \r\n					   \r\n					   \r\n					   \r\n					   ',40,20,'					   代码与别人重复',88,'85,82,87,84,85,88','马芸芸,徐昊,简江进,徐百川,张凡,张陈鹏',NULL),
 (4697,42,608,65,'public class PrimeArray{\r\n         public static void main(String args[]){\r\n              int[] primearry=new int[30];\r\n              primearry[0]=2;\r\n   int num=1;\r\n   System.out.print(2+\"\");\r\n      for(int i=3;i<=1000;i+=2){\r\n          boolean f=true;\r\n          for (int j=2;j<i;j++){\r\n           if(i%j==0){\r\n               f=false;\r\n               break;\r\n              }\r\n            }\r\n           if(!f) {continue;}\r\n           primearry[num++]=i;\r\n               System.out.print(i+\"\");\r\n           if(num%5==0)System.out.println();\r\n           if(num==30)break;\r\n         }\r\n    }\r\n}		   \r\n					   \r\n					   \r\n					   \r\n					   ',40,20,'				代码与别人重复	   ',85,'83,81,85','马芸芸,简江进,秦梓韵',NULL),
 (4698,41,564,63,'one					   ',20,20,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4699,41,564,65,'public class prime{\r\n  private static boolean IsPrime(int x){\r\n       for(int i=2;i<x;i++)\r\n         { if(x==2) return true;\r\n           if(x%i==0) return false;\r\n         }\r\n       return true;\r\n }\r\npublic static void main(String[] args){\r\n  int t=0;\r\n  int n=100,j=0;\r\n  int []prime=new int [30];\r\n  for(int i=2;i<n;i++)\r\n      { if(IsPrime[i])\r\n          { prime[j]=i;\r\n            j++;t++;}\r\n        if(t<30) n++;\r\n        if(t=30) break;}\r\n  for(int m=0;m<30;m++)\r\n      System.out.println(prime[m]);\r\n }\r\n}				   ',40,20,'					   \r\n					   程序编译不通过，有语法问题',0,'','',NULL),
 (4700,41,564,62,'public class test{\r\npublic static void main(String[] args){\r\n       int[]A={30,1,-9,70,25};\r\n       int t;\r\n       System.out.println(\"A[]=\");\r\n       for(int m=0;m<A.length;m++)\r\n          {System.out.println(A[m]);}\r\n       System.out.println(\"}由大到小排序后为：A[]={\");\r\n       for(int i=0;i<A.length;i++)\r\n           for(int j=i;j<A.length;j++)\r\n               if(A[j]<A[i])\r\n               t=A[j];A[j]=A[i];A[i]=t;}\r\n       for(int n=0;n<A.length;n++)\r\n          {System.out.println(A[n]);}\r\n       System.out.println(\"}\");\r\n}\r\n}\r\n					   ',40,30,'					   \r\n					   ',0,'','',NULL),
 (4701,41,571,63,'one',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4702,41,571,65,'public class get30PrimeNum {\r\n    public static void main(String[] args) {\r\n        int Prime[] = new int[30];\r\n        Prime[0] = 2;\r\n        int i = 1;\r\n        boolean mark;\r\n        for (int j = 3; i != 30; j++) {\r\n            if (j % 2 == 0)\r\n                continue;\r\n            mark = true;\r\n            for (int k = 2; k <= Math.sqrt(j); k++) {\r\n                if (j % k == 0) {\r\n                    mark = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (mark)\r\n                Prime[i++] = j;\r\n        }\r\n    }\r\n}',40,35,'					   ',0,'','',NULL),
 (4703,41,571,62,'public class BubbleSort {\r\n    public static void main(String[] args) {\r\n        int[] A = { 30, 1, -9, 70, 25 };\r\n        final int n=4;\r\n        for(int i=n;i>0;i--)\r\n            for(int j=0;j<i;j++)\r\n                if (A[n - j] < A[n - j - 1]) {\r\n                    A[n - j] += A[n - j - 1];\r\n                    A[n - j - 1] = A[n - j] - A[n - j - 1];\r\n                    A[n - j] -= A[n - j - 1];\r\n                }\r\n    }\r\n}',40,35,'					   ',0,'','',NULL),
 (4704,41,576,63,'		one			   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4705,41,576,65,'public class PrimeArray {\r\n	public static void main(String args[]) {\r\n           int[] primearry=new int[30];\r\n           primearry[0]=2;\r\n           int num=1;\r\n           System.out.print(2+\"\");\r\n        for(int i=3;i<=1000;i+=2){\r\n             boolean f=ture;\r\n             for(int j=2;j<i;j++){\r\n               if(i%j==0){\r\n		   f=false;\r\n                   break;\r\n}',40,30,'					   ',0,'','',NULL),
 (4706,41,576,62,'public class booktest{\r\n  public static void main(String[]args){\r\n    int a[]={30,1,-9,70,25};\r\n    System.out.print(\"数组原始顺序:\");\r\n  for(int i=0;i<a.length;i++) System.out.print(a[i]+\"\");\r\n  for(int i=0;i<a.length;i++){\r\n      int lowerIndex=i;\r\n      for(int j=i+1;j<a.length;j++）\r\n          if(a[j]<a[lowerIndex]) lowerIndex=j;\r\n      int temp=a[i];\r\n  a[i]=a[lowerIndex];\r\n      a[lowerIndex]=temp;\r\n    }\r\n  System.out.print(\"\\n数组排序后的顺序:\");\r\n    for(int i=0;i<a.length;i++)System.out.print(a[i]+\"\");\r\n  }\r\n}',40,30,'					   ',89,'85,89,82,84,80,82,82,89,80,86','杨利英,马芸芸,陈典,王伟杰,简江进,郑奇隆,董海林,徐百川,张凡,张陈鹏',NULL),
 (4707,41,575,63,'					   one two default',20,0,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4708,41,575,65,'		public class PrimeArray{\r\npublic static void main(String args[]){\r\nint[]primearry=new int [30];\r\nprimearry[0]=2;\r\nint num=1;\r\nSystem.out.print(2+\" \");\r\n for(int i=3;i<=1000;i+=2){\r\n  boolean f=true;\r\n   for(int j=2;j<i;j++){\r\n    if(i%j==0){\r\n     f=false;\r\n     break;\r\n}\r\n}\r\nif(!f){continue;}\r\nprimearry[num++]=i;\r\n  System.out.print(i+\" \");\r\nif(num%5==0)System.out.println();\r\nif(num==30)break;\r\n}\r\n}\r\n}\r\n			   ',40,30,'					   ',90,'84,90,82,82,87,88,84,84','杨利英,郑奇隆,卞金凤,侯美伊,曾金波,李浩,顾海泉,张陈鹏',NULL),
 (4709,41,575,62,' public class booktest{\r\npublic static void main(String[] args){\r\nint a[]={30,1,-9,70,25};\r\nSystem.out.println(\"数组原始顺序：\");\r\nfor(int i=0;i<a.length;i++)System.out.print(a[i]+\" \");\r\nfor(int j=i+1;j<a.length;i++){\r\nint lowerIndex=i;\r\nfor(int j=i+1;j<a.length;j++)\r\nif(a[j]<a[lowerIndex])lowerIndex=j;\r\nint temp=a[i];\r\na[i]=a[lowerIndex];\r\na[lowerIndex]=temp;\r\n}\r\nSystem.out.print(\"\\n数组排序后的顺序：\");\r\nfor(int i=0;i<a.length;i++)System.out.print(a[i]+\" \");\r\n}\r\n}\r\n					   ',40,30,'					   ',91,'94,81,82,91,88,80,88,83','杨利英,马芸芸,徐昊,郑奇隆,侯美伊,张凡,李浩,张陈鹏',NULL),
 (4710,42,595,63,'	one				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4711,42,595,62,'思想：初始化数组，用Arrays.toString()实现排序\r\n\r\n代码：\r\npublic class Arrays\r\n{\r\n	public static void main(String[] args) \r\n	{\r\n		int []A={30,1,-9,70,25};\r\n		System.out.println(Arrays.toString(A));//输出排序之前的数组\r\n		Arrays.sort(A);\r\n		System.out.println(Arrays.toString(A));//输出按从小到大排序后的数组\r\n		\r\n	}\r\n\r\n}					   \r\n					   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (4712,42,595,65,'思想：一、从最小的奇数（3）开始寻找素数，偶数不需要寻找；\r\n      二、这样找到的素数就是从小到大排序的，存入数组prime中并输出。\r\n\r\n\r\n\r\n代码：\r\n\r\npublic class Prime_arrays\r\n{\r\n	public static void main(String[] args)\r\n	{\r\n		final int MAX=150,size=30;\r\n		int prime[]=new int [size];\r\n		int i,j,k,n;\r\n		prime[0]=2;     //最小的素数\r\n		n=1;            //素数个数\r\n                i=1;            //下一个素数存放数组下标位置\r\n                k=3;		//从奇数开始测试，偶数不需要测试\r\n                do\r\n		{\r\n			j=0;\r\n			while((j<n)&&(k%prime[j]!=0));\r\n			j++;\r\n			if(j==n)\r\n			{\r\n				prime[i]=k;\r\n				i++;\r\n				n++;\r\n			}\r\n			k=k+2;    //测试下一个基数是否是素数\r\n		}\r\n		while(k<MAX);\r\n		System.out.println(\"All prime in \"+MAX+\"are:\");\r\n		for(i=0;i<prime.length;i++);     //输出一维数组\r\n		{\r\n			System.out.println(\"\\t \"+prime[i]);\r\n			if((i+1)%10==0)\r\n				System.out.println();\r\n				\r\n		}\r\n		\r\n		System.out.println(\"n=\"+n);\r\n	}\r\n\r\n}\r\n		   \r\n					   \r\n					   ',40,20,'					   程序有问题，是死循环',0,'','',NULL),
 (4713,42,611,63,'one		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4714,42,611,62,'import java.util.Arrays;\r\npublic class sort{\r\n  public static void main (String[] args){\r\n                   int[] A=new int[]{30,1,-9,70,25};\r\n                   Arrays.sort(A);\r\n                   System.out.println(\"A数组的元素由小到大排序为:\"+Arrays.toString(A));\r\n  }\r\n}\r\n	\r\n					   ',40,30,'					   ',0,'','',NULL),
 (4715,42,611,65,'public class Prime_array\r\n{\r\n  public static void main(String args[])\r\n  {\r\n    final int MAX=100,SIZE=30;\r\n    int prime[]=new int [SIZE];\r\n    int i,j,k,n;\r\n    prime[0]=2;\r\n    n=1;\r\n    i=1;\r\n    k=3;\r\n    do\r\n    {\r\n      j=0;\r\n      while((j<n)&&(k%prime[j]!=0))\r\n         j++;\r\n      if(j==n)\r\n      {\r\n           prime[i]=k;\r\n           i++;\r\n           n++;\r\n   } 			\r\n   k=k+2;\r\n}  while(k<MAX);\r\nSystem.out.println(\"All primes in 2..\"+MAX+\"are:\");\r\nfor (i=0;i<prime.length;i++)	   \r\n{\r\n     System.out.print(\"\\t\"+prime[i]);\r\n     if((i+1)%10==0)System.out.println();\r\n\r\n         }\r\n         System.out.println(\"n=\"+n);\r\n      }\r\n   }\r\n					   ',40,40,'					   ',0,'','',NULL),
 (4716,42,592,63,'one					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4717,42,592,62,'public class paixu {\r\n  public static void main (String[] args){\r\n    int A[]={30,1,-9,70,25};\r\n    System.out.print(\"数组原顺序：\");\r\n  for (int i=0;i<A.length;i++) System.out.print(A[i]+\" \");\r\n  for (int i=0;i<A.length;i++)\r\n      { int low=i;\r\n        for(int j=i+1;j<A.length;j++)\r\n            if(A[j]<A[low]) low=j;\r\n        int t=A[i];\r\n            A[i]=A[low];\r\n            A[low]=t;\r\n      }\r\n    System.out.print(\"\\n数组由小到大的排序：\");\r\n      for (int i=0;i<A.length;i++) System.out.print(A[i]+\" \");\r\n    }\r\n}\r\n      \r\n					   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (4718,42,592,65,'public class PrimeArray {\r\n  public static void main (String args[]){\r\n      int[] primearry=new int[30];\r\n      primearry[0]=2;\r\n    int num=1;\r\n    System.out.print(2+\" \");\r\n      for(int i=3;i<=100;i++)\r\n         { boolean f=true;\r\n           for(int j=2;j<i;i++)\r\n              { if(i % j==0)\r\n                  { f=false;\r\n                    break;\r\n                  }\r\n              }\r\n           if(!f) {continue;}\r\n           primearry[num++]=i;\r\n           System.out.print(i+\" \");\r\n           if(num % 5==0) System.out.println();\r\n           if(num == 30)break;\r\n          }\r\n       }\r\n}\r\n  \r\n\r\n			   \r\n					   ',40,25,'					   程序错误',85,'82,80,80,85','马芸芸,王伟杰,简江进,董海林',NULL),
 (4719,41,569,63,'one			   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4720,41,569,65,'public class Sushu {\r\n	public static void main(String[] args) {\r\n		int A[]=new int [30];\r\n		A[0]=2;\r\n		int num=1;\r\n		System.out.print(2+\" \");\r\n		for(int i=3;i<1000;i++)\r\n		{\r\n			boolean f=true;\r\n			for(int j=2;j<i;j++)\r\n			{\r\n				if(i%j==0)\r\n				{\r\n					f=false;\r\n					break;\r\n				}\r\n			}\r\n				if(!f) continue;\r\n				A[num++]=i;\r\n				System.out.print(i+\" \");\r\n				if(num%5==0)  System.out.println();\r\n				if(num==30)   break;\r\n		}\r\n	}\r\n}\r\n				   ',40,35,'					   ',86,'86,80','杨程羽,顾海泉',NULL),
 (4721,41,569,62,'	public class Shuzu {\r\n	public static void main(String[] args) {\r\n		int A[]={30,1,-9,70,25};\r\n		int a=0;\r\n		for(int i=0;i<5;i++)\r\n		{\r\n			for(int j=i+1;j<5;j++)\r\n			{\r\n				if(A[i]>A[j])\r\n				{\r\n					a=A[i];\r\n					A[i]=A[j];\r\n					A[j]=a;\r\n				}\r\n			}\r\n		}\r\n		for(int k=0;k<5;k++)\r\n		{\r\n			System.out.print(A[k]+\" \");\r\n		}\r\n	}\r\n}				   ',40,40,'					   ',0,'','',NULL),
 (4722,41,574,63,'					one   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4723,41,574,65,'public class PrimeArray {\r\n    public static void main(String args[]) {\r\n      int[] prime=new int[30];\r\n      prime[0]=2;\r\n    int num=1;\r\n    System.out.print(2 + ” ”);\r\n      for(int i=3;i<=1000;i+=2){\r\n        boolean f = true;\r\n        for (int j=2;j<i;j++) {\r\n          if(i % j == 0){\r\n            f= false;\r\n            break;\r\n         }\r\n        }\r\n        if(!f) {continue;}\r\n        prime[num++]=i;\r\n          System.out.print(i + ” ”);\r\n        if(num%5 == 0)System.out.println();\r\n        if(num==30)break;\r\n  }\r\n }\r\n}\r\n 				   \r\n					   ',40,30,'			有语法错误		   ',82,'80,80,82','马芸芸,秦梓韵,魏宗邦',NULL),
 (4724,41,574,62,'public class booktest {\r\n  public static void main(String[] args) {\r\n    int a[]={30,1,-9,70,25};\r\n    System.out.print(“数组原始顺序：“);\r\n    for (int i=0;i<a.length;i++) System.out.print(a[i] + ” ”);\r\n    for (int i = 0; i < a.length; i++) {\r\n      int lowerIndex = i;\r\n      for (int j = i + 1; j < a.length; j++)\r\n         if (a[j] < a[lowerIndex]) lowerIndex = j;\r\n       int temp = a[i];\r\n     a[i] = a[lowerIndex];\r\n       a[lowerIndex] = temp;\r\n      }\r\n     System.out.print(“\\n数组排序后的顺序： “);\r\n       for (int i=0;i<a.length;i++) System.out.print(a[i] + ” ”);\r\n }\r\n}					   \r\n					   ',40,30,'					   	有语法错误',86,'88,84,86,85,80','马芸芸,徐昊,123456,徐百川,张陈鹏',NULL),
 (4725,42,603,63,'one					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4726,42,603,62,'public class booktest{\r\n  public static void main(String[] args){\r\n    int a[]={30,1,-9,70,25}\r\n    system.out.print{\"数组原始顺序\"}；\r\n     for{int i=0;i<a.length;i++} System.out.print{a[i]+\" \"};\r\n    for{int i=0;i<a.length;i++}{\r\n        int lowerIndex=i;\r\n        for(int j=i+1;j<a.length;j++)\r\n            if(a[j]<a[lowerIndex])lowerIndex=j;\r\n        int temp=a[i];\r\n     a[i]=a[lowerIndex];\r\n         a[lowerIndex]=temp;\r\n       }\r\n    System.out.print(\"\\n数组排序后的顺序：\");\r\n       for(int i=0;i<a.length;i++)System.out.print(a[i]+\" \");\r\n       }\r\n}					   ',40,25,'			代码错误		   ',82,'90,89,85,83,84,82','马芸芸,徐昊,王伟杰,简江进,董海林,张陈鹏',NULL),
 (4727,42,603,65,'public class PrimeArray{\r\n           public static void main(String args[]){\r\n                int[] primearry=new int[30];\r\n                primearry[0]=2;\r\n             int num=1; \r\n             System.out.print(2+\" \");\r\n                  for(int i=3;i<=1000;i+=2){\r\n                      boolean f=true;\r\n                      for(int j=2;j<i;j++){\r\n                        if(i%j==0){\r\n                           f=false;\r\n                           break;\r\n                          }\r\n                          }\r\n                          if(!f){continue;}\r\n                          primearry[num++]=i;\r\n                             System.out.print(i+\" \");\r\n                          if(num%5==0)System.out.println();\r\n                          if(num==30)break;\r\n                  }\r\n          }\r\n}				   ',40,35,'					   ',0,'','',NULL),
 (4728,42,594,63,'		one			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4729,42,594,62,'  import java.util.Arrays;\r\n\r\n  public  class xiao{\r\n	  public static void main(String []args)\r\n	  {int A[]= {30,1,-9,70,25};\r\n	  Arrays.sort(A);\r\n	  for(int a: A)\r\n		  System.out.println(a);\r\n	  \r\n	  }\r\n  }\r\n	  			   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (4730,42,594,65,'	 public  class xiao{\r\n	  public static void main(String []args)\r\n	  {int []prime=new int[30];\r\n	  int j=1;\r\n	  for(int i=0;i<30;i++)\r\n	  {while(true)\r\n	  {j++;int a=2;\r\n	  for(;a<=j/2;a++)\r\n		  if(j%a==0)\r\n			  break;\r\n	  if(a==(j/2+1))\r\n	  {prime[i]=j;\r\n	  break;}\r\n	  \r\n	  }\r\n          }\r\n	 \r\n	  }\r\n	  }				   \r\n					   ',40,30,'					   ',0,'','',NULL),
 (4731,42,591,63,'				one	   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4732,42,591,62,'import java.util.Arrays;\r\npublic class ForDemo {\r\n	public static void main(String[]args){\r\n		int []A={30,1,-9,70,25};\r\n		Arrays.sort(A);\r\n		for(int i=0;i<=5;i++)System.out.print(A[i]+\",\");\r\n		\r\n	}\r\n\r\n}\r\n			   \r\n					   ',40,35,'					   ',81,'81','卢姿彤',NULL),
 (4733,42,591,65,'		\r\npublic class Primearray {\r\n  public static void main(String[]args)\r\n	int[]Primearray=new int [30];\r\n	Primearray[0]=2;\r\n	int num=1;\r\n	System.out.println(2+\"\");\r\n	for(int i=3;i<=1000;i+=2){\r\n		boolean f=true;\r\n		for(int j=2;j<i;j++){\r\n			if(i%j==0){\r\n				f=false;break;\r\n			}\r\n		}\r\n		if(!f){continue;}\r\n	 Primearray[num++]=i;System.out.println(i+\"\");\r\n	 if(num%5==0)System.out.println();\r\n	 if(num==30)break;}\r\n\r\n}			   \r\n					   ',40,30,'					   ',85,'82,83,84,82,85','陈典,郑奇隆,侯美伊,李浩,顾海泉',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4734,42,589,63,'			one		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4735,42,589,62,'public class Arrays {\r\n\r\n	public static void main(String[] args){\r\n	int a[]={30,1,-9,70,25};\r\n	System.out.print(\"数组原始顺序：\");\r\n	for(int i=0;i<a.length;i++)\r\n	System.out.print(a[i]+\"   \");\r\n	for(int i=0;i<a.length;i++){\r\n	int lowerindex=i;\r\n	for(int j=i+1;j<a.length;i++)\r\n	if(a[j]<a[lowerindex])lowerindex=j;\r\n	int temp=a[i];\r\n	a[i]=a[lowerindex];\r\n	a[lowerindex]=temp;}\r\n	System.out.print(\"\\n数组排序后的顺序：\");\r\n	for(int i=0;i<a.length;i++)\r\n	System.out.print(a[i]+\"   \");\r\n	}}	   		   ',40,30,'		与别人重复的太多			   ',84,'87,88,88,84','杨利英,陈典,郑奇隆,李浩',NULL),
 (4736,42,589,65,'public class PrimeArray {\r\n	public static void main(String args[]){\r\n		int []prime=new int[30];\r\n		prime[0]=2;\r\n		int num=1;\r\n		System.out.print(2+\" \");\r\n		for(int i=3;i<=1000;i+=2){\r\n		boolean f=true;\r\n		for(int j=2;j<1;j++){\r\n		if(i%j==0){\r\n		f=false;\r\n		break;}\r\n		}\r\n		if(!f){continue;}\r\n		prime [num++]=i;\r\n		System.out.print(i+\" \");\r\n		if(num%5==0)System.out.println();\r\n		if(num==30)break;}\r\n		}}			   \r\n						   ',40,30,'			与别人重复的太多		   ',87,'82,83,81,84,80,82,87','陈典,杨程羽,郑奇隆,卞金凤,曾金波,李浩,顾海泉',NULL),
 (4737,41,566,63,'one			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4738,41,566,65,'public class Prime{\r\n  public static void main(String args[]) {\r\n   int[] prime=new int[30];\r\n   prime[0]=2;\r\n   int n=1;\r\n   System.out.print(2+” ”);\r\n   for(int i=3;i<=1000;i =2){\r\n   boolean f = true;\r\n   for (int j=2;j<i;j++)\r\n   if(i % j == 0){\r\n   f= false;\r\n   break;\r\n   }\r\n  }\r\n if(!f) {continue;}\r\n prime[n++]=i;\r\n System.out.print(i+” ”);\r\n if(n%5 == 0)System.out.println();\r\n if(n==30)break;\r\n  }\r\n }\r\n}  \r\n					   ',40,30,'					   ',0,'','',NULL),
 (4739,41,566,62,'public class Array Sorting{\r\npublic static void main (String[] args){\r\n  int A[]={30,1,-9,70,25};\r\n  int temp;\r\n  for(int i=0;i<A.length;i++)\r\n {\r\n   for(int j=i+1;j<A.length;i++)\r\n  {\r\n   if (A[i]>A[j])\r\n    {\r\n      temp=A[i];\r\n      A[i]=A[j];\r\n      A[j]=temp;\r\n     }\r\n    }\r\n   }\r\n  }		   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (4740,42,588,63,'one					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4741,42,588,62,'public class Array{\r\npublic static void main(String[] args) {  \r\nint a[]={30,1,-9,70,25}; \r\nSystem.out.print(\"数组原始顺序：\");\r\nfor (int i=0;i<a.length;i++) \r\nSystem.out.print(a[i] + \" \");\r\nfor (int i=0; i<a.length; i++) {        \r\nint m=i;   \r\nfor (int j=i+1; j<a.length;j++)  \r\nif (a[j]<a[m])\r\nm=j;   \r\nint temp=a[i];         \r\na[i]=a[m];          \r\na[m]=temp; \r\n}   \r\nSystem.out.print(\"\\n数组排序后的顺序： \");\r\n for (int i=0;i<a.length;i++) System.out.print(a[i] + \" \");  \r\n}  \r\n} \r\n					   ',40,20,'		格式错误			   ',0,'','',NULL),
 (4742,42,588,65,'public class Array{\r\npublic static void main(String args[]){\r\nint[] array=new int[30];\r\nint n=0;\r\nfor(int	i=2;i<=1000;i++){\r\nboolean f=true;\r\nfor(int j=2;j<i;j++){\r\nif(i%j==0){\r\nf=false;\r\nbreak;\r\n}\r\n}\r\nif(!f){continue;}\r\narray[n++]=i;\r\nSystem.out.print(i+\" \");\r\nif(n==30)\r\nbreak;}\r\n}\r\n}\r\n\r\n				   \r\n					   ',40,30,'					   ',0,'','',NULL),
 (4743,41,573,63,'	one				   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4744,41,573,65,'public class primeArray{\r\n         public static void main(String args[]){\r\n         int[]primearry=new int[30];		\r\n	 primearry[0]=2;\r\n     int num=1;\r\n     System.out.print(2+\" \");\r\n        for(int i=3;i<=1000;i+=2){\r\n            boolean f=true;\r\n            for(int j=2;j<i;j++){\r\n               if(i%j==0){\r\n             f=false;\r\n              break;\r\n}\r\n   }\r\n     if(!f){continue;}\r\n     primearry[num++]=i;\r\n         System.out.print(i+\" \");\r\n     if(num%5==0)System.out.println();\r\n     if(num==30)break;\r\n        }\r\n     }\r\n}	   \r\n					   \r\n					   ',40,30,'					   ',81,'85,81,80,80','马芸芸,董海林,秦梓韵,魏宗邦',NULL),
 (4745,41,573,62,'	public class booktest {\r\n          pubilc static void main(String[]args){\r\n	 int a[]={30,1,-9,70,25};\r\n         System.out.print(\"数组原始顺序:\");  \r\n         for (int i=0;i<a.length;i++)System.out.print(a[i]+\" \");\r\n         for (int i=0;i<a.length;i++) {\r\n              int lowerIndex=i;\r\n         for (int j=i+1;j<a.length;j++)\r\n              if (a[j]<a[lowerIndex]) lowerIndedx=j;\r\n        int temp=a[i];\r\n        a[i]=a[lowerIndex];\r\n          a[lowerIndex]=temp;\r\n}\r\n     System.out.print(\"\\n数组排序后的顺序:\");\r\n       for (int i=0;i<a.length;i++)System.out.print(a[i]+\" \");\r\n     }\r\n}\r\n         			   \r\n					   \r\n					   ',40,35,'					   ',87,'84,80,87,83,81','马芸芸,徐昊,董海林,徐百川,张陈鹏',NULL),
 (4746,42,606,63,'	one				   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4747,42,606,62,'public class booktest{\r\n  public static void main(String[]args)	{\r\n  int a[]={30,1,-9,70,25};\r\n  System.out.print(\"数组原始顺序:\");\r\nfor (int i=0;i<a.length;i++)System.out.print(a[i]+\"\");\r\nfor(int=0;i<a.length;i++){\r\n    int lowerIndex=i;\r\n    for(int j=i+1;j<a.length;j++)\r\n            if(a[j]<a[lowerIndex]) lowerIndex=j;\r\n     int temp=a[i];\r\na[i]=a[lowerIndex];\r\na[lowerIndex]=temp;\r\n}\r\nSystem.out.print(\"\\n数组排序后的顺序:\");\r\nfor(int i=0;i<a.length;i++)System.out.print(a[i]+\"\");\r\n}\r\n}			   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',40,25,'				代码与别人得复太多	   ',89,'80,80,85,89','徐昊,陈典,董海林,张陈鹏',NULL),
 (4748,42,606,65,'public class PrimeArray{\r\n  public static void main(String args[]){\r\n           int[]primearry=new int[30];\r\n            primearry[0]=2;\r\nint num=1;\r\nSystem.out.print(2+\"\");\r\nfor (int i=3;i<=1000;i+=2){\r\n      boolean f=true;\r\n      for(int j=2;j<i;j++){\r\n  if(i%j==0){\r\n  f=false;\r\nbreak;}\r\n}\r\nif(!f){continue;}\r\nprimearry[num++]=i;\r\nSystem.out.print(i+\"\");\r\nif(num%5==0)System.out.println():\r\nif(num==30)break;\r\n}\r\n}\r\n}		   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',40,30,'					   ',86,'86','张陈鹏',NULL),
 (4749,42,600,63,'	one   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4750,42,600,62,'	public class BubbleSort{\r\n		public static viod main(String[] args){\r\n                      int[] A={30,1,-9,70,25};\r\n                   for(int i=0;i<A.length-1;i++){\r\n                      for(int j=0;j<A.length-1-i;j++){\r\n                         if(A[j]>A[j+1]){\r\n                         int temp=A[j];\r\n                         A[j]=A[j+1];\r\n                         A[j+1]=temp;}}}\r\n                        for(int num:A){\r\n                        System.out.print(num+\" \");\r\n                     }}}',40,35,'					   ',0,'','',NULL),
 (4751,42,600,65,'  public class PrimeArray{\r\n  public static void main(String args[]){\r\n  int[] primearry=new int[30];\r\n  primearry[2]=2;\r\n  int num=1;\r\n  System.out.print(2\" \");\r\n  for (int i=3;i<1000;i+=2){\r\n  boolean f=true;\r\n  for(int j=2;j<i;j++){\r\n  if(i%j==0){\r\n  f=false;\r\n  break;}}\r\n  if(!f) {continue;}\r\n  primearry[num++]=i;\r\n  System.out.print(i+\" \");\r\n  if(num%5==0)System.out.println();\r\n  if(num==30)break;}}}',40,30,'					   语法有错误',80,'84,87,84,80,80,80','杨利英,陈典,郑奇隆,侯美伊,李浩,张陈鹏',NULL),
 (4752,42,596,63,'		one			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4753,42,596,62,'import java.util.Arrays;\r\n\r\npublic class homework1{\r\n   public static void main(String [] args){\r\n    int[] A=new int[]{30,1,-9,70,25};\r\n    Arrays.sort(A);\r\n    for(int i=0;i<A.length;i++)\r\n    System.out.print(A[i]+\" \");\r\n}\r\n}					   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (4754,42,596,65,'import java.util.Arrays;\r\n\r\npublic class homework1{\r\n public static void main(String[] args)\r\n{\r\n  int m=0;\r\n  int [] prime=new int[30];\r\n  for(int i=2;i<=113;i++)\r\n  {int j;\r\n   for(j=2;j<=(int)Math.sqrt(i);j++)\r\n    if(i%j==0)break;\r\n    if(j>(int)Math.sqrt(i))\r\n    {prime[m]=i;m++;}\r\n}\r\n }\r\n}					   \r\n					   ',40,30,'					   ',0,'','',NULL),
 (4755,41,577,63,'one		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4756,41,577,65,'public static void main(String[] args) {\r\n				int[] prime=new int[30];\r\n				prime[0]=2;\r\n			    int num=1;\r\n				for(int i=3;i<1000;i=i+2)\r\n				{\r\n					int j;\r\n					for(j=2;j<=i/2;j++)\r\n						if(i%j==0) break;\r\n					if(j>i/2)\r\n					{\r\n						prime[num]=i;\r\n						num++;\r\n							\r\n					}\r\n					if (num==30) break;\r\n				}			\r\n				\r\n				for(int k=0;k<30;k++)\r\n				{\r\n					System.out.println(\"素数是\"+prime[k]);\r\n				}\r\n	\r\n	}\r\n					   ',40,35,'					   ',0,'','',NULL),
 (4757,41,577,62,'public static void main(String[] args) {\r\n		int A[]={30,1,-9,70,25};\r\n		for(int i=0;i<5;i++)\r\n		{\r\n			for(int j=i+1;j<5;j++)\r\n			{	\r\n				if(A[i]>A[j]){\r\n					int t=A[i];\r\n					A[i]=A[j];\r\n					A[j]=t;\r\n				}\r\n			}\r\n					\r\n		}\r\n		for(int i=0;i<5;i++)\r\n			System.out.println(A[i]);\r\n	}	   \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4758,42,590,63,'			one		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4759,42,590,62,'	\r\npublic class sort{\r\n          public static void main(String[] args){\r\n             int A[]={30,1,-9,70,25};\r\n             for(int i=0;i<A.length;i++)\r\n             {for(int j=0;j<A.length;j++)\r\n               {if (A[i]<A[j]);\r\n                {int x;\r\n                 x=A[i];\r\n                   A[i]=A[j];\r\n                    A[j]=x;\r\n               }\r\n             }\r\n          }\r\n         for (int i=0;i<A.length;i++)\r\n          System.out.println(A[i]);\r\n         }\r\n         }			   ',40,30,'					   ',84,'84','施雅涵',NULL),
 (4760,42,590,65,'			\r\n\r\npublic class prime {\r\npublic static void main(String[] args){\r\n	 int num =0,i,j;	    \r\n	int []prime=new int [30];\r\n	           for(i=2;i<=500;i++)\r\n	      {for (j=2;j<=i/2;j++)\r\n	         {if(i%j==0)\r\n	        break;\r\n	   }\r\n	   if(i>i/2)	\r\n	{ prime [num++]=i;\r\n	  System.out.print(i+\"  \");}\r\n	if (num==30)break;}\r\n\r\n}}\r\n',40,30,'					   ',0,'','',NULL),
 (4761,42,601,63,'one					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4762,42,601,62,'	   import java.util.*;	\r\n           public class ForDemo{\r\n            public static void main(String[] args){\r\n                int a[]={30,1,-9,70,25};\r\n                Arrays.sort(a);\r\n                for(int i=0;i<5;i++)System.out.print(a[i]\",\");\r\n              }\r\n            }			   ',40,30,'			有语法错误		   ',0,'','',NULL),
 (4763,42,601,65,'	public class PrimeArray{\r\n        public static void main(String args[]){\r\n        int[] primearry=new int[30];\r\n        primearry[0]=2;\r\n        int num=1;\r\n        System.out.print(2+\"\");\r\n        for (int i=3;i<1000;i+=2){\r\n        boolean f=ture;\r\n        for (int j=2;j<i;j++){\r\n        if (i%j==0){\r\n        f=false;\r\n        break;\r\n        }\r\n    }\r\n        if(!f) {continue;}\r\n        primearry[num++]=i;\r\n        System.out.print(i+\"\");\r\n        if(num%5==0)System.out.print();\r\n        if(num==30)break;\r\n      }\r\n   }\r\n}',40,25,'			代码错误		   ',81,'80,83,82,80','杨利英,马芸芸,王伟杰,简江进',NULL),
 (4764,42,604,63,'	one				   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4765,42,604,62,'        public class pk{\r\n        public static void main(String[] args) {\r\n          int a[]={30,1,-9,70,25};\r\nSystem.out.print(\"数据原始顺序:\");\r\nfor (int i=0;i<a.length;i++) System.out.print(a[]+\" \");\r\nfor (int i=0;i<a.length;i++) {\r\nint lowerIndex=i;\r\nfor (int j=i+1;j<a.length;j++)\r\nif (a[j]<a[lowerIndex]) lowerIndex=j;\r\nint temp=a[i];\r\na[i]=a[lowerIndex];\r\na[lowerIndex]=temp;\r\n}\r\nSystem.out.print(\"\\n数组排序后的顺序;\");\r\nfor (int i=0;i<a.length;i++)\r\nSystem.out.print(a[i]+\" \");\r\n}\r\n}	   \r\n					   ',40,30,'				   ',81,'86,88,86,84,81','杨利英,陈典,郑奇隆,侯美伊,张陈鹏',NULL),
 (4766,42,604,65,'			public class pk{\r\npublic static void main(String args[]) {\r\nint[] primearry=new int[30];\r\nprimearry[0]=2;\r\nint num=1;\r\nSystem.out.print_2+\" \");\r\nfor(int i=3;i<=1000;i+=2){\r\nboolean f=true;\r\nfor (int j=2;j<1;j++){\r\nif(i%j==0){\r\nf=false;\r\nbreak;\r\n}\r\n}\r\nif(!f){continue;}\r\nprimearry[num++]=i;\r\nStstem.out.print(i++\" \");\r\nif(num%5==0)System.out.println();\r\nif(num==30)break;\r\n}\r\n}\r\n}		   \r\n					   ',40,25,'				代码错误\r\n	   ',84,'88,90,82,82,80,84,82','陈典,郑奇隆,卞金凤,侯美伊,曾金波,顾海泉,张陈鹏',NULL),
 (4767,42,605,63,'	one			   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4768,42,605,62,'		public class FYHGFJ {\r\n		public static void main(String[] args){\r\n			int a[]={30,1,-9,70,25};\r\n			System.out.print(\"数组原始顺序:\");\r\n			for (int i=0;i<a.length;i++)System.out.print(a[i]+\"\");\r\n			for (int i=0;i<a.length;i++){\r\n				int lowerIndex=i;\r\n				for (int j=i+1;j<a.length;j++)\r\n					if(a[j]<a[lowerIndex])lowerIndex=j;\r\n				int temp=a[i];\r\n				a[i]=a[lowerIndex];\r\n				a[lowerIndex]=temp;\r\n			}\r\n			System.out.print(\"数组排列顺序：\");\r\n			for(int i=0;i<a.length;i++)System.out.print(a[i]+\"\");\r\n			\r\n			\r\n			\r\n				           \r\n			}\r\n			\r\n			\r\n		}			   ',40,35,'					   ',0,'','',NULL),
 (4769,42,605,65,'			public class hbsftmn {\r\n	public static void main(String args[]){\r\n		int[] primearry=new int[30];\r\n		primearry[0]=2;\r\n		int num=1;\r\n		System.out.print(2+\"\");\r\n		for(int i=3;i<=1000;i+=2){\r\n			boolean f=true;\r\n			for (int j=2;j<i;j++){\r\n			if(i%j==0){\r\n				f=false;\r\n				break;\r\n			}\r\n			}\r\n		if(!f){continue;}\r\n		primearry[num++]=i;\r\n		System.out.print(i+\"\");\r\n		if(num%5==0)System.out.println();\r\n		if(num==30)break;\r\n		}\r\n	}\r\n }\r\n\r\n		   ',40,20,'					   代码与别人重复太多\r\n',84,'84,80,85,83,85,87,84','陈典,杜潇,杨程羽,郑奇隆,卞金凤,侯美伊,李浩',NULL),
 (4770,41,570,63,'	one				   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4771,41,570,65,'public class jzz {\r\n	public static void main(String[] args)\r\n	{\r\n		int []a=new int[30];\r\n		a[0]=2;\r\n		int num=1;\r\n		System.out.print(2+\"\");\r\n		for(int i=3;i<=1000;i+=2){\r\n			boolean f=true;\r\n			for(int j=2;j<i;j++){\r\n				if(i%j==0){\r\n					f=false;\r\n				break;\r\n				}\r\n				}\r\n			if(!f){continue;}\r\n			a[num++]=i;\r\n			System.out.print(i+\"\");\r\n			if(num%5==0)System.out.println();\r\n			if(num==30)break;}					   ',40,30,'					   ',85,'86,83,85','杜潇,侯美伊,顾海泉',NULL),
 (4772,41,570,62,'public class jzz {\r\n	public static void maoPao(int[]x)\r\n	{\r\n		for(int i=0;i<x.length;i++){\r\n			for(int j=i+1;j<x.length;j++){\r\n				if(x[i]>x[j]){\r\n					int temp=x[i];\r\n					x[i]=x[j];\r\n					x[j]=temp;\r\n				}\r\n			}\r\n		}\r\n		for(int i:x){\r\n			System.out.print(i+\" \");\r\n		}\r\n	}\r\n	public static void main(String[] args)\r\n	{\r\n	int []A={30,1,-9,70,25};\r\n	System.out.println(\"ss:\");\r\n	maoPao(A);\r\n				\r\n	}\r\n\r\n}\r\n					   ',40,40,'					   ',0,'','',NULL),
 (4773,42,607,63,'			one		   \r\n					   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4774,42,607,62,'public class booktest{\r\n   public static void main (String[] args){\r\n     int a[]={30,1,-9,70,25};\r\nSystem.out.print(\"数组原始顺序：\");\r\nfor (int i=0;i<a.length;i++) System.out.print(a[i]+\"\");\r\nfor(int i=0;i<a.length;i++){\r\n     int lowerIndex=i;\r\n     for(int j=i+1;j<a.length;j++)\r\n         if(a[j]<a[lowerIndex])  lowerIndex=j;\r\n     int temp=a[i];\r\n a[i]=a[lowerIndex];\r\n     a[lowerIndex]=temp;\r\n}\r\nSystem.out.print(\"\\n数组排序后的顺序：\");\r\n   for(int i=0;i<a.length;i++)  System.out.print(a[i]+\"\");\r\n}\r\n}\r\n					   \r\n					   \r\n					   \r\n					   ',40,20,'					  代码与别人重复',81,'82,86,86,83,80,81,81,88,82,89,81','杨利英,马芸芸,徐昊,陈典,王伟杰,简江进,郑奇隆,董海林,徐百川,张凡,李浩',NULL),
 (4775,42,607,65,'public class PrimeArray{\r\n      public static void main (String args[]){\r\n   int[] primearry=new int[30];\r\n  primearry[0]=2;\r\nint num=1;\r\nSystem.out.print(2+\"\");\r\nfor(int i=3;i<=1000;i+=2)     \r\nboolean f=true;\r\n     for(int j=2;j<i;j++){\r\n   if(i%j==0){\r\n  f=false;\r\n  break;\r\n}\r\n}\r\nif(!f) {continue;}\r\nprimearry[num++]=i;\r\n     System.out.print(i+\"\");\r\nif(num%5==0)System.out.println();\r\nif(num==30)break;\r\n}\r\n}\r\n}\r\n					   \r\n					   \r\n					   \r\n					   ',40,20,'					代码与别人重复   ',84,'84,82,86,80,82','陈典,郑奇隆,张凡,曾金波,李浩',NULL),
 (4776,42,593,63,'					one   \r\n					   ',20,20,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4777,42,593,62,'import java.util.Arrays;\r\npublic class Arrays{\r\npublic static void main(String[] args){\r\nint[]A=new int[]={30,1,-9,70,25};\r\nArrays.sort(A)\r\nSystem.out.println(\"由大到小排序：\"Arrays.toString(A));\r\n}\r\n  }		   \r\n					   ',40,20,'					   \r\n					   ',0,'','',NULL),
 (4778,42,593,65,'public class Prime {\r\npublic static void main(String[] args) {\r\n int[] prime=new int[30]; \r\n prime[0]=2; \r\n int n=1;\r\nSystem.out.print(2 + ” ”); \r\nfor(int i=3;i<=1000;i+=2){ \r\nbool f = true;\r\n for (int j=2;j<i;j++){\r\n f=false;\r\n break;\r\n }\r\n   }\r\nif(!f) {continue;} \r\nprime[n++]=i;\r\nSystem.out.print(i + ” ”);\r\n if(n==30)break;\r\n  }\r\n    } \r\n      }				   \r\n					   ',40,20,'					   \r\n					   ',0,'','',NULL),
 (4779,41,572,63,'one				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4780,41,572,65,'public class SuShu {\r\n	public static void main(String args[]){\r\n		int [] num=new int[30];\r\n		num[0]=2;\r\n		int no=1;\r\n		System.out.println(num[0]);\r\n		for(int i=3;no<30;i+=2){\r\n			boolean f=true;\r\n			for(int j=2;j<i;j++)\r\n			{\r\n				if(i%j==0)\r\n				{\r\n					f=false;\r\n					break;\r\n				}\r\n			}\r\n				if(!f)\r\n				{\r\n					continue;\r\n				}\r\n				num[no++]=i;\r\n				System.out.println(i);\r\n				if(no==30)break;\r\n		}\r\n	}\r\n\r\n\r\n}',40,30,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4781,41,572,62,'public class Sort{\r\npublic static void main(string[] args){\r\nint A[]={30,1,-9,70,25}\r\nfor(int i=0;i<A.length;i++)\r\n    for(int j=i+1;j<A.length;j++)\r\n    {\r\n           if(A[i]>A[j])\r\n           {\r\n                 int t=A[i];A[i]=A[j];A[j]=t;\r\n           }\r\n     }\r\n}\r\n}				   ',40,30,'				有语法错误	   ',0,'','',NULL),
 (4782,42,599,63,'		one			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4783,42,599,62,'import java.util.Arrays;\r\n\r\npublic class Test002{\r\n    public static void main(String[] args){\r\n          int []a={30,1,-9,70,25};\r\n          Arrays.sort(a);\r\n          for(int num:a){\r\n              System.out.print(num+\" \");\r\n          }\r\n    }\r\n}			   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (4784,42,599,65,'import java.util.*;\r\n\r\nclass Prime{\r\n    public static Boolean isPrime(int num){\r\n        int a=0;\r\n        for(int i=2;i<num;i++){\r\n            if(num%i==0){\r\n                a++; \r\n            }\r\n        }\r\n        if(a==0){\r\n           return true;\r\n        }else{\r\n          return false;\r\n        }\r\n    }\r\n\r\n    public static int[] primeArrays(int size){\r\n        int []prime=new int[size];\r\n        Random ra=new Random();\r\n        int count=0;\r\n        while(count<30){\r\n            int tar=ra.nextInt(1000)+1;\r\n            if(Prime.isPrime(tar)){\r\n                prime[count]=tar;\r\n                count++;\r\n            }\r\n        }\r\n        return prime;\r\n    }\r\n\r\n    public static void primeArraysShow(int []prime){\r\n        int []num=prime;\r\n        int len=prime.length;\r\n        for(int i=0;i<len;i++){\r\n            System.out.print(num[i]+\" \");\r\n        }\r\n        System.out.println(\"\");\r\n        return;\r\n    }\r\n\r\n    public static void primeArraysSortShow(int []prime){\r\n        int []num=prime;\r\n        int len=prime.length;\r\n        Arrays.sort(num);\r\n        for(int i=0;i<len;i++){\r\n            System.out.print(num[i]+\" \");\r\n        }\r\n        System.out.println(\"\");\r\n        return;\r\n    }\r\n}\r\npublic class Test002{\r\n    public static void main(String[] args){\r\n        int prime[]=Prime.primeArrays(30);\r\n        Prime.primeArraysSortShow(prime);\r\n    }\r\n}		   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (4785,42,598,63,'				one   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4786,42,598,62,'		package wad;\r\n\r\npackage wad;\r\n\r\nimport java.util.Arrays;\r\npublic class wed {\r\n	public static void main (String[] args)\r\n	{int[] A;\r\n	A=new int[]{30,1,-9,70,25};\r\n	Arrays.sort(A);\r\n	System.out.println(Arrays.toString(A));}\r\n	\r\n\r\n}   ',40,35,'					   ',0,'','',NULL),
 (4787,42,598,65,'		package wad;\r\n\r\nimport java.util.Arrays;\r\npublic class wed {\r\n	public static void main (String[] args)\r\n	\r\n	{int[]A=new int[30];\r\n	int i,j,s=0,n;\r\n	for (j=2,n=0;n<30;j++){\r\n		for(i=2;i<=j/2;i++){\r\n			if(j%i==0)\r\n				break;\r\n		}\r\n		if(i>j/2){A[s]=j;\r\n		s++;n++;\r\n		}\r\n		\r\n	}System.out.println(Arrays.toString(A));\r\n	}	\r\n\r\n}			   ',40,35,'					   ',0,'','',NULL),
 (4788,41,613,63,'					   one',20,20,'					   ',0,NULL,NULL,NULL),
 (4789,41,613,65,'			public class PrimeArray {\r\n		  public static void main(String args[]) {			  \r\n                int[] primearry=new int[30];			  \r\n                primearry[0]=2;\r\n		    	int num=1;\r\n		    	System.out.print(2 + \" \");	    	\r\n		        for(int i=3;i<=1000;i+=2){ \r\n		            boolean f = true;        \r\n		            for (int j=2;j<i;j++) {     \r\n		              if(i % j == 0){\r\n		                  f= false;            \r\n		                  break;\r\n		                }\r\n		            }\r\n		            if(!f) {continue;}      \r\n		            primearry[num++]=i;\r\n			            System.out.print(i + \" \");\r\n		            if(num%5 == 0)System.out.println();\r\n		            if(num==30)break;\r\n		        }\r\n		    }\r\n		}\r\n\r\n		   ',40,35,'					   ',0,'','',NULL),
 (4790,41,613,62,'public class booktest {\r\n	public static void main(String[] args) {\r\n	 int a[]={30,1,-9,70,25};\r\n	 System.out.print(\"数组原始顺序：\");\r\n	 for (int i=0;i<a.length;i++) System.out.print(a[i] + \" \");  \r\n	 for (int i = 0; i < a.length; i++) {    \r\n	      int lowerIndex = i;    \r\n	      for (int j = i + 1; j < a.length; j++) \r\n		       if (a[j] < a[lowerIndex]) lowerIndex = j;    \r\n		   int temp = a[i];    \r\n	   a[i] = a[lowerIndex];    \r\n		   a[lowerIndex] = temp;    \r\n	     }\r\n	  System.out.print(\"\\n数组排序后的顺序： \");\r\n		 for (int i=0;i<a.length;i++) System.out.print(a[i] + \" \");    \r\n	  }    \r\n}    \r\n\r\n					   ',40,30,'					   ',86,'81,86','马芸芸,王伟杰',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4791,43,557,67,'	D				   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4792,43,557,68,'		C			   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4793,43,557,73,'	A				   \r\n					   ',0,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4794,43,557,74,'		B			   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4795,43,557,70,'		extends			   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4796,43,557,71,'		有 super.x被隐藏了 ，因为子类的成员变量和父类的成员变量重名，所以父类的成员变量被隐藏了			   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4797,43,557,72,'		被隐藏			   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4798,43,557,66,'	共同的方法名				   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4799,43,557,69,'		Object			   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4800,43,557,75,'		1			   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (4801,43,557,76,'	package homework.ch03;\r\n\r\npublic class Table {\r\n    private String name;\r\n    private int weight;\r\n    private int width;\r\n    private int length;\r\n    private int height;\r\n\r\n    public Table()\r\n    {\r\n        name=\"八仙桌\";\r\n        weight=5;\r\n        width=8;\r\n        length=4;\r\n        height=2;\r\n    }\r\n\r\n    public int area()\r\n    {\r\n        return width*length;\r\n    }\r\n\r\n    public void display()\r\n    {\r\n        System.out.println(\"名字\"+name+\"宽\"+width+\"长\"+length+\"高\"+height+\"重\"+weight);\r\n    }\r\n\r\n    public void changeweight(int a)\r\n    {\r\n        weight=a;\r\n    }\r\n\r\n\r\n}\r\n\r\npackage homework.ch03;\r\n\r\npublic class TableDemo {\r\n    public static void main(String[] args) {\r\n        Table table=new Table();\r\n        int a=table.area();\r\n        System.out.println(\"桌子的面积是\"+a);\r\n        table.changeweight(9);\r\n\r\n\r\n\r\n        table.display();\r\n    }\r\n}\r\n				   \r\n					   ',20,15,'					   构造方法应该有形参，通过形参初始化对象\r\n					   ',0,NULL,NULL,NULL),
 (4802,43,562,67,'					   D\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4803,43,562,68,'					   C\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4804,43,562,73,'					   A\r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (4805,43,562,74,'					   B\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4806,43,562,70,'					   extends\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4807,43,562,71,'					   父类superClass的成员变量x被子类subClass的成员变量x隐藏\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4808,43,562,72,'					   覆盖的\r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4809,43,562,66,'			相同名称\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4810,43,562,69,'					  java.lang.Object\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4811,43,562,75,'					   1\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4812,43,562,76,'	class Table1{\r\n	\r\n	private String name;\r\n	private float weight;\r\n	private float width;\r\n	private float height;\r\n	private float length;\r\n	\r\n	public Table1(String name, float weight, float width, float height, float length){\r\n		this.name=name;\r\n		this.weight=weight;\r\n		this.width=width;\r\n		this.height=height;\r\n		this.length=length;\r\n	}\r\n	\r\n	 public float area(){\r\n		float s = 0;\r\n		s=width*length;\r\n		return s;\r\n	}\r\n	\r\n	 public void display() {\r\n		System.out.println(\"桌子的名字：\"+name);\r\n		System.out.println(\"桌子的重量：\"+weight);\r\n		System.out.println(\"桌面的宽度：\"+width);\r\n		System.out.println(\"桌面的长度：\"+length);\r\n		System.out.println(\"桌子的高度：\"+height);\r\n	}\r\n	\r\n	public void changeWeight(int w) {\r\n		weight=w;\r\n	}\r\n}\r\n	\r\npublic class Table {\r\n\r\n	public static void main(String[] args) {\r\n		Table1 table =new Table1(\"小桌子\", 100, 23, 33, 45);\r\n		table.display();\r\n		float suqure=table.area();\r\n		System.out.println(\"桌面的面积是\"+suqure);\r\n		table.changeWeight(400);\r\n		table.display();\r\n	}\r\n\r\n}\r\n		   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4813,44,587,67,'D			   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4814,44,587,68,'C			   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4815,44,587,73,'A				   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (4816,44,587,74,'B	   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4817,44,587,70,'extends		   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4818,44,587,71,'存在被隐藏的成员变量x，子类subClass中声明了和父类superClass同名的变量x，父类的成员变量x被隐藏\r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4819,44,587,72,'覆盖	   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4820,44,587,66,'相同的名字		   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4821,44,587,69,' Object\r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4822,44,587,75,'1		   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4823,44,587,76,'public class Table {\r\nprivate String name;\r\nprivate float weight;\r\nprivate float Width;\r\nprivate float length;\r\nprivate float attribute;\r\npublic Table(String n,float w,float W,float l,float a)\r\n{  name=n;\r\n   weight=w;\r\n   Width=W;\r\n   length=l;\r\n   attribute=a;\r\n}\r\nfloat area(){\r\n	float area;\r\n	area=2*Width*length;\r\n	return area;\r\n}\r\nvoid display(){\r\n	System.out.println(\"这个桌子的名称是：\"+name);\r\n	System.out.println(\"这个桌子的重量是：\"+weight);\r\n	System.out.println(\"这个桌子的桌面宽度是：\"+Width);\r\n	System.out.println(\"这个桌子的长度是：\"+length);\r\n	System.out.println(\"这个桌子的高度属性是：\"+attribute);\r\n}\r\nfloat changeWeight(int w){\r\n	return weight=w;\r\n	}\r\n}\r\n\r\nclass TableTest{ \r\n	public static void main (String[] args){\r\n	Table table=new Table(\"table\",20,40,60,5);\r\n	table.area();\r\n	table.display();\r\n	table.changeWeight(1);\r\n	\r\n\r\n	}\r\n}\r\n					   \r\n					   \r\n					   ',20,18,'					   ',0,NULL,NULL,NULL),
 (4824,44,596,67,'					   d',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4825,44,596,68,'					   c',8,8,'					   ',0,NULL,NULL,NULL),
 (4826,44,596,73,'				a	   ',0,8,'					   ',0,NULL,NULL,NULL),
 (4827,44,596,74,'				b	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4828,44,596,70,'					   extends',8,8,'					   ',0,NULL,NULL,NULL),
 (4829,44,596,71,'					   x是隐藏的成员变量；因为superClass的子类subClass声明了和父类相同名称的成员变量',8,8,'					   ',0,NULL,NULL,NULL),
 (4830,44,596,72,'				隐藏的	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4831,44,596,66,'					   相同的名字',8,8,'					   ',0,NULL,NULL,NULL),
 (4832,44,596,69,'					   Object',8,8,'					   ',0,NULL,NULL,NULL),
 (4833,44,596,75,'					   一',8,8,'					   ',0,NULL,NULL,NULL),
 (4834,44,596,76,'package homework2;\r\nclass Table{\r\n	String name=\"tiaotiao\";\r\n	int 重量=6;\r\n	int 宽=3,长=4,高=5;\r\n    int area()\r\n	{\r\n		return 宽*长;\r\n	}\r\n	void display()\r\n	{\r\n		System.out.println(name+\" \"+长+\" \"+宽+\" \"+高+\" \"+重量);\r\n	}\r\n	void changeWeight(int w)\r\n	{\r\n		重量=w;\r\n	}\r\n}\r\npublic class homework2 {\r\npublic static void main(String[] args)\r\n{\r\n	Table table=new Table();\r\n    table.changeWeight(7);\r\n	int area=table.area();\r\n	System.out.println(\"桌子名称：\"+table.name+\"，桌面长=\"+table.长+\"，桌面宽=\"+table.宽+\"，桌子高=\"+table.高+\"，桌面积=\"+area+\",桌子重量=\"+table.重量);\r\n}\r\n}					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4835,43,582,67,'D\r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4836,43,582,68,'C\r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4837,43,582,73,'A\r\n					   \r\n					   \r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (4838,43,582,74,'A\r\n					   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4839,43,582,70,'extends\r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4840,43,582,71,'存在。 x。  子类中定义的方法与父类中定义的方法相同，故父类被隐藏。\r\n					   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4841,43,582,72,'隐藏或覆盖\r\n					   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4842,43,582,66,'相同的名字\r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4843,43,582,69,'Object\r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4844,43,582,75,'1\r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4845,43,582,76,'class Table{\r\nString name;\r\ndouble width;\r\ndouble height;\r\ndouble weight;\r\ndouble length;\r\npublic Table(String name,double weight,double width,double length,double height){\r\nsuper();\r\nthis.name=name;\r\nthis.width=width;\r\nthis.length=length;\r\nthis.height=height;\r\nthis.weight=weight;\r\n}\r\n\r\nvoid area()\r\n{System.out.println(\"The area of the table is \"+length*width);}\r\n//GET THE AREA\r\n\r\nvoid display()\r\n{\r\nSystem.out.println(\"the name of the table: \"+name+\"\\n\");\r\nSystem.out.println(\"the weight of the table: \"+weight+\"\\n\");\r\nSystem.out.println(\"the width of the table: \"+width+\"\\n\");\r\nSystem.out.println(\"the length of the table: \"+length+\"\\n\");\r\nSystem.out.println(\"the height of the table: \"+height+\"\\n\");\r\n}//OUTPUT THE DATA OF THE TABLE\r\n\r\nvoid changeweight(double w){\r\nthis.weight=w;\r\nSystem.out.println(\"change the weight to \"+this.weight);\r\n}//CHANGE THE WEIGHT\r\npublic static void main(String[] args){\r\nTable table=new Table(\"TABLE\",100,100,100,100);\r\ntable.display();\r\ntable.area();\r\ntable.changeweight(200);\r\ntable.display();\r\n}\r\n}\r\n					   \r\n					   ',20,18,'					   ',0,NULL,NULL,NULL),
 (4846,43,565,67,'D			   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4847,43,565,68,'C				   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4848,43,565,73,'B					   \r\n					   \r\n					   ',0,0,'					   ',0,NULL,NULL,NULL),
 (4849,43,565,74,'A					   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4850,43,565,70,'extends					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4851,43,565,71,'存在，superclass里的变量x被隐藏，因为subclass是声明为superclass的一个子类，并定义了与父类相同的成员变量，父类中的x被隐藏。					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4852,43,565,72,'重写				   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4853,43,565,66,'相同的名字					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4854,43,565,69,'java.lang.Object					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4855,43,565,75,'1					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4856,43,565,76,'package com.company;\r\nclass Table{\r\n    String name;\r\n    float weight,width,length,height;\r\n    public Table(String n,float w1,float w2,float l,float h)\r\n    { name=n;\r\n      weight=w1;\r\n      width=w2;\r\n      length=l;\r\n      height=h;}\r\n    float area() {\r\n            float s=width*length;\r\n            return s;\r\n    }\r\n    void changeweight(int w)\r\n    {\r\n        weight=w;\r\n    }\r\n    void dismay(){\r\n        System.out.print(\"属性：\"+name+\"重量：\"+weight+\"宽度：\"+width+\"长度：\"+length+\"高度：\"+height);\r\n    }\r\n}\r\n  public class 桌子类{\r\n  public static void main(String[] args) {\r\n    Table x=new Table(\"aa\",2,3,4,5);\r\n    x.changeweight(9);\r\n    x.dismay();\r\n  }\r\n}\r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4857,44,610,67,'			A		   ',8,0,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4858,44,610,68,'	C				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4859,44,610,73,'				A	   ',0,8,'					   ',0,NULL,NULL,NULL),
 (4860,44,610,74,'			B		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4861,44,610,70,'			extend		   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4862,44,610,71,'		x   子类有和父类同名的变量			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4863,44,610,72,'					重写   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4864,44,610,66,'				同名性	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4865,44,610,69,'			根 object		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4866,44,610,75,'		一			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4867,44,610,76,'					   package com.test;\r\npublic class Table{\r\nString name;\r\ndouble weight;\r\ndouble width;\r\ndouble length;\r\ndouble height;\r\npubllic Table(String name,double weight,double width,double length,double height){\r\nthis.name = name;\r\nthis.weight = weight;\r\nthis.length = length;\r\nthis.height = height;\r\n\r\n}\r\npublic void sq(){\r\nSystem.out.prinfln(\"面积等于\"+length*width);\r\n\r\n}\r\npublic void show(){\r\nSystem.out.pringln(\r\n\"桌子名称:\"+name+\r\n\"重:\"+weight+\r\n\"长:\"+length+\r\n\"宽:\"+width+\r\n\"高:\"+height\r\n);\r\n}\r\npublic void change(double i){\r\nthis.weight=i;\r\n\r\n}\r\npublic static void main(String[] args){\r\nTable table =new Table(\"desk\",20.2,1.5,2.0,1.3);\r\nsystem.out.println(\"创建成功\")；\r\nTable.show();\r\ntable.sq();\r\ntable.change(100);\r\nSystem.out.println(\"变重量后的属性为\");\r\ntable.show();\r\n}\r\n\r\n}\r\n',20,18,'					   ',0,NULL,NULL,NULL),
 (4868,43,578,67,'D					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4869,43,578,68,'C					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4870,43,578,73,'A					   \r\n					   \r\n					   ',0,0,'					   ',0,NULL,NULL,NULL),
 (4871,43,578,74,'A					   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4872,43,578,70,'extends					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4873,43,578,71,'存在，隐藏了父类的x。因为在子类中定义了一个方法，并且这个方法的名字，返回类型，参数个数和类型与父类方法完全相同，所以父类被隐藏。					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4874,43,578,72,'覆盖					   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4875,43,578,66,'相同的名字					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4876,43,578,69,'Object					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4877,43,578,75,'1					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4878,43,578,76,'public class table{\r\nstring name;\r\ndouble weight;\r\ndouble width;\r\ndouble length;\r\ndouble height;\r\n\r\npublic table(string name,int weight,int width,int length,int height)\r\n{\r\nsuper();\r\nthis.weight=weight;\r\nthis.width=width;\r\nthis.length=length;\r\nthis.height=height;\r\n}\r\n\r\npublic double area(){\r\nreturn width*length\r\n}\r\n\r\npublic void display(){\r\nSystem.out.println(this.name);\r\nSystem.out.println(this.weight);\r\nSystem.out.println(this.width);\r\nSystem.out.println(this.length);\r\nSystem.out.println(this.height);\r\nSystem.out.println(this.area);\r\n}\r\n\r\npublic void changeweight(int w){\r\nthis.weight=w;\r\n}\r\n\r\npublic static void main(String[]args){\r\nTable table=new Table(\"桌子\",20,50,60,40);\r\nint area=table.area();\r\ntable.changeweight(30);\r\ntable.display();\r\n}\r\n}	   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4879,43,563,67,'D				   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4880,43,563,68,'C		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4881,43,563,73,'A				   ',0,8,'					   ',0,NULL,NULL,NULL),
 (4882,43,563,74,'B				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4883,43,563,70,'extends			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4884,43,563,71,'存在   隐藏了父类的x，因为在子类中定义了一个方法，并且这个方法的名字，返回类型，参数个数和类型和父类一致，所以父类的x被隐藏			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4885,43,563,72,'覆盖	   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4886,43,563,66,'相同的名字				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4887,43,563,69,'java.lang.Object	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4888,43,563,75,'1		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4889,43,563,76,'public class Table {\r\n	   private String name;\r\n	      private int weight;\r\n	      private int width;\r\n	      private int length;\r\n	      private int height;\r\n	public Table(String name,int weight,int width,int length,int height)\r\n	{\r\n	      super();\r\n	      this.name=name;\r\n	      this.weight=weight;\r\n	      this.width=width;\r\n	      this.length=length;\r\n	      this.height=height;\r\n	}\r\n	public int area(){\r\n	      return width*length;\r\n	}\r\n	public void display(){\r\n	System.out.println(\"名称:\"+this.name);\r\n	System.out.println(\"重量:\"+this.weight);\r\n	System.out.println(\"长度:\"+this.length);\r\n	System.out.println(\"高度:\"+this.height);\r\n	System.out.println(\"宽度:\"+this.width);\r\n	System.out.println(\"面积:\"+this.area());\r\n	}\r\n	public void changeWeight(int w){\r\n	       this.weight=w;}\r\n	public static void main(String[]args){\r\n	Table table=new Table(\"桌子\",20,50,20,20);\r\n	table.changeWeight(30);\r\n	table.display();\r\n	}\r\n	}\r\n',20,20,'					   ',0,NULL,NULL,NULL),
 (4890,44,586,67,'			D		   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4891,44,586,68,'			C		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4892,44,586,73,'				A	   ',0,8,'					   ',0,NULL,NULL,NULL),
 (4893,44,586,74,'			B		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4894,44,586,70,'				extends	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4895,44,586,71,'x;因为子类中的成员变量如果和父类中的成员变量同名，父类中的成员变量就会被隐藏。					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4896,44,586,72,'			覆盖的		   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4897,44,586,66,'			相同的名字		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4898,44,586,69,'			Object		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4899,44,586,75,'	1				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4900,44,586,76,'public class wyy11{\r\n	public static void main(String[] args) {\r\n		Table table=new Table(\"桌子1\",100,5,5,5);\r\n		table.area();\r\n		table.changeWeight(105);\r\n		table.display();\r\n	}\r\n	\r\n}\r\nclass Table{\r\n	public String name;\r\n	public double weight;\r\n	public double width;\r\n	public double length;\r\n	public double height;\r\n	public Table(String name, double weight, double width, double length, double height) {\r\n		super();\r\n		this.name = name;\r\n		this.weight = weight;\r\n		this.width = width;\r\n		this.length = length;\r\n		this.height = height;\r\n	}\r\n	public void area() {\r\n		double a=length*width;\r\n		System.out.println(\"桌面的面积为： \"+a);\r\n	}\r\n	public void display() {\r\n		System.out.println(\"桌子名称:\"+name+\"\\n\"+\"重量:\"+weight+\"\\n\"+\"桌面宽度:\"+width+\"\\n\"+\"长度:\"+length+\"\\n\"+\"桌子高度:\"+height+\"\\n\");\r\n	}\r\n	public void changeWeight(int w) {\r\n		this.weight=w;\r\n		System.out.println(\"桌子的重量为:\"+this.weight);\r\n	}\r\n}',20,18,'					   ',0,NULL,NULL,NULL),
 (4901,44,611,67,'D					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4902,44,611,68,'C					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4903,44,611,73,'A					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (4904,44,611,74,'B					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4905,44,611,70,'extends					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4906,44,611,71,'存在成员变量的隐藏,变量名为x,subClass是superClass的子类,其定义的成员变量x和父类中的成员变量重名,此时子类的成员变量隐藏了父类的成员变量.					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4907,44,611,72,'隐藏的					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4908,44,611,66,'相同的名字					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4909,44,611,69,'java.lang.Object					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4910,44,611,75,'1					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4911,44,611,76,'public class Table {\r\nprivate String tableName;\r\nprivate int weight;\r\nprivate int length;\r\nprivate int height;\r\nprivate int width;\r\npublic Table(){\r\ntableName=\"\";\r\n}\r\npublic Table(String tableName,int weight,int length,int height,int width){\r\nthis.tableName=tableName;\r\nthis.weight=weight;\r\nthis.length=length;\r\nthis.height=height;\r\nthis.width=width;\r\n}\r\npublic int getArea(){\r\nreturn length*width;\r\n}\r\npublic void display(){\r\nSystem.out.println(\"桌名称:\"+this.tableName);\r\nSystem.out.println(\"重量:\"+this.weight);\r\nSystem.out.println(\"长度:\"+this.length);\r\nSystem.out.println(\"高度:\"+this.height);\r\nSystem.out.println(\"宽度:\"+this.width);\r\nSystem.out.println(\"面积:\"+this.getArea());\r\n}\r\npublic void changeWeight(int w){\r\nthis.weight=w;\r\n}\r\npublic static void main(String[] args){\r\nTable table = new Table(\"小桌子\",20,50,20,20);\r\nint area=table.getArea();\r\ntable.changeWeight(30);\r\ntable.display();\r\n}\r\n}					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4912,43,569,67,'D					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4913,43,569,68,'C				   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4914,43,569,73,'A				   \r\n					   \r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (4915,43,569,74,'B			   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4916,43,569,70,'extends				   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4917,43,569,71,'存在，变量x，子类subClass定义的成员变量x与父类superClass中的成员变量x的名字相同，所以父类的成员变量x被隐藏。\r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4918,43,569,72,'隐藏的				   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4919,43,569,66,'相同的名字		   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4920,43,569,69,'java.lang.Object					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4921,43,569,75,'1			   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4922,43,569,76,'public class Table {\r\n  String Name;\r\n  double Weight,Width,Length,Height;\r\n  public Table(String n,double we,double wi,double l,double h)\r\n  {\r\n	Name=n;\r\n	Weight=we;\r\n	Width=wi;\r\n	Length=l;\r\n	Height=h;\r\n  }\r\n  public void area()\r\n  {\r\n        System.out.println(\"桌面的面积:\"+Width*Length);\r\n  }\r\n  public void display()\r\n  {\r\n    	System.out.println(\"桌子名称:\"+Name+\",重量:\"+Weight+\",桌面宽度:\"+Width+\",长度:\"+Length+\",桌子高度属性:\"+Height);\r\n  }\r\n  public void changeWeight(int w)\r\n  {\r\n    	this.Weight=w;\r\n    	System.out.println(\"桌子重量改变为:\"+Weight); 	\r\n  }\r\n  public static void main(String[] args)\r\n  {\r\n    	Table table=new Table(\"课桌\",3,80,120,100);\r\n    	table.area();\r\n    	table.changeWeight(90);\r\n    	table.display();	\r\n  }\r\n}\r\n		   \r\n					   \r\n					   ',20,18,'					   ',0,NULL,NULL,NULL),
 (4923,44,588,67,'D				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4924,44,588,68,'C					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4925,44,588,73,'A					   \r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (4926,44,588,74,'A					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4927,44,588,70,'extends					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4928,44,588,71,'存在。隐藏的变量是x，该子类中声明了一个和父类同名的的变量x，并且定义了相同的方法，这时父类中的成员变量x被隐藏。					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4929,44,588,72,'覆盖					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4930,44,588,66,'相同的名字					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4931,44,588,69,'java.lang.Object					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4932,44,588,75,'1					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4933,44,588,76,'public class table{\r\nString name;\r\ndouble weight;\r\ndouble width;\r\ndouble longth;\r\ndouble height;\r\n\r\npublic table(String name,double weight,double width,double longth,double height){\r\nsuper();\r\nthis.name=name；\r\nthis.weight=weight;\r\nthis.width=width;\r\nthis.longth=longth;\r\nthis.height=height;\r\n}\r\n\r\npublic void area(){\r\nSystem.out.println(\"桌子的面积是\"+width*longth)\r\n}\r\n\r\npublic void display(){\r\nSystem.out.println(\"桌子的名称是\"+name+\'/n\'+\"桌子的重量\"+weight+\'/n\'+\"桌子的宽度\"+width+\'/n\'+\"桌子的长度\"+longth+\'/n\'+\"桌子的高度\"+height)\r\n}\r\n\r\npublic void changeWeight(int w){\r\nthis.weight=w;\r\nSystem.out.println(\"改变桌子的重量\"+weight)\r\n\r\npublic void main(){\r\nSystem.in.print(\"书桌\",60.0,1.5,2.0,1.5)\r\nSystem.out.println(\"桌子的属性：\")\r\ntable.name;\r\ntable.weight;\r\ntable.width;\r\ntable.longth;\r\ntable.height;\r\nSystem.out.println(\"改变重量后，桌子的属性：\")\r\ntable,display;\r\n}\r\n\r\n}\r\n	   \r\n					   ',20,18,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4934,44,602,67,'D					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4935,44,602,68,'C					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4936,44,602,73,'A		   ',0,8,'					   ',0,NULL,NULL,NULL),
 (4937,44,602,74,'B				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4938,44,602,70,'extends					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4939,44,602,71,'存在。隐藏的成员变量x。子类中声明了一个与父类中的一个名字相同的变量，父类的成员变量被隐藏   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4940,44,602,72,'隐藏的					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4941,44,602,66,'同一个名称					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4942,44,602,69,'Object					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4943,44,602,75,'1					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4944,44,602,76,'public class Table {\r\n	String name;\r\n	int weight;\r\n	double length, width, height;\r\n	Table(String _name, int _weight, double _length, double _width, double _height){\r\n		name = _name;\r\n		weight = _weight;\r\n		length = _length;\r\n		width = _width;\r\n		height = _height;\r\n	}\r\n	double area(){\r\n		return length * width;\r\n	}\r\n	void display(){\r\n		System.out.println(\"Name:\" + name);\r\n		System.out.println(\"Weight:\" + weight);\r\n		System.out.println(\"Length:\" + length);\r\n		System.out.println(\"Width:\" + width);\r\n		System.out.println(\"Height:\" + height);\r\n	}\r\n	void changeWeight(int w){\r\n		weight = w;\r\n	}\r\n	public static void main(String[] args){\r\n		Table test = new Table(\"hhh\", 20, 30, 40, 50);\r\n		test.display();\r\n		System.out.println(test.area());\r\n		test.changeWeight(100);\r\n		test.display();\r\n	}\r\n}\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4945,43,583,67,'					   D',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4946,43,583,68,'					   A',8,0,'					   ',0,NULL,NULL,NULL),
 (4947,43,583,73,'					   A',0,8,'					   ',0,NULL,NULL,NULL),
 (4948,43,583,74,'					   A',8,0,'					   ',0,NULL,NULL,NULL),
 (4949,43,583,70,'					   extends',8,8,'					   ',0,NULL,NULL,NULL),
 (4950,43,583,71,'					   存在。变量x。由于子类中重新定义了变量x，故父类中的变量x被隐藏，此时只有通过super关键字才能调用父类中的变量x。',8,8,'					   ',0,NULL,NULL,NULL),
 (4951,43,583,72,'					   子类覆盖的',8,0,'					   ',0,NULL,NULL,NULL),
 (4952,43,583,66,'相同的名称',8,8,'					   ',0,NULL,NULL,NULL),
 (4953,43,583,69,'					   java.lang.Object',8,8,'					   ',0,NULL,NULL,NULL),
 (4954,43,583,75,'					   1',8,8,'					   ',0,NULL,NULL,NULL),
 (4955,43,583,76,'import java.applet.*;\r\nimport java.awt.*;\r\n\r\npublic class Table{\r\n  String name;\r\n  float height;\r\n  float weight;\r\n  float width;\r\n  float length;\r\npublic Table(String name,flaot weight,float width,float length,flaot height){\r\n  super();\r\n  this.height=height;\r\n  this.weight=weight;\r\n  this.width=width;\r\n  this.length=length;\r\n  this.name=name;\r\n}\r\npublic float area(){\r\n  System.out.println(\"面积\"+length*width);\r\n}\r\npublic void display(){\r\n  System.out.println(name+\"\\n\"+weight+\"\\n\"+width+\"\\n\"+length+\"\\n\"+height);\r\n}\r\npublic void changeweight(int w){\r\n  this.weight=w;\r\n  System.oput.println(\"面积修改为\"+this.weight);\r\n}\r\npublic static void main(String args[]){\r\n  Table t=new Table(\"饭桌\",150,50,40,100);\r\n  System.out.println(\"以下为桌子的各种属性\");\r\n  t.display();\r\n  t.area();\r\n  System.out.println(\"改变后桌子的各种属性\");\r\n  t.display();\r\n  }\r\n}\r\n    	   ',20,20,'					   ',0,NULL,NULL,NULL),
 (4956,43,570,67,'D					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4957,43,570,68,'	C				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4958,43,570,73,'			A		   \r\n					   ',0,0,'					   ',0,NULL,NULL,NULL),
 (4959,43,570,74,'B					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4960,43,570,70,'extends					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4961,43,570,71,'存在，变量x，子类subClass定义的成员变量x与父类subClass中的成员变量x的名字相同，所以父类的成员变量x被隐藏。					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4962,43,570,72,'隐藏的					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4963,43,570,66,'相同的名字					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4964,43,570,69,'java.lang.Object					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4965,43,570,75,'1			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4966,43,570,76,'public class Table{\r\npublic String tableName;\r\npublic float tableWeight;\r\npublic float tableWidth;\r\npublic float tableLength;\r\npublic float tableHeight;\r\n\r\npublic Table(String name,float weight,float width,float length,float height)\r\n{\r\ntableName=name;\r\ntableWeight=weight;\r\ntableWidth=width;\r\ntableLength=length;\r\ntableHeight=height;\r\n}\r\npublic float Area(){\r\nreturn tableWidth*tableLength;\r\n}\r\npublic void ChangeWeight(float weight)\r\n{\r\ntable Weight=weight;\r\n}					   \r\npublic void Display(){\r\nSystem.out.println(\"桌子名称:\"+tableName+\"重量是:\"+tableWeight+\"桌面宽度:\"+tableWidth+\"桌面长度;\"+tableLenght+\"桌面高度:\"+tableHeight);\r\n}\r\n}\r\npublic class Main{\r\npublic static void main(String[]args)\r\n{\r\nTable myTable=new Table(\"书桌\",50,50,50,50);\r\nmyTable.Display();\r\nSystem.out.println(\"改变重量后为:\");\r\nmyTable.area();\r\nmyTable.ChangeWeight(40);\r\nmyTable.Display();\r\n}\r\n}\r\n\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4967,43,564,67,'D					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4968,43,564,68,'C					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4969,43,564,73,'B					   \r\n					   ',0,0,'					   ',0,NULL,NULL,NULL),
 (4970,43,564,74,'B					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4971,43,564,70,'extends					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4972,43,564,71,'x   原因：subClass为suoerClass的子类，其中变量x和父类中的x相同，父类中的x被隐藏。					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4973,43,564,72,'覆盖					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4974,43,564,66,'相同的名字					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4975,43,564,69,'java.lang.Object					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4976,43,564,75,'1					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4977,43,564,76,'class Table{\r\n       String name;\r\n       double weight;\r\n       double width;\r\n       double length;\r\n       double height;\r\n       public Table(){ }\r\n       Table(String name,double weight,double width,double length,double height){\r\n             super();\r\n	     this.name=name;\r\n             this.weight=weight;\r\n             this.width=width;\r\n             this.length=length;\r\n             this.height=height;}\r\n       void area(){\r\n             double s=width*length;\r\n             System.out.println(\"桌子面积为：\"+s);}\r\n       void display(){\r\n             System.out.println(\"名字：\"+name+\"；质量：\"+weight+\"；长：\"+length+\"；宽：\"+width+\"；高:\"+height);}\r\n       void changeWeight(int w){\r\n             System.out.println(\"质量改变为：\"+w);}\r\n}\r\npublic class test1 {\r\n	public static void main(String[] args) {\r\n               Table table=new Table(\"木桌\",95.5,1.5,2,0.8);\r\n	       System.out.println(\"桌子全部属性如下：\");\r\n	       table.display();\r\n	       table.area();\r\n	       table.changeWeight(100);\r\n	       System.out.println(\"改变质量后的桌子全部属性如下：\");\r\n	       table.display();\r\n	}\r\n}\r\n					   \r\n					   ',20,18,'					   void area()要有返回值',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4978,44,591,67,'D				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4979,44,591,68,'C					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4980,44,591,73,'A					   \r\n					   ',0,0,'					   ',0,NULL,NULL,NULL),
 (4981,44,591,74,'A					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4982,44,591,70,'extend					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4983,44,591,71,'存在。x被隐藏。SubClass是SuperClass的一个子类，其中声明了一个和父类SuperClass同名的变量x，并定义了与之相同的方法，这时在子类中，父类的成员变量x被隐藏。					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4984,44,591,72,'覆盖					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4985,44,591,66,'相同的名字					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4986,44,591,69,'Object					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4987,44,591,75,'1					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4988,44,591,76,'public class Table{\r\nString name;\r\ndouble weight;\r\ndouble width;\r\ndouble longth;\r\ndouble height;\r\n\r\npublic Table(String name,double weight,double width,double longth,double height){\r\nsuper();\r\nthis.name=name；\r\nthis.weight=weight;\r\nthis.width=width;\r\nthis.longth=longth;\r\nthis.height=height;\r\n}\r\n\r\npublic void area(){\r\nSystem.out.println(\"桌子的面积是\"+width*longth)\r\n}\r\n\r\npublic void display(){\r\nSystem.out.println(\"桌子的名称是\"+name+\'/n\'+\"桌子的重量\"+weight+\'/n\'+\"桌子的宽度\"+width+\'/n\'+\"桌子的长度\"+longth+\'/n\'+\"桌子的高度\"+height)\r\n}\r\n\r\npublic void changeWeight(int w){\r\nthis.weight=w;\r\nSystem.out.println(\"改变桌子的重量\"+weight)\r\n\r\n\r\npublic static void main(String[] args){\r\nTable table=new Table(\"大理石桌\",80.0,2.0,4.0,1.5)\r\nSystem.out.println(\"创建一个桌子属性如下：\")\r\ntable.display();\r\ntable.area();\r\ntable.changeWeight(100);\r\nSystem.out.println(\"改变重量后，属性如下：\")\r\ntable.display();\r\n}\r\n}\r\n\r\n	   			   ',20,18,'					   ',0,NULL,NULL,NULL),
 (4989,43,584,67,'	D				   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (4990,43,584,68,'	C				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4991,43,584,73,'			B		   ',0,0,'					   ',0,NULL,NULL,NULL),
 (4992,43,584,74,'		A		   ',8,0,'					   ',0,NULL,NULL,NULL),
 (4993,43,584,70,'	extends				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4994,43,584,71,'	存在成员变量的隐藏。	变量：X		因为子类subClass中定义了与父类同名的成员变量X',8,8,'					   ',0,NULL,NULL,NULL),
 (4995,43,584,72,'			隐藏		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4996,43,584,66,'		相同的名字			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4997,43,584,69,'	java.lang.Object				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4998,43,584,75,'	1				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (4999,43,584,76,'class Table{\r\n   String name;\r\n   float  weight;\r\n   float  width;\r\n   float  length;\r\n   float  high;\r\n Table(String name,float weight,float width,float length, float high){\r\n   this.weight=w,this.length=x,this.width=y,this.high=z;\r\n}\r\npublic double area(){\r\nSystem.out.println (\" 面积=\"+x*y);\r\n}\r\npublic void display(){\r\nSystem.out.println()(\"名称：\"+name+\"\\n\"+\"重量：\"+w+\"\\n\"+\"长:\"+x+\"\\n\"+\"宽：\"+y+\"\\n\"+\"高：\"+z);\r\n}\r\npublic void changeWeight(int i){\r\n  this.weight=i;\r\n  System.out.println(\"面积改为\"+this.weight);\r\n}			   ',20,20,'					   ',0,NULL,NULL,NULL),
 (5000,43,571,67,'D\r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5001,43,571,68,'C\r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5002,43,571,73,'A\r\n					   ',0,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5003,43,571,74,'B\r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5004,43,571,70,'extends\r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5005,43,571,71,'subclass类隐藏了父类superClass中的变量x, 因为子类subclas重新定义了父类中的x变量，故父类的x变量被隐藏\r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5006,43,571,72,'隐藏的\r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5007,43,571,66,'相同的方法名\r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5008,43,571,69,'object\r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5009,43,571,75,'1\r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5010,43,571,76,'class Table {\r\n    String name;\r\n    double weight, face_width, face_length, height;\r\n\r\n    public Table(String name_, double weight_, double face_width_, double face_length_, double height_) {\r\n        name = name_;\r\n        weight = weight_;\r\n        face_width = face_width_;\r\n        face_length = face_length_;\r\n        height = height_;\r\n    }\r\n\r\n    public Table() {\r\n        this(null, 0, 0, 0, 0);\r\n    }\r\n\r\n    public double area() {\r\n        return face_length * face_width;\r\n    }\r\n\r\n    public void display() {\r\n        System.out.println(\"The table name is \" + name);\r\n        System.out.println(\"The table weight is \" + weight + \"kg\");\r\n        System.out.println(\"The table face width is \" + face_width + \"m\");\r\n        System.out.println(\"The table face length is \" + face_length + \"m\");\r\n        System.out.println(\"The table height is \" + height + \"m\");\r\n    }\r\n\r\n    public void changeWeight(int w) {\r\n        weight = w;\r\n    }\r\n}\r\n\r\npublic class TableTestDrive {\r\n    public static void main(String[] args) {\r\n        Table t = new Table(\"java\", 100, 1.0, 1.1, 1.2);\r\n        System.out.println(\"The area of the table is \" + t.area() + \" m^2\");\r\n        t.changeWeight(101);\r\n        t.display();\r\n    }\r\n}\r\n\r\n\r\n					   ',20,20,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5011,44,609,67,'			D		   \r\n					   \r\n					   \r\n					   ',8,8,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5012,44,609,68,'	C				   \r\n					   \r\n					   \r\n					   ',8,8,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5013,44,609,73,'			B		   \r\n					   \r\n					   \r\n					   ',0,0,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5014,44,609,74,'		A			   \r\n					 B\r\n					   \r\n					   ',8,0,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5015,44,609,70,'extends					   \r\n					   \r\n					   \r\n					   ',8,8,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5016,44,609,71,'			存在成员变量的隐藏，隐藏的变量为x，父类中superclass中的成员变量和子类中subclass中的成员变量同名，因此父类中的成员变量x被隐藏	   \r\n					   \r\n					   \r\n					   ',8,8,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5017,44,609,72,'			覆盖		   \r\n					   \r\n					   \r\n					   ',8,0,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5018,44,609,66,'相同的名字					   \r\n					   \r\n					   \r\n					   ',8,8,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5019,44,609,69,'		object			   \r\n					   \r\n					   \r\n					   ',8,8,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5020,44,609,75,'		1			   \r\n					   \r\n					   \r\n					   ',8,8,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5021,44,609,76,'					class table{\r\n		public 	String tablename;\r\n		public  float tableweight;\r\n		public  float tablewidth;\r\n		public  float tablelength;\r\n		public  float tableheight;\r\n		public table(String name,float weight,float width,float length,float height)\r\n		{\r\n			tablename=name;\r\n			tableweight=weight;\r\n			tablewidth=width;\r\n			tablelength=length;\r\n			tableheight=height;\r\n			\r\n		}\r\n		public float area(){\r\n			return tablewidth*tablelength;\r\n		}\r\n		public void changeweight(float weight)\r\n		{\r\n			tableweight=weight;\r\n		}\r\n		public void display(){\r\n			System.out.println(\"桌子名称：\"+tablename+\"重量是：\"+tableweight+\"桌面宽度：\"+tablewidth+\"桌面长度\"+tablelength+\"桌子高度\"+tableheight);\r\n			\r\n		}\r\n			\r\n				public  static void main(String []args)\r\n				{table mytable=new table(\"zhuozi\",40,25,35,65);\r\n				mytable.display();\r\n				System.out.println(\"改变重量后为\");\r\n				mytable.changeweight(80);\r\n				mytable.display();\r\n				\r\n			}\r\n		}\r\n	}\r\n   \r\n					   \r\n					   \r\n					   ',20,20,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5022,43,560,67,'	D				   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5023,43,560,68,'C	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5024,43,560,73,'B					   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5025,43,560,74,'					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5026,43,560,70,'extends				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5027,43,560,71,'隐藏了父类的变量x，subClass是superClass的一个子类，其中声明了一个和父类superClass同名的变量x.		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5028,43,560,72,'重写					   ',8,0,'		隐藏不同于	重写			   ',0,NULL,NULL,NULL),
 (5029,43,560,66,'相同的名字					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5030,43,560,69,'	java.lang.Object					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5031,43,560,75,'一					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5032,43,560,76,'public class Table {\r\n	String name;\r\n	   double weight;\r\n	   double width;\r\n	   double length;\r\n	   double height;\r\n	public Table(String name,double weight,double width,double length,double longth){\r\n	   super();\r\n	   this.name=name;\r\n	   this .weight=weight;\r\n	   this.width=width;\r\n	   this.length=length;\r\n	   this.height=height;\r\n	  }\r\n	public void area(){\r\n	  System.out.println(\"桌子的面积为\"+length*width);\r\n	  }\r\n	public void display(){\r\n	  System.out.println(\"桌子名称:\"+name+\"\\n\"+\"重量：\"+weight+\"\\n\"+\"桌面宽度\"+width+\"\\n\"+\"桌面长度：\"+length+\"\\n\"+\"桌子高度\"+height);\r\n	  }\r\n	public void changeWeight(int i){\r\n	  this.weight=i;\r\n	  System.out.println(\"重量改为:\"+this.weight);\r\n	  }\r\n	public static void main(String[] args){\r\n	  Table table=new Table(\"梨木桌\",500.0,40.0,60.0,70.0);\r\n	  System.out.println(\"创建一个桌子对象，属性如下：\");\r\n	  table.display();\r\n	     table.area();\r\n	     table.changeWeight(600);\r\n	     System.out.println(\"更改后重量为：\");\r\n	     table.display();\r\n	  }\r\n}			   ',20,18,'					   public void area(){方法应该有返回值',0,NULL,NULL,NULL),
 (5033,43,573,67,'D\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5034,43,573,68,'C	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5035,43,573,73,'A	   \r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5036,43,573,74,'B			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5037,43,573,70,'extends			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5038,43,573,71,'存在变量x，subClass是superClass的一个子类。其中声明了一个和父类superClass同名的变量x，父类的成员变量x被隐藏。	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5039,43,573,72,'隐藏的				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5040,43,573,66,'相同的名字			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5041,43,573,69,'java.lang.Object				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5042,43,573,75,'1			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5043,43,573,76,'class Table{\r\n	String name;\r\n	float weight,width,length,height;\r\n	public Table(String n,float we,float wi,float l,float h)\r\n	{name=n;weight=we;width=wi;length=l;height=h;}\r\n	float area()\r\n	{return width*length;}\r\n	void display()\r\n	{System.out.println(\"桌子名称\"+name);\r\n	System.out.println(\"桌子重量\"+weight);\r\n	System.out.println(\"桌子宽度\"+width);\r\n	System.out.println(\"桌子长度\"+length);\r\n	System.out.println(\"桌子高度\"+height);\r\n	}\r\n	void ChangeWeight(int w)\r\n	{weight=w;}\r\n}\r\n\r\npublic class TestTable{\r\n	public static void main(String[] args) {\r\n		Table t=new Table(\"桌子\",20,5,15,35);\r\n		float a;\r\n		a=t.area();\r\n		System.out.println(\"桌子面积\"+a);\r\n		t.ChangeWeight(5);\r\n		t.display();\r\n	}\r\n}			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5044,43,568,67,'D			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5045,43,568,68,'C				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5046,43,568,73,'A				   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5047,43,568,74,'B		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5048,43,568,70,'extends				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5049,43,568,71,'存在    变量x      subClass是superClass的一个子类。其中声明了一个和父类superClass同名的变量x，父类的成员变量x被隐藏。 ',8,8,'					   ',0,NULL,NULL,NULL),
 (5050,43,568,72,'隐藏的',8,8,'					   ',0,NULL,NULL,NULL),
 (5051,43,568,66,'相同的名字				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5052,43,568,69,'java.lang.Object		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5053,43,568,75,'1				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5054,43,568,76,'class Table{\r\n	String name;\r\n	float weight,width,length,height;\r\n	public Table(String n,float we,float wi,float l,float h)\r\n	{name=n;weight=we;width=wi;length=l;height=h;}\r\n	float area()\r\n	{return width*length;}\r\n	void display()\r\n	{System.out.println(\"桌子名称\"+name);\r\n	System.out.println(\"桌子重量\"+weight);\r\n	System.out.println(\"桌子宽度\"+width);\r\n	System.out.println(\"桌子长度\"+length);\r\n	System.out.println(\"桌子高度\"+height);\r\n	}\r\n	void ChangeWeight(int w)\r\n	{weight=w;}\r\n}\r\n\r\npublic class TestTable{\r\n	public static void main(String[] args) {\r\n		Table t=new Table(\"桌子\",10,10,10,10);\r\n		float a;\r\n		a=t.area();\r\n		System.out.println(\"桌子面积\"+a);\r\n		t.ChangeWeight(5);\r\n		t.display();\r\n	}\r\n}\r\n		   ',20,20,'					   ',0,NULL,NULL,NULL),
 (5055,44,594,67,'		D			   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5056,44,594,68,'		C			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5057,44,594,73,'			A		   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5058,44,594,74,'				B	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5059,44,594,70,'			extends		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5060,44,594,71,'存在成员变量被隐藏， x，因为在子类中定义了与父类相同名字的变量x	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5061,44,594,72,'		隐藏的 			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5062,44,594,66,'				相同的方法名	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5063,44,594,69,'			Object		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5064,44,594,75,'			1		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5065,44,594,76,'class Table{\r\nString name;\r\nint weigth;\r\nfloat width;\r\nfloat length;\r\nfloat heigth;\r\n\r\nTable(String n,int x,float y,float a,float b)\r\n{name=n;weigth=x;width=y;length=a;heigth=b;}\r\n\r\nfloat area()\r\n{return length*width;}\r\n\r\nvoid display()\r\n{System.out.println(name);\r\nSystem.out.println(weigth);\r\nSystem.out.println(width);\r\nSystem.out.println(length);\r\nSystem.out.println(heigth);\r\n}\r\n\r\nvoid changeWeigth(int w)\r\n{weigth=w;}\r\n\r\n}\r\n\r\npublic class xiao{\r\n public static void main(String args[])\r\n{ Table de=new Table(\"nnn\",30,56,78,65);\r\n  de.changeWeigth(100);\r\n  System.out.println(\"面积  \"+de.area());\r\n  de.display();\r\n}\r\n}	   ',20,20,'					   ',0,NULL,NULL,NULL),
 (5066,43,559,67,'			D		   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5067,43,559,68,'	C				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5068,43,559,73,'	A				   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5069,43,559,74,'		B			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5070,43,559,70,'	extends				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5071,43,559,71,'		变量的名字:x(父类) 因为子类里重新定义了x变量		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5072,43,559,72,'	隐藏				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5073,43,559,66,'		相同的名字			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5074,43,559,69,'java.lang.Object				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5075,43,559,75,'		一个			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5076,43,559,76,'Public class Table{\r\nstring name;\r\ndouble weight,width,length,height;\r\nPublic Table(string n,double wt,double w,double l,double h){\r\nname=n;\r\nweight=wt;\r\nwidth=w;\r\nlength=l;\r\nheight=h;\r\n\r\npublic void area(){\r\nSystem.out.print(\"桌子的面积=\"+length*width+\"\\n\")\r\n}\r\npublic void display(){\r\nSystem.out.print(\"桌子的名字=\"+name+\"\\t\"+桌子的重量=\"+weight+\"\\t\"+\"桌子的宽=\"+width+\"+\"\\t\"+桌子的长=\"+length+\"+\"\\t\"+桌子的高=\"+height+\"\\n\")\r\n}\r\npublic void changeweight (int w){\r\nweight=w;\r\nSystem.out.print(\"桌子的重量=\"+w)}\r\n                         \r\npublic static void main(String[] args){\r\nTable t =new Table(\"桌子\",59.1,6.6,9.0,8.8);\r\nSystem.out.print(\"创建了一个桌子对象：\")；\r\nt.display;\r\nt.area();\r\nt.changeWeight(60);\r\nSystem.out.print(\"重量更改后的桌子对象：\"+\"\\n\")；\r\nt.display;\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n   ',20,20,'					   ',0,NULL,NULL,NULL),
 (5077,44,589,67,'					   D\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5078,44,589,68,'			C		   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5079,44,589,73,'		A			   \r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5080,44,589,74,'			A		   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5081,44,589,70,'		extends	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5082,44,589,71,'					存在；隐藏了父类的变量X；例中，SubClass是SuperClass的一个子类，说明了一个和父类SuperClass同名的变量X，并定义了与之相同的方法doSomething(),这时在子类SubClass中，父类的成员变量X被隐藏，父类的方法doSomething()被重写。\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5083,44,589,72,'					覆盖   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5084,44,589,66,'					相同的名字   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5085,44,589,69,'					java.lang.Object   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5086,44,589,75,'				1	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5087,44,589,76,'package com.test;\r\npublic class Table{\r\nString name;\r\ndouble A;\r\ndouble B;\r\ndouble C;\r\ndouble D;\r\npublic Table(String name,double A,double B,double C,double D){\r\nsuper();\r\nthis.name=name;\r\nthis.A=A;\r\nthis.B=B;\r\nthis.C=C;\r\nthis.D=D;}\r\npublic void area(){\r\nSystem .out .print(\"桌子的面积是：\"+B*C);\r\n}\r\npublic void display(){\r\nSystem .out .print(\"桌子的名称：\"+name+\"\\n\"+\"重量：\"+A+\"\\n\"+\"宽：\"+B+\"\\n\"+\"长：\"+C+\"\\n\"+\"高：\"+D)；\r\n}\r\npublic void changeA (int i){\r\nthis.A=i;\r\nSystem .out .print(\"重量改为：\"+this.A)；\r\n}\r\npublic static void main(String[] args){\r\nTable table =new Table(\"木桌\"，200.3,5.5,10.2,1.5);\r\nSystem .out .print(\"创建一个桌子，属性值：\")；\r\ntable.display();\r\ntable.area();\r\ntable.changeA(50);\r\nSystem .out .print(\"更改重量后，属性值：\")；\r\ntable display();\r\n}\r\n}				   \r\n					   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5088,44,599,67,'D				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5089,44,599,68,'C			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5090,44,599,73,'A\r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5091,44,599,74,'B	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5092,44,599,70,'extends	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5093,44,599,71,'存在，superClass类中的x被隐藏，如果子类中定义的成员变量和父类中的成员变量同名，则父类中的成员变量不能被继承，此时子类的成员变量隐藏了父类的成员变量，称为属性隐藏。可用super关键字调用\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5094,44,599,72,'隐藏的   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5095,44,599,66,'相同的方法名\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5096,44,599,69,'Object类			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5097,44,599,75,'1				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5098,44,599,76,'class Table{\r\n	private String name;//名称\r\n	private double weight;//重量\r\n	private double width;//宽度\r\n	private double length;//长度\r\n	private double height;//高度\r\n	\r\n	public Table(String name,double weight,double width,double length,double heigth){\r\n		this.name=name;\r\n		this.weight=weight;\r\n		this.width=width;\r\n		this.length=length;\r\n		this.height=heigth;\r\n	}\r\n	\r\n	public void area(){//面积\r\n		double S=width*length;\r\n		System.out.println(\"桌子的面积为:\"+S+\"平方米\");\r\n	}\r\n	\r\n	public void display(){\r\n		System.out.println(\"名称:\"+name);\r\n		System.out.println(\"重量:\"+weight+\"千克\");\r\n		System.out.println(\"宽度:\"+width+\"米\");\r\n		System.out.println(\"长度:\"+length+\"米\");\r\n		System.out.println(\"高度:\"+height+\"米\");\r\n	}\r\n	\r\n	public void changeWeight(int w){\r\n		weight=w;\r\n	}\r\n}\r\n\r\npublic class Test001{\r\n	public static void main(String[] args){\r\n		Table t1= new Table(\"小叶紫檀木\",5.0,0.88,1.78,0.76);\r\n		t1.area();\r\n		t1.changeWeight(6);\r\n		t1.display();\r\n	}\r\n	\r\n}\r\n					   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5099,44,608,67,'		D			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5100,44,608,68,'				C   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5101,44,608,73,'			A		   \r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5102,44,608,74,'					   B\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5103,44,608,70,'			extends		   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5104,44,608,71,'					   是存在  x   在子类中定义了一个方法，且这个方法的名字，返回值，参数个数与父类相同，所以父类变量x被隐藏\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5105,44,608,72,'					   隐藏的\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5106,44,608,66,'				相同的名字	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5107,44,608,69,'				Object	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5108,44,608,75,'				1	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5109,44,608,76,' package com.test;\r\n public class Table{\r\n      String name;\r\n      double weight;\r\n      double width;\r\n      double length;\r\n      double height;\r\n public Table(String name,double weight,double width,double length,double height){\r\n  super();\r\n  this.name=name;\r\n  this.weight=weight;\r\n  this.width=width;\r\n  this.length=length;\r\n  this.height=height;\r\n }\r\n public void area(){\r\n    System.out.println(\"桌子面积是\"+length*width);\r\n}\r\n public void display(){\r\n    System.out.println(\"桌子名称:\"+name+\"\\n\"+\"重量:\"+weight+\"\\n\"+\"宽:\"+width+\"/n\"+\"长:\"+length+\"\\n高:\"+height);\r\n}\r\n public void changeWeight(int i){\r\n  this.weight=i;\r\n  System.out.println(\"面积改为\"+this.weight);\r\n}\r\npublic static void main(String[] args){\r\n    Table table=new Table(\"红木桌\",100.5,3.2,2.3,1.5);\r\nSystem.out.println(\"创建一个桌子对象,属性如下\");\r\ntable.display();\r\n      table.area();\r\n      table.changeWeight(100);\r\n      System.out.println(\"更改重量后,属性如下\");    \r\n      table.display();\r\n}\r\n   }	   \r\n					   ',20,18,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5110,43,572,67,'D		   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5111,43,572,68,'C				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5112,43,572,73,'B				   \r\n					   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5113,43,572,74,'				B   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5114,43,572,70,'extends			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5115,43,572,71,'代码中存在隐藏的成员变量x             subClass是Super的一个子类，并且其中声明了和父类同名的变量x，此时子类的成员变量隐藏了父类的成员变量。				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5116,43,572,72,'覆盖的		   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5117,43,572,66,'相同的名字		   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5118,43,572,69,'					java.lang.Object   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5119,43,572,75,'		1			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5120,43,572,76,'         \r\n     		   \r\nclass Table{\r\n     String name;\r\n     double weight;\r\n     double width;\r\n     double length;\r\n     double height;\r\n     \r\n     Table(String n, double w, double wid, double l,double h){\r\n          name=n;\r\n          weight=w;\r\n          width=wid;\r\n          length=l;    \r\n          height=h;\r\n     }\r\n\r\n     double area(double width,double length){\r\n          double area=width*length;\r\n          return area;\r\n     }\r\n\r\n     void display(){\r\n          System.out.println(\"桌子的名称是\"+(name));\r\n          System.out.println(\"桌子的重量是\"+(weight));\r\n          System.out.println(\"桌子的宽度是\"+(width));\r\n          System.out.println(\"桌子的长度是\"+(length));\r\n          System.out.println(\"桌子的高度是\"+(height));\r\n     }\r\n\r\n     void changeweight(double w){\r\n          weight=w;\r\n     }\r\n\r\n     public static void main(String [] args){\r\n          Table T1=new Table(\"课桌\",20.0,50.0,100.0,120.0);\r\n          System.out.println(\"桌子的面积是：\"+T1.area(50.0,100.0));\r\n          T1.changeweight(25);\r\n          T1.display();\r\n    }\r\n}\r\n     \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (5121,44,606,67,'				D	   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5122,44,606,68,'			C		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5123,44,606,73,'					B   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5124,44,606,74,'		B			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5125,44,606,70,'		extends			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5126,44,606,71,'					父类的成员变量x，因为子类声明了一个和父类superclass同名的x   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5127,44,606,72,'				隐藏的	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5128,44,606,66,'		相同的名字			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5129,44,606,69,'				object	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5130,44,606,75,'			1 		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5131,44,606,76,'package com.test;\r\npublic class Table{\r\nString name;//\r\ndouble weight;//\r\ndouble width;\r\ndouble length;//\r\ndouble height;//\r\n//构造方法\r\npublic Table(String name,double weight,double width,double longth,double height){\r\nsuper();\r\nthis.name=name;\r\nthis.width=width;\r\nthis.length=length;\r\nthis.height=height;\r\n}\r\npublic void area(){\r\nSystem.out.println(\"桌面面积是\"+length*width);\r\n}\r\npublic void dispaly(){\r\n System.out.println(\"桌子名称:\"+name+\"\\n\"+\"重量:\"+weight+\"\\n\"+\"宽:\"+width+\"\\n\"+\"长:\"+length+\"\\n高:\"+height);\r\n}\r\npublic void changeweight(int i){\r\nthis.weight=i;\r\nSystem.out.println(\"面积改为\"+this.weight);\r\n}\r\npublic static void main(String[]args){\r\nTable table=new Table(\"红木桌\",100.5,3.2,2.3,1.5);\r\ntable.display();\r\ntable.area();\r\ntable.changeweight(100);\r\nSystem.out.println(\"更改重量后，属性如下\");\r\ntable.dispaly();\r\n}\r\n}\r\n\r\n   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5132,43,558,67,'					   D',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5133,43,558,68,'				C	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5134,43,558,73,'					A   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5135,43,558,74,'			B		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5136,43,558,70,'				extends	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5137,43,558,71,'					  变量名字：x。原因：子类定义了成员变量x',8,8,'					   ',0,NULL,NULL,NULL),
 (5138,43,558,72,'					   覆盖',8,0,'				 是隐藏，不是覆盖	   ',0,NULL,NULL,NULL),
 (5139,43,558,66,'					   相同名字',8,8,'					   ',0,NULL,NULL,NULL),
 (5140,43,558,69,'					   java.lang.Object',8,8,'					   ',0,NULL,NULL,NULL),
 (5141,43,558,75,'					   一个',8,8,'					   ',0,NULL,NULL,NULL),
 (5142,43,558,76,'					   \r\npublic class Table{\r\nprivate String name; //名称\r\nprivate float weight; //重量\r\nprivate float width; //宽度\r\nprivate float height; //高度\r\nprivate float length;// 长度\r\n\r\npublic Table(String name,float weight, float width , float height ,float length)\r\n{super();\r\nif(weight<0||height<0||width<0||length<0)\r\n{\r\nSystem.out.print(\"桌子的重量，宽度，长度和高度初始化时不能为负数\");\r\n}\r\nelse \r\n{\r\nthis.weight=weight;\r\nthis.width=width;\r\nthis.height=height;\r\nthis.length=length;\r\n}\r\n}\r\npublic int area(){\r\nreturn(this.length*this.width);\r\n}\r\npublic void display(){\r\nSystem.out.print(\"名字：\"+name+\";桌面长度:\"+length +\"桌面宽度:\"+width+\";重量:\"+weight+\";高度:\"+height);\r\n}\r\n\r\npublic void changeWeight(int w){\r\nif(weight<0）{\r\nSystem.out.print(\"桌子的重量不能为负数\");\r\n}\r\nelse{\r\nthis.weight=w;\r\n\r\nSystem.out.print(\"桌子的重量=\"+w)\r\n}\r\n}\r\n\r\npublic static void main (String{] args)\r\n{Table t=new Table(\"桌子\",29.8f,4.3f,10.2f,12.3f);\r\nSystem.out.print(\"创建一个桌子对象:\");\r\nt.display;\r\nSystem.out.print(\"面积\"+area());\r\nt.changeWeight(30);\r\nSystem.out.print(\"重量更改后的桌子对象;\"+\"/n\");\r\nt.display;\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n',20,20,'					   ',0,NULL,NULL,NULL),
 (5143,44,597,67,'			D		   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5144,44,597,68,'	C				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5145,44,597,73,'			A		   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5146,44,597,74,'			B		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5147,44,597,70,'	extends		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5148,44,597,71,'存在，父类中的成员变量x。  由于子类中定义的成员变量和父类中的成员变量同名，此时父类的成员变量被隐藏。					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5149,44,597,72,'		隐藏的			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5150,44,597,66,'		相同的名字			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5151,44,597,69,'			Object		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5152,44,597,75,'		1			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5153,44,597,76,'		public class Table {\r\n	private String name;\r\n	private double weight, width, length, height;\r\n	\r\n	public Table(String name,double weight,double width,double length,double height){\r\n		this.name=name;\r\n		this.weight=weight;\r\n		this.width=width;\r\n		this.length=length;\r\n		this.height=height;\r\n	}\r\n	\r\n	public void area(){\r\n		double S=width*length;\r\n		System.out.println(\"桌子面积为S=\"+S);\r\n	}\r\n	\r\n	public void display(){\r\n		System.out.println(\"桌子的名称为name=\"+name);\r\n		System.out.println(\"桌子的重量为weight=\"+weight);\r\n		System.out.println(\"桌子的宽度为width=\"+width);\r\n		System.out.println(\"桌子的长度为length=\"+length);\r\n		System.out.println(\"桌子的高度为=height\"+height);\r\n	}\r\n	\r\n	public void changeweight(int w){\r\n		this.weight=w;\r\n	}\r\n	\r\n	public static void main(String[] args){\r\n		Table test1=new Table(\"沉香木电竞桌\",100,3,2,3);\r\n		test1.area();\r\n		test1.changeweight(200);\r\n		test1.display();\r\n	}\r\n}			   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5154,44,607,67,'D	',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5155,44,607,68,'C   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5156,44,607,73,'A				   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5157,44,607,74,'B	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5158,44,607,70,'extends	  ',8,8,'					   ',0,NULL,NULL,NULL),
 (5159,44,607,71,'存在，父类的成员变量x，因为子类声明了一个和父类	superClass同名的x		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5160,44,607,72,'隐藏的			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5161,44,607,66,'相同的名字 ',8,8,'					   ',0,NULL,NULL,NULL),
 (5162,44,607,69,'Object					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5163,44,607,75,'1			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5164,44,607,76,'package com.test;\r\npublic class Table{\r\n      String name;\r\n      double weight;\r\n      double width;\r\n      double length;\r\n      double height;\r\n//构造方法\r\npublic Table(String name,double weight,double width,double longth,double height){\r\n   super();\r\n   this.name=name;\r\n   this.weight=weight;\r\n   this.width=width;\r\n   this.length=length;\r\n   this.height=height;\r\n}\r\n     //计算桌子面积\r\npublic void area(){\r\n   System.out.println(\"桌子面积是\"+length*width);\r\n}\r\n//在屏幕上输出所有数据成员的值\r\npublic void display(){\r\n  System.out.println(\"桌子名称：\"+name+\"\\n\"+\"重量：\"+weight+\"\\n\"+\"宽：\"+width+\"\\n\"+\"长：\"+length+\"\\n高：\"+height);\r\n//改变桌子重量的方法\r\npublic void changeWeight(int i){\r\n  this.weight=i;\r\n  System.out.println(\"面积改为\"+this.weight);\r\n}\r\npublic static void main(String[] args){\r\n   Table table=new Table(\"红木桌\",100.5,3.2,2.3,1.5);\r\nSystem.out.println(\"创建一个桌子对象，属性如下\");\r\ntable.display();\r\n       table.area();\r\n       table.changeWeight(100);\r\n       System.out.println(\"更改重量后，属性如下\");\r\n       table.display();\r\n}\r\n}				   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5165,44,590,67,'		D			   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5166,44,590,68,'			C		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5167,44,590,73,'			B		   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5168,44,590,74,'				A	   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5169,44,590,70,'		extends		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5170,44,590,71,'					 是   被隐藏的变量父类的x      子类重新定义了父类的方法，使父类成员x被隐藏，父类的方法被重写',8,8,'					   ',0,NULL,NULL,NULL),
 (5171,44,590,72,'			覆盖的	   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5172,44,590,66,'				相同的姓名	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5173,44,590,69,'				java.lang.Object	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5174,44,590,75,'			1		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5175,44,590,76,'     \r\nclass Table { \r\n    public String name;\r\n    public double weight;\r\n    public double width;\r\n    public double  length;\r\n    public double height;\r\n\r\n   \r\n    \r\n    public Table(String name, double  weight, double  width, double length, double  height)\r\n    \r\n    { \r\n    	super();\r\n    	this.weight=weight;\r\n    	this.width=width;\r\n    	this.length=length;\r\n    	this.height =height;\r\n    }\r\n    \r\n    public void area(){\r\n    	System.out.println(\"桌子面积是:\"+length*width)；\r\n    }\r\n    public void display(){\r\n    	System.out.println(\"桌子名称:\"+name+\"\\n\"+\"重量:\"+weight+\"\\n\"+\"宽:\"+width+\"\\n\"+\"长:\"+length+\"\\n\"+\"高:\"+height);\r\n    }\r\n     public void changeWeight(int w){\r\n    	 this.weight=w;\r\n    	 System.out.println(\"重量改为\"+this.weight);\r\n     }\r\npublic class table{\r\n	public static void main(String[]args){\r\n		Table table=new Table(\"木桌\",20,1.2,2.4,1.1);\r\n		System.out.println(\"创建一个桌子对象，属性如下\");\r\n		table.area();\r\n		table.display();\r\n		table.changeWeight(20);\r\n		System.out.println(\"更改重量后，属性如下\")；\r\n		\r\n	table.display();\r\n		\r\n		\r\n		\r\n	}\r\n	\r\n}\r\n\r\n    	 \r\n    \r\n }\r\n    \r\n    	\r\n    	',20,18,'					   ',0,NULL,NULL,NULL),
 (5176,43,567,67,'D			   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5177,43,567,68,'C			   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5178,43,567,73,'A		   \r\n					   ',0,0,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5179,43,567,74,'B		   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5180,43,567,70,'extends		   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5181,43,567,71,'存在成员变量的隐藏，X，subClass为superclass的子类，子类中定义了的X变量与父类中的成员变量名字相同，则父类中的成员变量被隐藏		   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5182,43,567,72,'隐藏的			   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5183,43,567,66,'相同的名字			   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5184,43,567,69,'Object				   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5185,43,567,75,'1				   \r\n					   ',8,8,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5186,43,567,76,'import java.util.Scanner;\r\npublic class Table {\r\n    String name;\r\n    int weight,width,length,height;\r\n    public Table(String name,int weight,int width,int length,int height){\r\n        this.name=name;\r\n        this.weight=weight;\r\n        this.width=width;\r\n        this.length=length;\r\n        this.height=height;\r\n    }\r\n    int area(int length,int width){\r\n        return length*width;\r\n    }\r\n    void display(){\r\n        System.out.println(\"桌子的名字为\"+name+\"重量为\"+weight+\"宽度为\"+width+\"长度为\"+length+\"高度为\"+height);\r\n    }\r\n    int changeWeight(int w){\r\n        this.weight=w;\r\n        return weight;\r\n    }\r\n    public static void main(String[] args){\r\n        Table table=new Table(\"楠木桌\",100,40,60,50);\r\n        int area=table.area(table.length,table.width);\r\n        System.out.println(\"桌子的面积为：\"+area);\r\n        Scanner input=new Scanner(System.in);\r\n        System.out.println(\"请输入一个重量：\");\r\n        int m=input.nextInt();\r\n        table.changeWeight(m);\r\n        table.display();\r\n    }\r\n}		   \r\n					   ',20,18,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5187,43,579,67,'D\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5188,43,579,68,'C\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5189,43,579,73,'A		   \r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5190,43,579,74,'A	   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5191,43,579,70,'extends	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5192,43,579,71,'存在。隐藏了父类中的X，因为在子类中定义了一个方法，并且这个方法的名字，返回类型，参数个数和类型与父类方法完全相同，所以父类被隐藏。\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5193,43,579,72,'无限\r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5194,43,579,66,'相同的名字   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5195,43,579,69,'Object   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5196,43,579,75,'无限		   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5197,43,579,76,'public class table{\r\nprivate string name;\r\nprivate double weight;\r\nprivate double width;\r\nprivate double length;\r\nprivate double height;\r\n\r\npublic table(string name,int weight,int width,int length,int height)\r\n{\r\nsuper();\r\nthis.weight=weight;\r\nthis.width=width;\r\nthis.length=length;\r\nthis.height=height;\r\npublic table(){\r\n name=\"    \";}\r\n}\r\n\r\npublic double getarea(){\r\nreturn width*length:\r\n}\r\n\r\npublic void display(){\r\nSystem.out.println(this.name);\r\nSystem.out.println(this.weight);\r\nSystem.out.println(this.width);\r\nSystem.out.println(this.length);\r\nSystem.out.println(this.height);\r\nSystem.out.println(this.getarea());\r\n}\r\n\r\npublic void changeweight(int w){\r\nthis.weight=w;\r\n}\r\n\r\npublic static void main(String[]args){\r\nTable table=new Table(\"桌子\",20,50,60,40);\r\nint area=table.area();\r\ntable.changeweight(30);\r\ntable.display();\r\n}\r\n}	   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5198,44,593,67,'	D				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5199,44,593,68,'			C	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5200,44,593,73,'					 A',0,0,'					   ',0,NULL,NULL,NULL),
 (5201,44,593,74,'					   B',8,8,'					   ',0,NULL,NULL,NULL),
 (5202,44,593,70,'		extends		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5203,44,593,71,'			父类的成员变量x被隐藏，因为子类声明了一个和父类同名的变量x		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5204,44,593,72,'				隐藏的	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5205,44,593,66,'					   相同的名字',8,8,'					   ',0,NULL,NULL,NULL),
 (5206,44,593,69,'				Object	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5207,44,593,75,'					   1',8,8,'					   ',0,NULL,NULL,NULL),
 (5208,44,593,76,'package com.test;\r\npublic class Table{\r\nString name;\r\ndouble weight;\r\ndouble width;\r\ndouble length;\r\ndouble height;\r\npublic Table(String name,double weight,double width,double length,double height){\r\nsuper();\r\nthis().name=name;\r\nthis().weight=weight;\r\nthis().length=length;\r\nthis().height=height;\r\n}\r\npublic void area(){\r\nSystem.out.print(\"桌子面积是\"+length*width);\r\n}\r\npublic void display(){\r\nSystem.out.print(\"桌子的名称：\"+name+\"\\n\"+\"重量：\"+weight+\"\\n\"+\"宽：\"+width+\"\"+\"\\n\"+\"长：\"+length+\"\\n\"+\"高：\"+height);\r\n}\r\npublic void changeWeight(int i){\r\nthis.weight=i;\r\nSystem.out.print(\"面积改为\"+this.weight);\r\n}\r\npublic static void main(String[]args ){\r\nTable table=new Table(\"红木桌\",70.5,2.5,1.5,1.0);\r\nSystem.out.print(\"创建一个桌子对象：\");\r\ntable.display();\r\ntable.changeWeight(70);\r\nSystem.out.print（\"更改重量：\"）;\r\ntable.display();\r\n   }\r\n}					   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5209,44,598,67,'		D			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5210,44,598,68,'		C			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5211,44,598,73,'					   A\r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5212,44,598,74,'					B',8,8,'					   ',0,NULL,NULL,NULL),
 (5213,44,598,70,'				extends	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5214,44,598,71,'					存在成员变量的隐藏，变量名 x，子类subClass中的成员变量x与父类成员变量x同名，父类中的x被隐藏。   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5215,44,598,72,'					   隐藏\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5216,44,598,66,'			相同的名字		   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5217,44,598,69,'				Object类	   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5218,44,598,75,'			1		   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5219,44,598,76,'package bao;\r\n\r\n class Table{\r\n	String name;\r\n	double weight,wide,length,high;\r\n	public Table(String name,double weight,double wide,double length,double high){\r\n		this.name=name;\r\n		this.weight=weight;\r\n		this.wide=wide;\r\n		this.length =length;\r\n		this.high=high;\r\n	}\r\n	double area(){\r\n		double s=wide*length;\r\n		return s;\r\n	}\r\n	void display (){\r\n		System.out.println(\"桌子的名称为\"+name);\r\n		System.out.println(\"桌子的重量为\"+weight);\r\n		System.out.println(\"桌子的宽度为\"+wide);\r\n		System.out.println(\"桌子的长度为\"+length);\r\n		System.out.println(\"桌子的高度为\"+high);\r\n		System.out.println(\"桌子的面积为\"+area());\r\n	}\r\n	void changeWeight(double w){\r\n		weight=w;\r\n		\r\n	}\r\n}\r\npublic class bao {\r\n	public static void main (String[] args){\r\n		Table na=new Table(\"baobao\",65,84,45,35);\r\n		na.display();\r\n		na.changeWeight(96);\r\n		System.out.println(\"改变桌子重量为\"+na.weight);\r\n		\r\n		\r\n		\r\n	}\r\n\r\n}\r\n					   ',20,20,'					   ',0,NULL,NULL,NULL),
 (5220,43,580,67,'D					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5221,43,580,68,'C					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5222,43,580,73,'A					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5223,43,580,74,'B					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5224,43,580,70,'extends					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5225,43,580,71,'存在。隐藏的变量名字是x，因为子类subClass中定义的成员变量和父类superClass中的成员变量同名					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5226,43,580,72,'覆盖的				   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5227,43,580,66,'相同的名字					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5228,43,580,69,'Object					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5229,43,580,75,'1					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5230,43,580,76,'public class Table {\r\n		  String name;\r\n		  double weight,width,length,height;\r\n		Table(String name,double weight,double width,double length,double height){\r\n		  super();\r\n		  this.name=name;\r\n		  this.weight=weight;\r\n		  this.width=width;\r\n		  this.length=length;\r\n		  this.height=height;\r\n		}\r\n		void area(){\r\n		  double s;\r\n		  s=length*width;\r\n		  System.out.println(\"桌子面积：\"+s);\r\n		}\r\n		void display(){\r\n		  System.out.println(\"桌子名称：\"+name+\"\\n重量：\"+weight+\"\\n宽：\"+width+\"\\n长：\"+length+\"\\n高：\"+length);\r\n		}\r\n		void changeweight(int w){\r\n		  this.weight=w;\r\n		  System.out.println(\"改变桌子重量后,重量变为：\"+this.weight);\r\n		}\r\n		public static void main(String[] args){\r\n		  Table table=new Table(\"小木桌\",100.0,1.0,2.0,3.0);\r\n		  table.display();\r\n		  table.area();\r\n		  table.changeweight(200);\r\n		}\r\n		}\r\n  \r\n\r\n  					   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5231,43,581,67,'D			   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5232,43,581,68,'C		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5233,43,581,73,'A					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5234,43,581,74,'B					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5235,43,581,70,'extends					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5236,43,581,71,'存在。 隐藏了父类中的x	,因为子类中的变量名与父类相同。				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5237,43,581,72,'覆盖的				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5238,43,581,66,'相同的名字					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5239,43,581,69,'Object					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5240,43,581,75,'无限					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5241,43,581,76,'public class Table{\r\n  String name;\r\n  float weight,width,length,height;\r\n  Table(String name,float weight,float width,float length,float height){\r\n    super();\r\n    this.name=name;\r\n    this.weight=weight;\r\n    this.width=width;\r\n    this.length=length;\r\n    this.height=height;\r\n    }\r\n  void area(){\r\n     float Area=length*width;\r\n     System.out.println(\"桌子面积为: \"+Area);\r\n    }\r\n  void display(){\r\n    System.out.println(\"名称：\"+name+\" 重量: \"+weight+\" 桌面宽度： \"+width+\" 长度： \"+length+\" 高度：\"+height);\r\n    }\r\n  void changeWeight(int w){\r\n    this.weight=w;\r\n    }\r\n public static void main(String[] args){\r\n   Table t1=new Table(\"方桌\",100f,2f,2f,1f);\r\n   t1.area();\r\n   t1.changeWeight(80);\r\n   System.out.println(\"桌子属性如下: \");\r\n   t1.display();\r\n  }\r\n}\r\n   \r\n   					   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5242,44,592,67,'D					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5243,44,592,68,'C					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5244,44,592,73,'A					   \r\n					   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5245,44,592,74,'B					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5246,44,592,70,'extends					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5247,44,592,71,'存在隐藏的成员变量x,因为子类中的成员变量和父类中的成员变量同名，所以父类中的成员变量被隐藏					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5248,44,592,72,'覆盖的					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5249,44,592,66,'相同的名字					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5250,44,592,69,'Object					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5251,44,592,75,'1					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5252,44,592,76,'class Table {\r\n\r\npublic String name;\r\n\r\npublic double weight;\r\n\r\npublic double width;\r\n\r\npublic double length;\r\n\r\npublic double height;\r\n\r\npublic Table(String name, double weight, double width, double length,double height)\r\n\r\n{\r\n\r\nsuper();\r\n\r\nthis.name= name;\r\n\r\nthis.weight = weight;\r\n\r\nthis.width = width;\r\n\r\nthis.length = length;\r\n\r\nthis.height = height;\r\n\r\n}\r\npublic void area(){\r\n\r\nSystem.out.println(\"桌子面积是\"+length*width);\r\n\r\n}\r\n\r\npublic void display(){\r\n\r\nSystem.out.println(\"桌子名称:\"+name+\"\\n\"+\"重量:\"+weight+\"\\n\"+\"桌面宽度:\"+width+\"\\n\"+\"长度:\"+length+\"\\n\"+\"桌子高度:\"+height);\r\n }\r\n\r\npublic void changeWeight(int w){\r\n\r\nthis.weight=w;\r\n\r\nSystem.out.println(\"桌子的重量改为\"+this.weight);\r\n\r\n}\r\n}\r\npublic class QZY{\r\n\r\npublic static void main(String[] args) {\r\n\r\nTable table=new Table(\"木桌\",100,3,2,1);\r\n\r\ntable.display();\r\n\r\ntable.area();\r\n\r\ntable.changeWeight(100);\r\n\r\ntable.display();\r\n\r\n}\r\n\r\n}\r\n\r\n					   ',20,18,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5253,43,577,67,'D\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5254,43,577,68,'C					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5255,43,577,73,'B			   \r\n					   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5256,43,577,74,'B				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5257,43,577,70,'extends\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5258,43,577,71,'存在x   因为子类也定义了x  隐藏了父类里的变量x   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5259,43,577,72,'覆盖的			   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5260,43,577,66,'相同的名字					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5261,43,577,69,'Object  \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5262,43,577,75,'1\r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5263,43,577,76,'public class Table{\r\n			private String name;\r\n			private double weight;\r\n			private double width;\r\n			private double length;\r\n			private double height;\r\n			public Table(String a,double b,double c,double d,double e){\r\n				name=a;\r\n				weight=b;\r\n				width=c;\r\n				length=d;\r\n				height=e;\r\n			}\r\n			public void area(){\r\n				System.out.println(\"桌子面积=\"+length*width);\r\n			}\r\n			public void display(){\r\n				System.out.println(\"桌子名字=\"+name+\"\\n\"+\"重量=\"+weight+\"\\n\"+\"桌面宽度=\"+width+\"\\n\"+\"长度=\"+length+\"\\n\"+\"高度=\"+height);\r\n			}\r\n			public void changeWeight(int w){\r\n				weight=w;\r\n				System.out.println(\"面积变成\"+weight);\r\n			}\r\n			public static void main(String[] args){\r\n				Table table=new Table(\"橡树木头\",50,2,1,1.5);\r\n				table.display();\r\n				table.area();\r\n				table.changeWeight(120);\r\n				System.out.println(\"更改后\");\r\n				table.display();\r\n				\r\n			}\r\n		}\r\n					   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5264,44,605,67,'		D			   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5265,44,605,68,'	C				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5266,44,605,73,'	A				   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5267,44,605,74,'	B				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5268,44,605,70,'	extends				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5269,44,605,71,'			存在，父亲的x变量隐藏，因为Subclass是superClass是一个子类，其中声明了一个弗雷SuperClass同名的变量x，并定义了与之相同的变量setX		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5270,44,605,72,'	隐藏的				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5271,44,605,66,'		相同的			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5272,44,605,69,'		Object			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5273,44,605,75,'	1				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5274,44,605,76,'	package com.est;\r\npublic class Table{\r\n       String name;\r\n       double weight;\r\n       double widh;\r\n       double height;\r\npublic Table(String name,double width,double weight ,double longth,double height){\r\n       super();\r\n       this.name=name;\r\n       this.weight=weight;\r\n       this.width=width;\r\n       this.length=length;\r\n       this.height=height;\r\n       }\r\n       public void area(){\r\n         System.out.println(\"面积\"+length*width);\r\n       }\r\n       public void display(){\r\n         System.out.println(\"桌子名称：\"桌子名称:\"+name+\"\\n\"+重量:\"+weight+\"\\n\"+\"宽:\"+width+\"\\n\"+\"长：\"+length+\"\\n高:\"+height);\r\n       }\r\n       public void changeWeight (int i){\r\n         this.weight=i;\r\n         System.out.println(\"面积改为\"+this.weight);\r\n       }\r\n       public static void main (String[] args){\r\n         Table table=new Table(\"红木桌\",100.7,3.4,2.3,1.5);\r\n         System.out.println(\"创建一个桌子对象，属性如下\");\r\n         table.display();\r\n               table.area();\r\n               table.changeWeight(100);\r\n               System.out.println(\"更改重量后，属性如下\"）；\r\n               table.display();\r\n      }\r\n}				   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5275,43,561,67,'			D		   \r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5276,43,561,68,'					C   \r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5277,43,561,73,'					   A\r\n					   \r\n					   \r\n					   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5278,43,561,74,'					   B\r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5279,43,561,70,'					   extends\r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5280,43,561,71,'				父类superClass的变量x被子类subClass的变量x隐藏	   \r\n					   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5281,43,561,72,'					   覆盖\r\n					   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5282,43,561,66,'					   相同的名称\r\n					   \r\n					   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5283,43,561,69,'					   Object\r\n					   \r\n					   \r\n					  java.lang.Object ',8,0,'					   ',0,NULL,NULL,NULL),
 (5284,43,561,75,'					   1\r\n					   \r\n					   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5285,43,561,76,'class Table1{\r\n	\r\n        String name;\r\n	float weight,width,height,length;\r\n	\r\n	Table1(String name, float weight, float width, float height, float length){\r\n		this.name=name;\r\n		this.weight=weight;\r\n		this.width=width;\r\n		this.height=height;\r\n		this.length=length;\r\n	}\r\n	\r\n	float area(){\r\n		float s = 0;\r\n		s=width*length;\r\n		return s;\r\n	}\r\n	\r\n	void display() {\r\n		System.out.println(\"桌子的名字：\"+name);\r\n		System.out.println(\"桌子的重量：\"+weight);\r\n		System.out.println(\"桌面的宽度：\"+width);\r\n		System.out.println(\"桌面的长度：\"+length);\r\n		System.out.println(\"桌子的高度：\"+height);\r\n	}\r\n	\r\n	void changeWeight(int w) {\r\n		weight=w;\r\n	}\r\n}\r\n	\r\npublic class Table {\r\n\r\n	public static void main(String[] args) {\r\n		Table1 table =new Table1(\"木桌\", 55, 22, 12, 53);\r\n		table.display();\r\n		float s=table.area();\r\n		System.out.println(\"桌面积：\"+s);\r\n		table.changeWeight(90);\r\n		table.display();\r\n	}\r\n\r\n}\r\n		   \r\n					   \r\n					   ',20,0,'					   ',0,NULL,NULL,NULL),
 (5286,44,600,67,'		D			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5287,44,600,68,'	B				   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5288,44,600,73,'	A				   \r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5289,44,600,74,'	B				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5290,44,600,70,'	extends				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5291,44,600,71,'	存在，父类的x变量隐藏，因为SubClass是SuperClass是一个子类，其中声明了一个和父类SuperClass同名的变量x，并定义了与之相同的方法setX				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5292,44,600,72,'	覆盖的				   \r\n					   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5293,44,600,66,'	相同的名字			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5294,44,600,69,'	Object				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5295,44,600,75,'	1				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5296,44,600,76,'	class Table{\r\n	public String name;\r\n        public double weight;\r\n        public double width;\r\n        public double longth;\r\n        public double height;\r\n        public Table(String name,double weight,double width,double longth,double height)\r\n        {\r\n        super();\r\n        this.name=name;\r\n        this.weight=weight;\r\n        this.width=width;\r\n        this.longth=longth;\r\n        this.height=height;\r\n        }\r\n        public void area(){\r\n        System.out.println(\"桌子面积是\"+longth*wisth);\r\n        }\r\n        public void display(){\r\n        System.out.println(\"桌子名称：\"+name\"\\n\"+\"重量：\"+weight+\"n\\\"宽：\"+width+\"n\\\"+\"长：\"+longth+\"n\\\"+\"高：\"+height);\r\n        }\r\n        public void changeWeight(int i){\r\n        this.weight=i;\r\n        System.out.println(\"重量改为\"+this.weight);}}\r\n        public class gg{\r\n        public static void main(String[]arge){\r\n        Table table=new Table(\"木桌\",100.5,3.2,2.3.1.5);\r\n        System.out.println(\"创建一个桌子对象，属性如下\");\r\n        table.display();\r\n        table.area()\"\r\n        table.changeWeight(100);\r\n        System.out.println(\"更改重量后，属性如下\");\r\n        table.display();\r\n        }}			   \r\n					   ',20,18,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5297,43,566,67,'D',8,8,'					   ',0,NULL,NULL,NULL),
 (5298,43,566,68,'C',8,8,'					   ',0,NULL,NULL,NULL),
 (5299,43,566,73,'A',0,8,'					   ',0,NULL,NULL,NULL),
 (5300,43,566,74,'B',8,8,'					   ',0,NULL,NULL,NULL),
 (5301,43,566,70,'extends		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5302,43,566,71,'存在；变量的名字是x;因为子类subClass中定义的成员变量x与父类superClass定义的成员变量同名，此时父类的成员变量被子类的成员变量隐藏。',8,8,'					   ',0,NULL,NULL,NULL),
 (5303,43,566,72,'   隐藏的',8,8,'					   ',0,NULL,NULL,NULL),
 (5304,43,566,66,'同样的名字	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5305,43,566,69,'object		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5306,43,566,75,'1				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5307,43,566,76,'public class Table{\r\n   String Name;\r\n   double weight;\r\n   double width;\r\n   double long;\r\n   double height;\r\n   \r\n public Table(String n,double weight,double width,double l,double h){\r\n  this.Name=n;\r\n  this.weight=weight;\r\n  this.width=width;\r\n  this.long=l;\r\n  this.height=h;}\r\n\r\n  public void area()\r\n   {\r\n    double S = long*height;\r\n    System.out.println(\"桌子的面积是：\"S);\r\n    }\r\n\r\n  public void display()\r\n   {\r\n     System.out.println(\"桌子名字=\"+Name+\",\"重量=\"+weight+,\"桌子宽度=\"+width+,\"长度=\"+long+,\"桌子高度=\"+height+);\r\n    }\r\n\r\n  public void changeWeight(int w){\r\n  this.weight=w;\r\n  System.out.println(\"重量更改为：\"weight);\r\n    }\r\n \r\n public static void main(String[] args){\r\n Table table=new Table(\"我的桌子\",100,0.5,0.8,0.5);\r\n table.display();\r\n table.area();\r\n table.changeWeight(80);\r\n System.out.println(\"新数据:\");\r\n table.display();\r\n    }\r\n}\r\n    \r\n \r\n \r\n \r\n \r\n\r\n  \r\n\r\n\r\n  \r\n',20,18,'					    public void area(）这个方法 要有返回值 ',0,NULL,NULL,NULL),
 (5308,43,576,67,'D			   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5309,43,576,68,'C				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5310,43,576,73,'B		   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5311,43,576,74,'A			   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5312,43,576,70,'extends					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5313,43,576,71,'存在 变量x 原因：subClass是superClass的一个子类，其中声明了一个和父类superClass同名的变量x，所以父类的成员变量x被隐藏			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5314,43,576,72,'隐藏的				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5315,43,576,66,'同样的名字					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5316,43,576,69,'Object				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5317,43,576,75,'1					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5318,43,576,76,'package com.test;\r\npublic class Table{\r\n   String name;\r\n   double weight;\r\n   double width;\r\n   double length;				\r\n   double height;\r\npublic Table(String name,double weight,double width,double length,double height)\r\n{\r\nthis.name=name;\r\nthis.weight=weight;\r\nthis.width=width;\r\nthis.length=length;\r\nthis.height=height;\r\n}\r\npublic void area()\r\n{\r\nSystem.out.println(\"桌子面积是\"+length*width);\r\n}\r\npublic void display()\r\n{\r\nSystem.out.println(\"桌子名称:\"+name+\"\\n\"+\"重量:\"+weight+\"\\n\"+\"桌面宽度：\"+width+\"\\n\"+\"桌面长度:\"+length+\"\\n\"+\"桌子高度：\"+height+\"\\n\");\r\n}\r\npublic void changeWeight(int w)\r\n{\r\nweight=w;\r\n}\r\npublic static void main(String[]args)\r\n{\r\nTable table=new Table(\"课桌\"，100,3,2,2)；\r\nSystem.out.println(\"创建一个桌子对象，属性如下\")；\r\ntable.area();\r\ntable.changeWeight(120);\r\ntable.display;\r\n}\r\n   }\r\n',20,18,'					   ',0,NULL,NULL,NULL),
 (5319,43,574,67,'		D			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5320,43,574,68,'			C		   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5321,43,574,73,'		A			   \r\n					   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5322,43,574,74,'		B			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5323,43,574,70,'		extends			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5324,43,574,71,'			存在，superclass里的变量x被隐藏，因为subclass是声明为superclass的一个子类，并定义了与父类相同的成员变量，父类中的x被隐藏。			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5325,43,574,72,'		隐藏的			   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5326,43,574,66,'	相同的名字				   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5327,43,574,69,'			java.lang.Object		   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5328,43,574,75,'			1		   \r\n					   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5329,43,574,76,'public class Table{\r\npublic String tableName;\r\npublic float tableWeight;\r\npublic float tableWidth;\r\npublic float tableLength;\r\npublic float tableHeight;\r\n\r\npublic Table(String name,float weight,float width,float length,float height)\r\n{\r\ntableName=name;\r\ntableWeight=weight;\r\ntableWidth=width;\r\ntableLength=length;\r\ntableHeight=height;\r\n}\r\npublic float Area(){\r\nreturn tableWidth*tableLength;\r\n}\r\npublic void ChangeWeight(float weight)\r\n{\r\ntable Weight=weight;\r\n}					   \r\npublic void Display(){\r\nSystem.out.println(\"桌子名称:\"+tableName+\"重量是:\"+tableWeight+\"桌面宽度:\"+tableWidth+\"桌面长度;\"+tableLenght+\"桌面高度:\"+tableHeight);\r\n}\r\n}\r\npublic class Main{\r\npublic static void main(String[]args)\r\n{\r\nTable myTable=new Table(\"书桌\",50,50,50,50);\r\nmyTable.Display();\r\nSystem.out.println(\"改变重量后为:\");\r\nmyTable.area();\r\nmyTable.ChangeWeight(40);\r\nmyTable.Display();\r\n}\r\n}			   \r\n					   ',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5330,43,575,67,'					   D',8,8,'					   ',0,NULL,NULL,NULL),
 (5331,43,575,68,'				C	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5332,43,575,73,'		B			   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5333,43,575,74,'					   B',8,8,'					   ',0,NULL,NULL,NULL),
 (5334,43,575,70,'entends	   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5335,43,575,71,'该代码中存在隐藏变量x，subClass是Super的一个子类，并声明了子类和父类同名的变量x，此时子类的成员变量隐藏了父类的成员变量。		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5336,43,575,72,'				覆盖的	   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5337,43,575,66,'					   相同的名字',8,8,'					   ',0,NULL,NULL,NULL),
 (5338,43,575,69,'	Object				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5339,43,575,75,'		1			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5340,43,575,76,'public class Table {						\r\n  private String name;						\r\n  private float weight;						\r\n  private float width;						\r\n  private float height;						\r\n  private float length;						\r\npublic Table() {						\r\n}						\r\n// 带4个参数的构造方法初始化所有数据成员						\r\npublic Table(float weight, float width, float height, float length) {						\r\nsuper();						\r\nif (weight < 0 || height < 0 || width < 0 || length < 0) {						\r\nSystem.out.println(\"桌子的重量，宽度、长度和高度初始化时不能为负数\");						\r\n} else {						\r\nthis.weight = weight;						\r\nthis.width = width;						\r\nthis.height = height;						\r\nthis.length = length;						\r\n}						\r\n}						\r\n// 计算桌面面积						\r\npublic int area() {						\r\nreturn (int) (this.length * this.width);						\r\n}						\r\npublic void display() {						\r\nSystem.out.println(\"名字:\" + name + \";桌面长度:\" + length + \";桌面宽度:\" + width						\r\n+ \";重量:\" + weight+\";高度：\"+height);						\r\n}						\r\npublic String getName() {						\r\nreturn name;						\r\n}						\r\npublic void setName(String name) {						\r\nthis.name = name;						\r\n}						\r\npublic float getWeight() {						\r\nreturn weight;						\r\n}						\r\npublic void setWeight(float weight) {						\r\nif (weight < 0) {						\r\nSystem.out.println(\"桌子的重量不能为负数\");						\r\n} else {						\r\nthis.weight = weight;						\r\n}						\r\n}						\r\npublic float getWidth() {						\r\nreturn width;						\r\n}						\r\npublic void setWidth(float width) {						\r\nif (width < 0) {						\r\nSystem.out.println(\"桌子的宽度不能为负数\");						\r\n} else {						\r\nthis.width = width;						\r\n}						\r\n}						\r\npublic float getHeight() {						\r\nreturn height;						\r\n}						\r\npublic void setHeight(float height) {						\r\nif (height < 0) {						\r\nSystem.out.println(\"桌子的高度不能为负数\");						\r\n} else {						\r\nthis.height = height;						\r\n}						\r\n}						\r\npublic float getLength() {						\r\nreturn length;						\r\n}						\r\npublic void setLength(float length) {						\r\nif (height < 0) {						\r\nSystem.out.println(\"桌子的长度不能为负数\");						\r\n} else {						\r\nthis.length = length;						\r\n}						\r\npublic void changeWeight(int i){\r\nthis.weight=i;\r\nSystem.out.println（\"面积改为\"+this.weight）;\r\n}\r\npublic static void main(String[] args){\r\nTable table=new Table;\r\nSystem.out.println(创建一个桌子对象，属性如下\");\r\ntable.diplay();\r\n  table.area();\r\ntable.changeWeight(100);\r\nSystem.out.println(\"更改重量后，属性如下\");\r\ntable.display();\r\n}\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n',20,20,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5341,44,595,67,'		D			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5342,44,595,68,'		C			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5343,44,595,73,'	B				   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5344,44,595,74,'	A				   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5345,44,595,70,'	extends				   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5346,44,595,71,'	superClass( ),		子类成员变量和父类成员变量同名。		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5347,44,595,72,'		隐藏			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5348,44,595,66,'相同的名字',8,8,'					   ',0,NULL,NULL,NULL),
 (5349,44,595,69,'java.lang.Object	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5350,44,595,75,'1		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5351,44,595,76,'	package Table;\r\n\r\npublic class Table \r\n{	\r\n	public String name;//桌子名称\r\n	       double weight;//重量\r\n	       double longth;//长\r\n	       double width;//宽\r\n	       double height;//高\r\n   \r\n//构造方法\r\n	public Table(String name,double weight,double width,double longth,double height)\r\n    {\r\n    	  super();\r\n    	  this.name=name;\r\n    	  this.weight=weight;\r\n    	  this.longth=longth;\r\n    	  this.width=width; 	 \r\n    	  this.height=height;\r\n    }\r\n		\r\n\r\n//计算面积\r\n		public void area()\r\n		{\r\n			System.out.println(\"桌子的面积\"+longth*width);\r\n			\r\n		}\r\n		\r\n		public void display()\r\n		{\r\n			System.out.println(\"桌子名称\"+name);\r\n			System.out.println(\"重量\"+weight);\r\n			System.out.println(\"长\"+longth);\r\n			System.out.println(\"宽\"+width);\r\n			System.out.println(\"高\"+height);		\r\n		}\r\n	\r\n\r\n//改变桌子重量方法\r\n		public void changeWeight(int i)\r\n		{\r\n			this.weight=i;\r\n			System.out.println(\"面积改为\"+this.weight);\r\n		}\r\n\r\n		public static void main (String [] args)\r\n		{\r\n			Table table=new Table(\"红木桌\",200,5,4,1.45);\r\n			System.out.println(\"创建一个桌子对象，属性如下\");\r\n			table.display();\r\n			     table.area();\r\n			     table.changeWeight(100);\r\n			     System.out.println(\"更改重量后，属性如下\");\r\n			     table.display();\r\n		}\r\n}\r\n				   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5352,44,603,67,'			D		   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5353,44,603,68,'		C			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5354,44,603,73,'			A	   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5355,44,603,74,'				B	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5356,44,603,70,'			extends		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5357,44,603,71,'			存在，父亲的成员变量x，因为子类声明了哪个一个和父类superclass同名的x		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5358,44,603,72,'					隐藏的   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5359,44,603,66,'			相同的		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5360,44,603,69,'		Object			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5361,44,603,75,'		1			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5362,44,603,76,'				package com.test;\r\npublic class Table{\r\n	String name;\r\n	double weight;\r\n	double width;\r\n 	double length;\r\n	double height;\r\npublic Table(String name,double weight,double width,double length,double height){\r\n	super();\r\n	this.name=name;\r\n	this.weight=weight;\r\n	this.width=width;\r\n	this.length=length;\r\n	this.height=height;\r\n}\r\npublic void area(){\r\n	System.out.println(\"桌子面积是\"+length*width);\r\n}\r\npublic void display(){\r\n	System.out.println(\"桌子名称：\"+name+\"\\n\"+\"重量：\"+weight+\"\\n\"+\"宽:\"+width+\"\\n\"+\"长：\"+length+\"\\n高：\"+height);\r\n}\r\npublic void changeWeight(int i){\r\n	this.weight=i;\r\n	System.out.println(\"面积改为\"+this.weight);\r\n}\r\npublic static void main(String[] args){\r\n	Table table=new Table(\"红木桌\",100.5,3.2,2.3,1.5);\r\n	System.out.println(\"创建一个桌子对象，属性如下\");\r\n	table.display();\r\n		table.area();\r\n		table.changeWeight(100);\r\n		System.out.println(\"更改重量后，属性如下\");\r\n		table.display();\r\n	}\r\n} 	   ',20,18,'					   ',0,NULL,NULL,NULL),
 (5363,44,604,67,'			D		   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5364,44,604,68,'		B			   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5365,44,604,73,'			A		   ',0,8,'					   ',0,NULL,NULL,NULL),
 (5366,44,604,74,'		B			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5367,44,604,70,'			extends		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5368,44,604,71,'			存在，父类的x变量隐藏，因为SubClass是SuperClass是一个子类，其中声明了一个和弗雷SuperClass同名的变量x，并定义了与之相同的方法setX	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5369,44,604,72,'				覆盖的	   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5370,44,604,66,'				相同的名字	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5371,44,604,69,'					Object   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5372,44,604,75,'				1	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5373,44,604,76,'  package.com.test;\r\n  public class Table{\r\n   String name;\r\n   double weight;\r\n   double width;\r\n   double length;\r\n   double height;\r\n  public Table(Staring name,double weight,double width,double longth,double heigt)\r\n{\r\nsuper();\r\nthis.name=name;\r\nthis.weight=weight;\r\nthis.width=width;\r\nthis.length=length;\r\nthis.height=height;\r\n}\r\npublic void area()\r\n{\r\nSystem.out.println(\"桌子面积是\"+length*width);\r\n}\r\npublic.void.display(){\r\nSystem.out.println(\"桌子名称:\"+name+\"\\n\"+\"重量:\"+weight+\"\\n\"+\"宽:\"width+\"\\n\"+\"长:\"+length+\"\\n高:\"+height);\r\n}\r\npublic void changeWeight(int i){\r\nthis.weight=i;\r\nSystem.out.println(\"面积改为\"+this.weight);\r\n}\r\npublic static void main(String[] args) {\r\nTable table=new Table(\"红木桌\",100.5,3.2,2.3,1.5);\r\nSystem.out.println(\"创建一个桌子对象,属性如下\");\r\ntable.display();\r\ntable.area();\r\ntable.changeWeight(100);\r\nSystem.out.println(\"更改重量后,属性如下\");\r\ntable.display();\r\n}\r\n}  ',20,18,'					   ',0,NULL,NULL,NULL),
 (5374,44,601,67,'		D			   ',8,8,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5375,44,601,68,'				A	   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5376,44,601,73,'				B	   ',0,0,'					   ',0,NULL,NULL,NULL),
 (5377,44,601,74,'			A		   ',8,0,'					   ',0,NULL,NULL,NULL),
 (5378,44,601,70,'		extends			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5379,44,601,71,'		super,子类在隐藏了父类的成员变量或覆盖了父类的方法后，还要用到父类的成员变量，或在覆盖的方法中使用父类中被覆盖的方法以简化代码的编写，这时就要通过super来实现对父类成员的访问，super用来引用当前对象的父类			   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5380,44,601,72,'			用来访问隐藏的		   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5381,44,601,66,'					相同的名字   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5382,44,601,69,'				java.lang.Object	   ',8,8,'					   ',0,NULL,NULL,NULL),
 (5383,44,601,75,'			多		   ',8,0,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5384,44,601,76,'    public class Table{\r\n     private String tableName;\r\n     private int weight;\r\n     private int length;\r\n     private int height;\r\n     private int width;\r\n     public Table(){\r\n     tableName=\"\";\r\n}\r\n     public Table(String tableName,int weight,int length,int height,int width){\r\n     this.tableName=tableName;\r\n     this.weight=weight;\r\n     this.length=length;\r\n     this.height=height;\r\n     this.width=width;\r\n}\r\n     public int getArea(){\r\n     return lenghth*width;}\r\n     public void display(){\r\n     System.out.println(\"桌名称:\"+this.tableName);\r\n     System.out.println(\"重量:\"+this.weight);\r\n     System.out.println(\"长度:\"+this.length);\r\n     System.out.println(\"高度:\"+this.height);\r\n     System.out.println(\"宽度:\"+this.width);\r\n     Ststem.out.println(\"面积:\"+this.getArea());\r\n}\r\n     public void changeWeight(int w){\r\n     this.weight=w;\r\n}\r\n     public static void main(String[] args){\r\n     Table table=new Table（\"小桌子\",20,50,20,20);\r\n     int area=table.getArea();\r\n     table.changeWeight(30);\r\n     table.display();\r\n}\r\n}\r\n				   ',20,20,'					   ',0,NULL,NULL,NULL),
 (5385,46,599,132,'package com.homework.homework;\r\n\r\nimport java.util.Scanner;\r\n\r\nclass Person{\r\n    public String name;\r\n    public String address;\r\n    Person(){\r\n        System.out.print(\"姓名:\");\r\n        Scanner s = new Scanner(System.in);\r\n        name=s.next();\r\n        System.out.print(\"地址:\");\r\n        address=s.next();\r\n    }\r\n    Person(String name,String address){\r\n        this.name=name;\r\n        this.address=address;\r\n    }\r\n}\r\n\r\nclass Employee extends Person{\r\n    public String ID;\r\n    public double wage;\r\n    public int year;\r\n\r\n    Employee(){\r\n        super();\r\n        System.out.print(\"工号:\");\r\n        Scanner s = new Scanner(System.in);\r\n        ID=s.next();\r\n        System.out.print(\"工龄:\");\r\n        year=s.nextInt();\r\n        System.out.print(\"工资:\");\r\n        wage=s.nextDouble();\r\n    }\r\n\r\n    Employee(String name,String address,String ID,double wage,int year){\r\n        super(name, address);\r\n        this.ID=ID;\r\n        this.wage=wage;\r\n        this.year=year;\r\n    }\r\n}\r\n\r\nclass ExcellentEmployee extends Employee{\r\n    public String level;\r\n\r\n    ExcellentEmployee(){\r\n        super();\r\n        Scanner s =new Scanner(System.in);\r\n        System.out.print(\"等级:\");\r\n        level=s.next();\r\n    }\r\n\r\n    ExcellentEmployee(String name,String address,String ID,double wage,int year,String level){\r\n        super(name, address, ID, wage, year);\r\n        this.level=level;\r\n    }\r\n\r\n    public void add(){\r\n        if(level.equals(\"normal\")){\r\n            wage+=(wage*0.1);\r\n        }\r\n        else if(level.equals(\"good\")){\r\n            wage+=(wage*0.2);\r\n        }\r\n    }\r\n    public void show(){\r\n        System.out.println(\"姓名\\t\"+\"地址\\t\"+\"工号\\t\"+\"工龄\\t\"+\"工资\\t\"+\"等级\\t\");\r\n        System.out.println(name+\"\\t\"+address+\"\\t\"+ID+\"\\t\"+year+\"\\t\"+wage+\"\\t\"+level);\r\n        System.out.println(\"----------------------------------------------\");\r\n    }\r\n}\r\n\r\npublic class Test005{\r\n    public static void main(String[] args){\r\n        ExcellentEmployee e1 = new ExcellentEmployee(\"Tom\", \"南通\", \"001\", 2000, 1, \"normal\");\r\n        ExcellentEmployee e2 = new ExcellentEmployee(\"Jake\", \"南通\", \"002\", 2000, 3, \"good\");\r\n        ExcellentEmployee e3 = new ExcellentEmployee();\r\n        e1.show();\r\n        e1.add();\r\n        e1.show();\r\n        e2.show();\r\n        e2.add();\r\n        e2.show();\r\n        e3.show();\r\n        e3.add();\r\n        e3.show();\r\n    }\r\n}	   ',50,50,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5386,46,599,133,'package com.homework.homework;\r\n\r\nimport java.util.Scanner;\r\n\r\n/**\r\n * Shape\r\n */\r\ninterface Shape {\r\n    final double PI=3.14;\r\n    public void Square();\r\n    public void circumference();\r\n}\r\n\r\nclass Circle implements Shape{\r\n    double R;\r\n    Circle(){\r\n        System.out.print(\"请输入圆的半径:\");\r\n        Scanner s1=new Scanner(System.in);\r\n        R=s1.nextDouble();\r\n        s1.close();\r\n    }\r\n\r\n    @Override\r\n    public void Square() {\r\n        double res=PI*R*R;\r\n        System.out.println(\"S=\"+res);\r\n    }\r\n\r\n    @Override\r\n    public void circumference() {\r\n        double res=2*PI*R;\r\n        System.out.println(\"C=\"+res);\r\n    }\r\n\r\n}\r\n\r\nclass Rectangle implements Shape{\r\n\r\n    double x,y;\r\n    Rectangle(){\r\n        Scanner s2=new Scanner(System.in);\r\n        System.out.print(\"请输入矩形的长x，宽y：\");\r\n        x=s2.nextDouble();\r\n        y=s2.nextDouble();\r\n        s2.close();\r\n    }\r\n       \r\n    @Override\r\n    public void Square(){\r\n        double res=x*y;\r\n        System.out.println(\"S=\"+res);\r\n    }\r\n\r\n    @Override\r\n    public void circumference(){\r\n        double res=2*(x+y);\r\n        System.out.println(\"C=\"+res);\r\n    }\r\n}\r\n\r\npublic class Test004{\r\n    public static void main(String[] args){\r\n        Circle c=new Circle();\r\n        c.Square();\r\n        c.circumference();\r\n\r\n        Rectangle r=new Rectangle();\r\n        r.Square();\r\n        r.circumference();\r\n    }\r\n}			   ',50,45,'					   ',0,'','',NULL),
 (5387,45,572,132,'package test;\r\n\r\nclass Person{      //person类\r\n	String name;\r\n	String address;\r\n	Person(String n,String add){           //person类的构造方法\r\n		name=n;\r\n		address=add;\r\n	}\r\n}\r\nclass Employe extends Person{         //person类的子类employee类\r\n		String ID;\r\n		double wage;\r\n		int workage;\r\n		Employe(String n,String add,String id,double w,int age){            // 构造方法\r\n			super(n,add);\r\n			ID=id;\r\n			wage=w;\r\n			workage=age;\r\n		}\r\n	}\r\n\r\n\r\nclass ExcellentEmployee extends Employe{         //employee类的子类ExcellentEmployee类\r\n	String level;\r\n	ExcellentEmployee(String n,String add,String id,double w,int age,String l){          //构造方法\r\n		super(n,add,id,w,age);\r\n		level=l;\r\n	}\r\n	void add(String level) {               //工资的计算方法\r\n		if(level.equals(\"common\")){\r\n			wage*=1.1;\r\n		}\r\n		else if(level.equals(\"senior\")){\r\n			wage*=1.2;\r\n		}\r\n	}\r\n	static void display(ExcellentEmployee one) {               //静态遍历方法，便于数据的遍历\r\n		System.out.println(\"姓名：\"+one.name);\r\n		System.out.println(\"地址：\"+one.address);\r\n		System.out.println(\"工号：\"+one.ID);\r\n		System.out.println(\"工资：\"+one.wage);\r\n		System.out.println(\"工龄：\"+one.workage);\r\n		System.out.println(\"级别：\"+one.level);\r\n	}\r\n}\r\n\r\npublic class WageClass {\r\n	public static void main(String [] args) {\r\n		ExcellentEmployee common=new ExcellentEmployee(\"jack\",\"USA\",\"16598\",4565,5,\"common\");              //利用构造方法，创建普通员工对象\r\n		ExcellentEmployee senior=new ExcellentEmployee(\"小明\",\"CHINA\",\"25469\",5269,11,\"senior\");           //利用构造方法，创建高级员工对象\r\n		ExcellentEmployee.display(common);\r\n		ExcellentEmployee.display(senior);                //通过静态方法display遍历数据\r\n	}\r\n}\r\n\r\n					   ',50,45,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5388,45,572,133,'package test;\r\ninterface Shape{       //图形接口\r\n	final float PI=3.14f;\r\n	abstract float area();\r\n        abstract float circ();           //接口中的两个抽象方法\r\n}\r\n\r\nclass Circle implements Shape{        //创建的圆类\r\n	 private float radius;\r\n	 Circle(float r){\r\n		 radius=r;\r\n	 }\r\n	public float area() {\r\n		return 2*PI*radius*radius;\r\n	}\r\n	public float circ() {\r\n		return 2*PI*radius;\r\n	}\r\n}\r\n\r\nclass Rectangle implements Shape{        //创建的长方形类\r\n	private float length,width;\r\n	Rectangle(float l,float w){\r\n		length=l;\r\n		width=w;\r\n	}\r\n	public float area() {\r\n		return length*width;\r\n	}\r\n	public float circ() {\r\n		return 2*(length+width);\r\n	}\r\n}\r\npublic class TestClass{              //测试类\r\n	public static void main(String [] args) {\r\n		float r=2.5f;\r\n		Circle one=new Circle(r);\r\n		System.out.println(\"半径是\"+r+\"的圆周长为：\"+one.circ());\r\n		System.out.println(\"半径是\"+r+\"的圆面积为：\"+one.area());\r\n		float l=5.5f,w=7.25f;\r\n		Rectangle two=new Rectangle(l,w);\r\n		System.out.println(\"长为\"+l+\"宽为\"+w+\"的长方形的周长为：\"+two.circ());\r\n		System.out.println(\"长为\"+l+\"宽为\"+w+\"的长方形的面积为：\"+two.area());\r\n	}\r\n}\r\n\r\n			   \r\n					   ',50,40,'					   	public float area() {\r\n		return 2*PI*radius*radius;\r\n	}对吗',84,'84,84','陈典,张明鉴',NULL),
 (5389,45,573,132,'class Person{\r\n	String name,address;\r\n	public Person(String n,String a)\r\n	{name=n;address=a;}\r\n}\r\nclass Employee extends Person{\r\n	String ID;\r\n	double wage;\r\n	int age;\r\n	public Employee(String n,String a,String i,double w,int ag)\r\n	{super(n,a);ID=i;wage=w;age=ag;}\r\n}\r\nclass ExcellentEmployee extends Employee{\r\n	String level;\r\n	public ExcellentEmployee(String n,String a,String i,double w,int ag,String l)\r\n	{super(n,a,i,w,ag);level=l;}\r\n	\r\n	double add(String l) \r\n	{\r\n		if(l==\"normal\")\r\n		{\r\n			wage*=1.1;\r\n		}\r\n		else if(l==\"excellent\")\r\n		{\r\n			wage*=1.2;\r\n		}\r\n		return wage;\r\n	}\r\n	void display() {System.out.println(\"姓名\"+name+\"地址\"+address+\"工号\"+ID+\"工资\"+wage+\"工龄\"+age+\"级别\"+level);}\r\n}\r\npublic class TEST {\r\n	public static void main(String[] args) {\r\n		ExcellentEmployee a=new ExcellentEmployee(\"liang\",\"henan\",\"123\",1000,20,\"normal\");\r\n		ExcellentEmployee b=new ExcellentEmployee(\"zhen\",\"henan\",\"456\",1000,20,\"excellent\");\r\n		a.add(\"normal\");\r\n		b.add(\"excellent\");\r\n		a.display();\r\n		b.display();\r\n	}\r\n\r\n}	   \r\n					   ',50,30,'					   你的代码为什么 与梁振完全相同？\r\n					   ',100,'100','梁振',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5390,45,573,133,'interface 图形{\r\n	public abstract double area();\r\n	public abstract double length();\r\n}\r\n\r\nclass 矩形 implements 图形{\r\n	private double x;\r\n	private double y;\r\n	public 矩形() {\r\n		x=3;y=4;\r\n	}\r\n	public double area(){return x*y; }\r\n	public double length() {return x*2+y*2;}\r\n}\r\nclass 圆 implements 图形{\r\n	private double r;\r\n	public 圆() {\r\n		r=2;\r\n	}\r\n	public double area() {return 3.14*r*r;}\r\n	public double length() {return 3.14*2*r;}\r\n}\r\npublic class TEST {\r\n矩形 rect;\r\n圆 circle;\r\n	public static void main(String[] args) {\r\n		矩形 rect=new 矩形();\r\n		圆 circle=new 圆();\r\n		System.out.println(\"矩形的面积\"+rect.area());\r\n		System.out.println(\"矩形的周长\"+rect.length());\r\n		System.out.println(\"圆的面积\"+circle.area());\r\n		System.out.println(\"圆的周长\"+circle.length());\r\n	}\r\n}				   \r\n					   ',50,30,'					    你的代码为什么 与梁振,王伟杰完全相同？\r\n					   ',99,'99,99','梁振,王伟杰',NULL),
 (5391,45,568,132,'class Person{\r\n	String name,address;\r\n	public Person(String n,String a)\r\n	{name=n;address=a;}\r\n}\r\nclass Employee extends Person{\r\n	String ID;\r\n	double wage;\r\n	int age;\r\n	public Employee(String n,String a,String i,double w,int ag)\r\n	{super(n,a);ID=i;wage=w;age=ag;}\r\n}\r\nclass ExcellentEmployee extends Employee{\r\n	String level;\r\n	public ExcellentEmployee(String n,String a,String i,double w,int ag,String l)\r\n	{super(n,a,i,w,ag);level=l;}\r\n	\r\n	double add(String l) \r\n	{\r\n		if(l==\"normal\")\r\n		{\r\n			wage*=1.1;\r\n		}\r\n		else if(l==\"excellent\")\r\n		{\r\n			wage*=1.2;\r\n		}\r\n		return wage;\r\n	}\r\n	void display() {System.out.println(\"姓名\"+name+\"地址\"+address+\"工号\"+ID+\"工资\"+wage+\"工龄\"+age+\"级别\"+level);}\r\n}\r\npublic class TEST {\r\n	public static void main(String[] args) {\r\n		ExcellentEmployee a=new ExcellentEmployee(\"liang\",\"henan\",\"123\",1000,20,\"normal\");\r\n		ExcellentEmployee b=new ExcellentEmployee(\"zhen\",\"henan\",\"456\",1000,20,\"excellent\");\r\n		a.add(\"normal\");\r\n		b.add(\"excellent\");\r\n		a.display();\r\n		b.display();\r\n	}\r\n\r\n}	   \r\n					   ',50,30,'					   你的代码为什么 与简江进完全相同？\r\n					   \r\n					   \r\n					   ',100,'100','简江进',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5392,45,568,133,'interface 图形{\r\n	public abstract double area();\r\n	public abstract double length();\r\n}\r\n\r\nclass 矩形 implements 图形{\r\n	private double x;\r\n	private double y;\r\n	public 矩形() {\r\n		x=3;y=4;\r\n	}\r\n	public double area(){return x*y; }\r\n	public double length() {return x*2+y*2;}\r\n}\r\nclass 圆 implements 图形{\r\n	private double r;\r\n	public 圆() {\r\n		r=2;\r\n	}\r\n	public double area() {return 3.14*r*r;}\r\n	public double length() {return 3.14*2*r;}\r\n}\r\npublic class TEST {\r\n矩形 rect;\r\n圆 circle;\r\n	public static void main(String[] args) {\r\n		矩形 rect=new 矩形();\r\n		圆 circle=new 圆();\r\n		System.out.println(\"矩形的面积\"+rect.area());\r\n		System.out.println(\"矩形的周长\"+rect.length());\r\n		System.out.println(\"圆的面积\"+circle.area());\r\n		System.out.println(\"圆的周长\"+circle.length());\r\n	}\r\n}\r\n		   \r\n					   ',50,30,'					你的代码为什么 与简江进,王伟杰进完全相同？\r\n					   \r\n					   \r\n					   ',99,'99,99','简江进,王伟杰',NULL),
 (5393,45,571,132,'public class Person {\r\n    String name;\r\n    String address;\r\n\r\n    Person(String name_, String address_){\r\n        name = name_;\r\n        address = address_;\r\n    }\r\n\r\n    Person(){ this( null,null); }\r\n}\r\n\r\npublic class Employee extends Person {\r\n    String ID;\r\n    String level = \"normal\";\r\n    double wage;\r\n    int work_age;\r\n\r\n    Employee(String name_, String address_, String ID_, double wage_, int work_age_) {\r\n        super(name_, address_);\r\n        ID = ID_;\r\n        wage = wage_;\r\n        work_age = work_age_;\r\n    }\r\n\r\n    Employee(){ this(null,null,null, 0, 0);}\r\n\r\n    public String getLevel() { return level; }\r\n\r\n    public void add(String level_) {\r\n        double times = 0.1;\r\n        if (level_ == \"excellent\")\r\n            times = 0.2;\r\n        wage += wage * times;\r\n    }\r\n\r\n    public void display() {\r\n        System.out.println(\"name      \" + name);\r\n        System.out.println(\"address   \" + address);\r\n        System.out.println(\"ID        \" + ID);\r\n        System.out.println(\"level     \" + level);\r\n        System.out.println(\"wage      \" + wage);\r\n        System.out.println(\"work age  \" + work_age);\r\n        System.out.println();\r\n    }\r\n}\r\n\r\npublic class ExcellentEmployee extends Employee {\r\n    ExcellentEmployee(String name_, String address_, String ID_, double wage_, int work_age_){\r\n        super(name_, address_, ID_, wage_, work_age_);\r\n        level = \"excellent\";\r\n    }\r\n\r\n    ExcellentEmployee(){ this(null,null,null,0,0); }\r\n}\r\n\r\npublic class PersonTestDrive {\r\n    public static void main(String[] args) {\r\n        Employee nmlEmp = new Employee(\"EAST\", \"NTU\", \"saobi\", -2000, 10);\r\n        ExcellentEmployee exlEmp = new ExcellentEmployee(\"WEST\", \"NTU\", \"666\", 100000, 5);\r\n\r\n        nmlEmp.display();\r\n        exlEmp.display();\r\n        nmlEmp.add(nmlEmp.getLevel());\r\n        exlEmp.add(exlEmp.getLevel());\r\n        nmlEmp.display();\r\n        exlEmp.display();\r\n    }\r\n}\r\n					   ',50,48,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5394,45,571,133,'public interface Shape {\r\n    double getArea();\r\n    double getPerimeter();\r\n}\r\n\r\npublic class Circle implements Shape {\r\n     double radius;\r\n     final double pi = 3.14;\r\n\r\n    public Circle(double radius_){radius = radius_;}\r\n\r\n    public Circle(){this(0);}\r\n\r\n    public double getArea() {\r\n        return radius*radius*pi;\r\n    }\r\n\r\n    public double getPerimeter() {\r\n        return 2*pi*radius;\r\n    }\r\n}\r\n\r\npublic class Rectangle implements Shape {\r\n     double length,width;\r\n\r\n     Rectangle(double length_, double width_){length= length_;width=width_;}\r\n\r\n    public Rectangle(){this(0,0);}\r\n\r\n    public double getArea() {\r\n        return length*width;\r\n    }\r\n\r\n    public double getPerimeter() {\r\n        return (length+width) * 2;\r\n    }\r\n}\r\npublic class ShapeTestDrive {\r\n    public static void main(String[] args) {\r\n        Shape cir = new Circle(5);\r\n        Shape rec = new Rectangle(10,5);\r\n\r\n        System.out.println(cir.getArea());\r\n        System.out.println(cir.getPerimeter());\r\n        System.out.println(rec.getArea());\r\n        System.out.println(rec.getPerimeter());\r\n    }\r\n}					   \r\n					   ',50,45,'					   ',0,'','',NULL),
 (5395,46,586,132,'class Person {\r\n	String name;\r\n	String address;\r\n	public Person(String name, String address) {\r\n		this.name = name;\r\n		this.address = address;\r\n	}\r\n}\r\nclass Employee extends Person {\r\n	String ID;\r\n	double wage;\r\n	int workage;\r\n	public Employee(String name, String address, String iD, double wage, int workage) {\r\n		super(name, address);\r\n		ID = iD;\r\n		this.wage = wage;\r\n		this.workage = workage;\r\n	}	\r\n}\r\nclass ExcellentEmployee extends Employee{\r\n	String level;\r\n	public ExcellentEmployee(String name, String address, String iD, double wage, int workage, String level) {\r\n		super(name, address, iD, wage, workage);\r\n		this.level = level;\r\n	}\r\n\r\n	public double add(){\r\n		if(level.equals(\"优秀员工\"))\r\n			wage*=(1+0.2);\r\n		else {\r\n			wage*=(1+0.1);\r\n		}\r\n		return wage;\r\n	}\r\n}\r\npublic class wyy11 {\r\n	public static void main(String[] args) {\r\n		\r\n		System.out.println(\"创建一个普通员工的实例：\");\r\n		ExcellentEmployee pt= new ExcellentEmployee(\"张三\",\"南通\",\"1\",5000,3,\"普通员工\");\r\n		System.out.println(\"姓名：\"+pt.name+\"  地址：\"+pt.address+\"  工号：\"+pt.ID+\"  工资：\"+pt.wage+\"  工龄：\"+pt.workage+\"  级别：\"+pt.level+\"  涨后工资：\"+pt.add());\r\n		System.out.println(\"\\n创建一个优秀员工的实例：\");\r\n		ExcellentEmployee yx= new ExcellentEmployee(\"李四\",\"南通\",\"2\",8000,5,\"优秀员工\");\r\n		System.out.println(\"姓名：\"+yx.name+\"  地址：\"+yx.address+\"  工号：\"+yx.ID+\"  工资：\"+yx.wage+\"  工龄：\"+yx.workage+\"  级别：\"+yx.level+\"  涨后工资：\"+yx.add());\r\n	}\r\n}\r\n					   \r\n					   ',50,50,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5396,46,586,133,'interface Shape {\r\n    public abstract double getArea();\r\n    public abstract double getL();\r\n}\r\n\r\nclass Circle implements Shape {\r\n    double radius;\r\n    public Circle(double radius) {\r\n        this.radius = radius;\r\n    }\r\n    @Override\r\n    public double getArea() {\r\n        return Math.PI * radius * radius;\r\n    }\r\n    @Override\r\n    public double getL() {\r\n        return 2 * Math.PI * radius;\r\n    }\r\n}\r\nclass Rectangle implements Shape { \r\n    double width;\r\n    double height;\r\n    public Rectangle(double width, double height) {\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    @Override\r\n    public double getArea() {\r\n        return width * height;\r\n    }\r\n    @Override\r\n    public double getL() {\r\n        return (width + height) * 2;\r\n    }\r\n}\r\n\r\npublic class wyy11 {\r\n    public static void main(String[] args) {\r\n	System.out.println(\"创建一个半径为5的圆的实例：\");\r\n        Circle circle= new Circle(5);\r\n        System.out.println(\"圆面积：\" + circle.getArea() + \"，圆周长：\" + circle.getL());\r\n        System.out.println();\r\n        System.out.println(\"创建一个长为5，宽为4的长方形的实例：\");\r\n        Rectangle rect= new Rectangle(5, 4);\r\n        System.out.println(\"长方形面积：\" + rect.getArea() + \"，长方形周长：\" + rect.getL());\r\n    }\r\n}\r\n					   \r\n					   ',50,50,'					   ',0,'','',NULL),
 (5397,45,574,132,'			interface 图形{\r\n	public abstract double area();\r\n	public abstract double length();\r\n}\r\n\r\nclass 矩形 implements 图形{\r\n	private double x;\r\n	private double y;\r\n	public 矩形() {\r\n		x=3;y=4;\r\n	}\r\n	public double area(){return x*y; }\r\n	public double length() {return x*2+y*2;}\r\n}\r\nclass 圆 implements 图形{\r\n	private double r;\r\n	public 圆() {\r\n		r=2;\r\n	}\r\n	public double area() {return 3.14*r*r;}\r\n	public double length() {return 3.14*2*r;}\r\n}\r\npublic class TEST {\r\n矩形 rect;\r\n圆 circle;\r\n	public static void main(String[] args) {\r\n		矩形 rect=new 矩形();\r\n		圆 circle=new 圆();\r\n		System.out.println(\"矩形的面积\"+rect.area());\r\n		System.out.println(\"矩形的周长\"+rect.length());\r\n		System.out.println(\"圆的面积\"+circle.area());\r\n		System.out.println(\"圆的周长\"+circle.length());\r\n	}\r\n}   \r\n					   ',50,30,'					   题都答错地方了，而且你的代码与简江进,梁振完全一样，为什么？\r\n					   \r\n					   \r\n					   ',99,'99,99','简江进,梁振',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5398,45,574,133,'			class Person{\r\n	String name,address;\r\n	public Person(String n,String a)\r\n	{name=n;address=a;}\r\n}\r\nclass Employee extends Person{\r\n	String ID;\r\n	double wage;\r\n	int age;\r\n	public Employee(String n,String a,String i,double w,int ag)\r\n	{super(n,a);ID=i;wage=w;age=ag;}\r\n}\r\nclass ExcellentEmployee extends Employee{\r\n	String level;\r\n	public ExcellentEmployee(String n,String a,String i,double w,int ag,String l)\r\n	{super(n,a,i,w,ag);level=l;}\r\n	\r\n	double add(String l) \r\n	{\r\n		if(l==\"normal\")\r\n		{\r\n			wage*=1.1;\r\n		}\r\n		else if(l==\"excellent\")\r\n		{		   \r\n					   ',50,30,'					    题都答错地方了\r\n					   \r\n					   \r\n					   ',0,'','',NULL),
 (5399,45,562,132,'public abstract class Person {\r\n	String name;\r\n	String address;\r\n	\r\n	Person(String n, String a){\r\n		name=n;\r\n		address=a;\r\n	}\r\n	\r\n	abstract double Add(String level);\r\n}\r\n\r\nabstract class Employee extends Person{\r\n	String ID;\r\n	double wage;\r\n	int age;\r\n	\r\n	Employee(String n, String a, String id, double w, int Age) {\r\n		super(n, a);\r\n		ID=id;\r\n		wage=w;\r\n		age=Age;	\r\n	}\r\n\r\n} \r\n\r\nclass ExcellentEmployee extends Employee{\r\n	String level=\"普通员工\";\r\n	\r\n	ExcellentEmployee(String n, String a, String id, double w, int Age, String level) {\r\n		super(n, a, id, w, Age);\r\n		this.level=level;\r\n	}\r\n	\r\n	\r\n	double Add(String level) {\r\n		double e=0;\r\n		if(level==\"普通员工\")e=0.1*wage;\r\n		if(level==\"优秀员工\")e=0.2*wage;\r\n		return e;\r\n	}\r\n}\r\n\r\npublic class Test6 {\r\n\r\n	public static void main(String[] args) {\r\n		ExcellentEmployee p=new ExcellentEmployee(\"吴铭\", \"无心花园\", \"1589\", 5000, 23, \"普通员工\");\r\n		ExcellentEmployee q=new ExcellentEmployee(\"谢城\", \"中南城\", \"1678\",6930.3, 22, \"优秀员工\");\r\n		\r\n		\r\n		System.out.println(\"员工一的资料：\");\r\n		System.out.println(\"姓名：\"+p.name);\r\n                System.out.println(\"级别：\"+p.level);\r\n		System.out.println(\"地址：\"+p.address);\r\n		System.out.println(\"id：\"+p.ID);\r\n		System.out.println(\"工资：\"+p.wage);\r\n		System.out.println(\"工龄：\"+p.age);\r\n		System.out.println(\"加成：\"+p.Add(p.level));\r\n		\r\n\r\n		System.out.println(\"员工二的资料：\");\r\n		System.out.println(\"姓名：\"+q.name);\r\n                System.out.println(\"级别：\"+q.level);\r\n		System.out.println(\"地址：\"+q.address);\r\n		System.out.println(\"id：\"+q.ID);\r\n		System.out.println(\"工资：\"+q.wage);\r\n		System.out.println(\"工龄：\"+q.age);\r\n		System.out.println(\"加成：\"+q.Add(q.level));\r\n	}\r\n\r\n}\r\n					   \r\n					   \r\n					   \r\n					   ',50,45,'					   \r\n					   ',0,'','',NULL),
 (5400,45,562,133,'interface Shape {\r\n	double space();   //计算面积\r\n	double circumference(); //计算方法\r\n}\r\n\r\npublic class Circle implements Shape {\r\n	float r=0;\r\n	Circle(float d){\r\n		r=d;\r\n	}\r\n	public double space() {\r\n		return 3.14*r*r;\r\n	}\r\n	public double circumference() {\r\n		return 2*3.14*r;\r\n	}\r\n}\r\n\r\npublic class Rectangle implements Shape {\r\n	float a=0,b=0;\r\n	Rectangle(float a, float b){\r\n		this.a=a;\r\n		this.b=b;\r\n	}\r\n	public double space() {\r\n		return a*b;\r\n	}\r\n\r\n	public double circumference() {\r\n		\r\n		return 2*(a+b);\r\n	}\r\n\r\npublic class Test5 {\r\n\r\n	public static void main(String[] args) {\r\n		Circle x=new Circle(4);\r\n		Rectangle y=new Rectangle(3,7);\r\n		System.out.println(\"圆形的面积是：\"+x.space());\r\n		System.out.println(\"圆形的周长是：\"+x.circumference());\r\n		System.out.println(\"长方形的面积是：\"+y.space());\r\n		System.out.println(\"长方形的周长是：\"+y.circumference());\r\n	}\r\n\r\n}\r\n\r\n					   \r\n					   ',50,48,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5401,45,567,132,'public class Person {\r\n    String name;\r\n    String address;\r\n    public Person(String name,String address){\r\n        this.name=name;\r\n        this.address=address;\r\n    }\r\n}\r\npublic class Employee extends Person{\r\n    String ID;\r\n    double wage;\r\n    int work_age;\r\n    public Employee(String name,String address,String ID,double wage,int work_age){\r\n        super(name,address);\r\n        this.ID=ID;\r\n        this.wage=wage;\r\n        this.work_age=work_age;\r\n    }\r\n}\r\npublic class ExcellentEmployee extends Employee{\r\n    String level;\r\n    public ExcellentEmployee(String name,String address,String ID,double wage,int work_age,String level){\r\n        super(name,address,ID,wage,work_age);\r\n        this.level=level;\r\n    }\r\n    public void display(){\r\n        System.out.println(\"姓名：\"+this.name+\",地址：\"+this.address+\",工号：\"+ID+\",工资：\"+this.add(this.level)+\",工龄：\"+this.work_age+\",等级：\"+this.level);\r\n    }\r\n    public  double add(String level){\r\n        if(level==\"normal\"){\r\n                wage*=1+0.1;\r\n        }\r\n        else if (level == \"excellent\") {\r\n                wage*=1+0.2;\r\n        }\r\n        else{\r\n            System.out.println(\"输入的等级有误！\");\r\n        }\r\n        return wage;\r\n    }\r\n}\r\npublic class Test {\r\n    public static void main(String[] args){\r\n        ExcellentEmployee E=new ExcellentEmployee(\"chen\",\"China\",\"123\",10000,5,\"normal\");\r\n        ExcellentEmployee e=new ExcellentEmployee(\"xing\",\"China\",\"456\",20000,5,\"excellent\");\r\n        E.display();\r\n        e.display();\r\n    }\r\n}					   ',50,48,'					   ',0,'','',NULL),
 (5402,45,567,133,'public interface Shape {\r\n    public double area();\r\n    public double perimeter();\r\n}\r\nclass Circle implements Shape{\r\n    private double r;\r\n    final double PI=3.14;\r\n    public Circle(double r){\r\n        this.r=r;\r\n    }\r\n    public double area(){\r\n        return PI*r*r;\r\n    }\r\n\r\n    public double perimeter() {\r\n        return 2*PI*r;\r\n    }\r\n}\r\nclass Rectangle implements Shape{\r\n    private double length;\r\n    private double width;\r\n    public Rectangle(double length,double width){\r\n        this.length=length;\r\n        this.width=width;\r\n    }\r\n    public double area(){\r\n        return length*width;\r\n    }\r\n    public double perimeter() {\r\n        return (length+width)*2;\r\n    }\r\n}\r\npublic class Test {\r\n    public static void main(String[] args){\r\n        Circle c=new Circle(5.0);\r\n        double area1=c.area();\r\n        double perimeter1=c.perimeter();\r\n        System.out.println(\"圆的面积为：\"+area1);\r\n        System.out.println(\"圆的周长为：\"+perimeter1);\r\n        Rectangle r=new Rectangle(4.0,5.0);\r\n        double area2=r.area();\r\n        double perimeter2=r.perimeter();\r\n        System.out.println(\"长方形的面积为：\"+area2);\r\n        System.out.println(\"长方形的周长为：\"+perimeter2);\r\n    }\r\n}					   ',50,48,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5403,45,558,132,'		class Test_two {\r\n\r\n    public static void main(String[] args) {\r\n        Employee employee = new Employee(\"张三\", \"北京市\", \"001\", 5200, 20);\r\n        employee.show();\r\n\r\n        ExcellentEmployee excellentEmployee = new ExcellentEmployee(\"张三\", \"北京市\", \"001\", 5200, 20, \"B\");\r\n        excellentEmployee.show();\r\n        excellentEmployee.add();\r\n    }\r\n\r\n}\r\n\r\npublic class Person {\r\n\r\n    public String name;\r\n    public String address;\r\n\r\n    //无参构造\r\n    public Person() {\r\n    }\r\n\r\n    //有参构造\r\n    public Person(String name, String address) {\r\n        this.name = name;\r\n        this.address = address;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nclass Employee extends Person {\r\n\r\n    public String ID;\r\n    public double wage;\r\n    public int weektime;\r\n\r\n    public Employee() {\r\n\r\n    }\r\n\r\n\r\n    public Employee(String ID, double wage, int weektime) {\r\n        this.ID = ID;\r\n        this.wage = wage;\r\n        this.weektime = weektime;\r\n    }\r\n\r\n    public Employee(String name, String address) {\r\n        super(name, address);\r\n    }\r\n\r\n    public Employee(String name, String address, String ID, double wage, int weektime) {\r\n        super(name, address);\r\n        this.ID = ID;\r\n        this.wage = wage;\r\n        this.weektime = weektime;\r\n    }\r\n\r\n    public void add(){}\r\n\r\n    public void show(){\r\n        System.out.println(\"姓名:\"+name);\r\n        System.out.println(\"地址:\"+address);\r\n        System.out.println(\"工号:\"+ID);\r\n        System.out.println(\"工资:\"+wage);\r\n        System.out.println(\"工龄:\"+weektime);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass ExcellentEmployee extends Employee {\r\n\r\n    public String level;\r\n\r\n    public ExcellentEmployee(){\r\n\r\n    }\r\n\r\n    public ExcellentEmployee(String level) {\r\n        this.level = level;\r\n    }\r\n\r\n    public ExcellentEmployee(String ID, double wage, int weektime, String level) {\r\n        super(ID, wage, weektime);\r\n        this.level = level;\r\n    }\r\n\r\n    public ExcellentEmployee(String name, String address, String level) {\r\n        super(name, address);\r\n        this.level = level;\r\n    }\r\n\r\n    public ExcellentEmployee(String name, String address, String ID, double wage, int weektime, String level) {\r\n        super(name, address, ID, wage, weektime);\r\n        this.level = level;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void add(){\r\n        if (level.equals(\"A\")){\r\n            System.out.println(\"工资涨10%\");\r\n        }else if (level.equals(\"B\")){\r\n            System.out.println(\"工资涨20%\");\r\n        }else {\r\n            System.out.println(\"等级有误\");\r\n        }\r\n    }\r\n}\r\n			   ',50,48,'					   ',0,'','',NULL),
 (5404,45,558,133,'				class Test {\r\n    public static void main(String[] args) {\r\n        Shape shape = new Rectangle();\r\n\r\n        /**\r\n         * @desripttion: 计算矩形面积\r\n         * @param: r:边长 pi:边长\r\n         * @return: 矩形面积\r\n         */\r\n        System.out.println(shape.getArea(2, 6));\r\n\r\n        /**\r\n         * @desripttion: 计算矩形周长\r\n         * @param: r:边长 pi:边长\r\n         * @return: 矩形周长\r\n         */\r\n        System.out.println(shape.getPerimeter(2,6));\r\n\r\n\r\n        shape = new Circle();\r\n\r\n        /**\r\n         * @desripttion: 计算圆形面积\r\n         * @param: r:半径 pi:输入圆周率(小数位后自定义长度)\r\n         * @return: 圆形面积\r\n         */\r\n        System.out.println(shape.getArea(2, 3.14));\r\n\r\n        /**\r\n         * @desripttion: 计算圆形周长\r\n         * @param: r:半径 pi:输入圆周率(小数位后自定义长度)\r\n         * @return: 圆形周长\r\n         */\r\n        System.out.println(shape.getPerimeter(4, 3.14));\r\n    }\r\n}\r\n\r\n\r\n\r\npublic interface Shape {\r\n\r\n    //面积\r\n    double getArea(double r,double PI);\r\n\r\n    //周长\r\n    double getPerimeter(double r,double PI);\r\n}\r\n\r\nclass Rectangle implements Shape {\r\n\r\n    //矩形面积\r\n    public double getArea(double x,double y) {\r\n        return x*y;\r\n    }\r\n\r\n    //矩形周长\r\n    public double getPerimeter(double x,double y) {\r\n        return (x+y)*2;\r\n    }\r\n}\r\n\r\nclass Circle implements Shape{\r\n\r\n    //圆的面积\r\n    public double getArea(double r, double PI) {\r\n        return PI*r*r;\r\n    }\r\n\r\n    //圆周长\r\n    public double getPerimeter(double r, double PI) {\r\n        return 2*PI*r;\r\n    }\r\n}\r\n	   ',50,50,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5405,46,595,132,'package ch1;\r\n\r\n\r\npublic  class Person {\r\n    private String name;\r\n    private String address;\r\n    //定义构造方法\r\n    public Person(String name, String address){\r\n        this.name = name;\r\n        this.address = address;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//继承Person类\r\n    public class Employee extends Person {\r\n        private String ID;\r\n        private double wage;\r\n        private int workAge;\r\n\r\n    public Employee(String name, String address, String ID, double wage, int workAge){\r\n        super(name, address);  //调用父类的构造方法\r\n        this.ID = ID;\r\n        this.wage = wage;\r\n        this.workAge = workAge;\r\n        }\r\n    \r\n    public double add(String position){//  判断职位\r\n        if(position == \"0\"){\r\n            wage = wage*1.2;\r\n        }\r\n        else{\r\n            wage = wage*1.1;\r\n        }\r\n        return wage;\r\n    }\r\n        //设置gett方法\r\n    public double getWage() {\r\n        return wage;\r\n    }\r\n    public void setWage(double wage) {\r\n        this.wage = wage;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//继承Employee类\r\npublic class Manager extends Employee{\r\n  private String level = \"\";  //1为普通员工，0为优秀员工\r\n  \r\n  public Manager(String name, String address, String ID, double wage, int workAge, String level){\r\n      super(name, address, ID, wage, workAge);\r\n      this.level = level;\r\n  }\r\n      \r\n      //设置gett方法\r\n  public String getLevel() {\r\n      return level;\r\n  }\r\n\r\n  public void setLevel(String level) {\r\n      this.level = level;\r\n  }\r\n}\r\n\r\npublic class Test {\r\n\r\n    public static void main(String[] args) {\r\n    //  新建对象\r\n        Manager normal = new Manager(\"张小三\", \"南京\", \"001\", 3500, 2, \"1\");\r\n        Manager manager = new Manager(\"李小四\", \"杭州\", \"002\", 10000, 7, \"0\");\r\n        //  传入职位，Manager类型的对象没有add()方法，所以自动搜寻其父类，调用add()方法\r\n        normal.add(normal.getLevel());\r\n        manager.add(manager.getLevel());\r\n        \r\n        System.out.println(\"normal wage is:\"+normal.getWage());\r\n        System.out.println(\"manager wage is:\"+manager.getWage());\r\n    }\r\n}					   ',50,40,'					   ',85,'85','顾海泉',NULL),
 (5406,46,595,133,'	package ch1;\r\n\r\nimport java.util.*;\r\n\r\n//Shape接口\r\ninterface Shape{\r\n  float getArea();                            //求面积\r\n  float getCircumference();                   //求周长\r\n}\r\n\r\n//Circle类\r\nabstract class Circle implements Shape{\r\n  private final float PI=3.1415f;\r\n  private float radius;\r\n\r\n  Circle(){}                                  //Circle类构造方法\r\n  Circle(float r){\r\n      radius=r;\r\n  }\r\n  public float getArea(){                     //Circle类求面积\r\n      return PI*radius*radius;\r\n  }\r\n  public float getCircumference(){            //Circle类求周长\r\n      return 2*PI*radius;\r\n  }\r\n}\r\n\r\n//Rectangle类\r\nabstract class Rectangle implements Shape{\r\n  private float width;\r\n  private float height;\r\n\r\n  Rectangle(){}                               //Rectangle类构造方法\r\n  Rectangle(float width,float height){\r\n      this.width=width;\r\n      this.height=height;\r\n  }\r\n  public float getArea(){                     //Rectangle类求面积\r\n      return width*height;\r\n  }\r\n  public float getCircumference(){            //Rectangle类求周长\r\n      return 2*(width+height);\r\n  }\r\n}\r\n\r\n\r\nclass ShapeInterface {\r\n\r\n  public static void main(String[] args) {\r\n      Scanner sc=new Scanner(System.in);\r\n\r\n      Shape shape=null;\r\n      \r\n      int y;\r\n      do{\r\n          y=0;\r\n          System.out.println(\"请选择输入的图形：1、圆形，2、矩形\");\r\n          int x=sc.nextInt();\r\n          //圆形\r\n          if(x==1){\r\n              System.out.println(\"请输入圆形的半径：\");\r\n              float radius=sc.nextFloat();\r\n\r\n             shape=new Circle(radius);\r\n          }\r\n          //矩形\r\n          else if(x==2){\r\n              System.out.println(\"请输入矩形的长和宽，以空格相隔：\");\r\n              float width=sc.nextFloat();\r\n              float height=sc.nextFloat();\r\n\r\n              shape=new Rectangle(width,height);      \r\n          }\r\n         \r\n          \r\n      }\r\n      while(y==1);\r\n\r\n      System.out.println(\"面积：\"+shape.getArea()+\"\\t\\t周长：\"+shape.getCircumference());\r\n\r\n      sc.close();\r\n  }\r\n\r\n}				   ',50,30,'					   shape=new Rectangle(width,height); \r\nCircle circle=new Circle(6);这两个类你定义的是抽象类，怎么可以用new来创建对象？',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5407,45,563,132,'class Person {\r\n	public String name;\r\n	public String address;\r\n	public Person(String name,String address){\r\n		this.name=name;\r\n		this.address=address;\r\n	}\r\n}\r\nclass Employee extends Person{\r\n		public String ID;\r\n		public double wage;\r\n		public int workage;\r\n		public Employee(String name,String address,String ID,double wage,int workage){\r\n			super(name,address);\r\n			this.ID=ID;\r\n			this.wage=wage;\r\n			this.workage=workage;\r\n		}\r\n	}\r\nclass ExcellentEmployee extends Employee{\r\n		public String level;\r\n		public ExcellentEmployee(String name,String address,String ID,double wage,int workage,String level){\r\n			super(name,address,ID,wage,workage);\r\n			this.level=level; }\r\n			public double add(String level){\r\n				if(level==\"0\")\r\n				{ wage=wage*1.1; }\r\n				if(level==\"1\")\r\n				{ wage=wage*1.2; }\r\n			return wage;\r\n		}\r\n}\r\npublic class Test1 {\r\n	public static void main(String[] args) {\r\nExcellentEmployee normal=new ExcellentEmployee(\"张三\",\"江苏\",\"001\",3500,2,\"0\");\r\nExcellentEmployee perfect=new ExcellentEmployee(\"李四\",\"江苏\",\"002\",5000,3,\"1\");\r\nSystem.out.println(\"普通员工:\"+normal.name+\" \"+normal.address+\" \"+normal.ID+\" \"+normal.add(normal.level)+\" \"+normal.workage);\r\nSystem.out.println(\"优秀员工:\"+perfect.name+\" \"+perfect.address+\" \"+perfect.ID+\" \"+perfect.add(perfect.level)+\" \"+perfect.workage);		\r\n// TODO Auto-generated method stub\r\n	} \r\n}					   ',50,40,'					   \r\n					   ',80,'80','陈嘉懿',NULL),
 (5408,45,563,133,'interface Shape\r\n{\r\n	public abstract double area();\r\n	public abstract double length();\r\n}\r\nclass Circle implements Shape{\r\n	double r;\r\n	Circle(double r)\r\n	{\r\n		this.r=r;\r\n	}\r\n	public double area(){\r\n		return(3.14*r*r);\r\n	}\r\n	public double length(){\r\n	return(2*3.14*r);\r\n}\r\n}\r\nclass Rectangle implements Shape{\r\n	double a,b;\r\n	Rectangle(double a,double b)\r\n	{\r\n		this.a=a;\r\n		this.b=b;\r\n	}\r\n	public double area(){\r\n		return(a*b);\r\n	}\r\n	public double length(){\r\n		return((a+b)*2);\r\n	}\r\n}\r\npublic class Shape1 {\r\n\r\n	public static void main(String[] args) {\r\n		Circle circle=new Circle(4);\r\n		System.out.println(\"圆的面积:\"+circle.area());\r\n		System.out.println(\"圆的周长:\"+circle.length());\r\n		Rectangle rectangle=new Rectangle(3,4);\r\n		System.out.println(\"长方形的面积:\"+rectangle.area());\r\n		System.out.println(\"长方形的周长:\"+rectangle.length());\r\n		// TODO Auto-generated method stub\r\n\r\n	}\r\n\r\n}\r\n					   ',50,40,'					   \r\n					   ',84,'80,84,82','徐昊,陈嘉懿,韦慧卿',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5409,45,565,132,'package com.company;\r\nclass Person {\r\n    String name;\r\n    String address;\r\n    public Person1(String n,String a){\r\n        name=n;\r\n        address=a;\r\n    }\r\n    public Person(){}\r\n}\r\nclass Employee extends Person{\r\n    String ID;\r\n    double wage;\r\n    int seniority;\r\n    public Employee(String n,String a,String I,double w,int s){\r\n        super(n,a);\r\n        ID=I;\r\n        wage=w;\r\n        seniority=s;\r\n    }\r\n    public Employee(){}\r\n}\r\nclass ExcellentEmployee extends Employee{\r\n    String level;\r\n    ExcellentEmployee(String n,String a,String I,double w,int s,String l){\r\n        super(n,a,I,w,s);\r\n        level=l;\r\n    }\r\n    void add(String level) {\r\n        if (level == \"普通员工\") {\r\n            double x = wage * 0.1;\r\n            System.out.println(\"该员工涨：\" + x);\r\n\r\n        } else if (level == \"优秀员工\") {\r\n            double x = wage * 0.2;\r\n            System.out.println(\"该员工涨：\" + x);\r\n        }\r\n    }\r\n    void show()\r\n    {\r\n        System.out.println(\"姓名：\"+name);\r\n        System.out.println(\"地址：\"+address);\r\n        System.out.println(\"级别：\"+level);\r\n        System.out.println(\"工号：\"+ID);\r\n        System.out.println(\"工资：\"+wage);\r\n        System.out.println(\"工龄：\"+seniority);\r\n    }\r\n}\r\npublic class testone{\r\n    public static void main(String[] args)\r\n        {\r\n            ExcellentEmployee y1=new ExcellentEmployee(\"小明\",\"南通\",\"01\",2000,2,\"普通员工\");\r\n            y1.show();\r\n            y1.add(\"普通员工\");\r\n            ExcellentEmployee y2=new ExcellentEmployee(\"小潘\",\"南通\",\"02\",3000,2,\"优秀员工\");\r\n            y2.show();\r\n            y2.add(\"优秀员工\");\r\n        }\r\n}\r\n					   ',50,50,'					   ',0,'','',NULL),
 (5410,45,565,133,'package com.company;\r\ninterface Shape{\r\n    void perimeter();\r\n    void area();\r\n}\r\nclass Circle1 implements Shape{\r\n    int r;\r\n    public Circle1(int R){\r\n        r=R;\r\n    }\r\n    public void perimeter(){\r\n        int c=2*3*r;\r\n        System.out.println(\"圆的周长：\"+c);\r\n    }\r\n    public void area(){\r\n        int s=3*r*r;\r\n        System.out.println(\"圆的面积：\"+s);\r\n    }\r\n}\r\nclass Rectangle1 implements Shape{\r\n    int a,b;\r\n    public Rectangle1(int A,int B){\r\n        a=A;\r\n        b=B;\r\n    }\r\n    public void perimeter(){\r\n        int c=(a+b)*2;\r\n        System.out.println(\"长方形周长：\"+c);\r\n    }\r\n    public void area(){\r\n        int s=a*b;\r\n        System.out.println(\"长方形面积：\"+s);\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args){\r\n        Circle1 x=new Circle1(3);\r\n        Rectangle1 y=new Rectangle1(4,6);\r\n        x.perimeter();\r\n        x.area();\r\n        y.perimeter();\r\n        y.area();\r\n    }\r\n}					   ',50,45,'			 public void perimeter(){\r\n        int c=2*3*r;\r\n        System.out.println(\"圆的周长：\"+c);\r\n    }c应为float		   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5411,45,557,132,'		package homework.ch04;\r\n\r\npublic class Person {\r\n    String name;\r\n    String address;\r\n\r\n    public Person(String name, String address) {\r\n        this.name = name;\r\n        this.address = address;\r\n    }\r\n}\r\npackage homework.ch04;\r\n\r\npublic class Employee extends Person {\r\n    String id;\r\n    double wage;\r\n    int age;\r\n\r\n    public Employee(String name, String address, String id, double wage, int age) {\r\n        super(name, address);\r\n        this.id = id;\r\n        this.wage = wage;\r\n        this.age = age;\r\n    }\r\n\r\n\r\n}\r\n\r\npackage homework.ch04;\r\n\r\npublic class ExcellentEmployee extends Employee {\r\n     String level;\r\n\r\n    public ExcellentEmployee(String name, String address, String id, double wage, int age, String level) {\r\n        super(name, address, id, wage, age);\r\n        this.level = level;\r\n    }\r\n\r\n\r\n\r\n    public double add(String level)\r\n    {\r\n        if(level==\"普通员工\"){\r\n            this.wage=this.wage*1.1;\r\n        }\r\n        else if (level==\"游戏与员工\"){\r\n            this.wage=this.wage*1.2;\r\n        }\r\n\r\n        return wage;\r\n\r\n    }\r\n}\r\npackage homework.ch04;\r\n\r\npublic class TestDemo2 {\r\n    public static void main(String[] args) {\r\n        ExcellentEmployee excellentEmployee1=new ExcellentEmployee(\"小红\",\"北京\",\"05\",3500,20,\"普通员工\");\r\n        ExcellentEmployee excellentEmployee2=new ExcellentEmployee(\"小明\",\"苏州\",\"01\",6000,25,\"优秀员工\");\r\n\r\n        System.out.println(excellentEmployee1.name);\r\n        System.out.println(excellentEmployee1.level);\r\n        System.out.println(excellentEmployee1.address);\r\n        System.out.println(excellentEmployee1.id);\r\n        System.out.println(excellentEmployee1.age);\r\n        System.out.println(excellentEmployee1.wage);\r\n\r\n        System.out.println(excellentEmployee2.name);\r\n        System.out.println(excellentEmployee2.level);\r\n        System.out.println(excellentEmployee2.address);\r\n        System.out.println(excellentEmployee2.id);\r\n        System.out.println(excellentEmployee2.age);\r\n        System.out.println(excellentEmployee2.wage);\r\n\r\n\r\n    }\r\n\r\n}\r\n			   ',50,48,'					   ',0,'','',NULL),
 (5412,45,557,133,'			package homework.ch04;\r\n\r\npublic interface Shape {\r\n     double perimer();\r\n     double area();\r\n\r\n}\r\n\r\npackage homework.ch04;\r\n\r\npublic class Circle implements Shape {\r\n    double r;\r\n    double circlepeerimer;\r\n    double circlearea;\r\n\r\n    public Circle(double r) {\r\n        this.r = r;\r\n    }\r\n\r\n    public double perimer()\r\n    {\r\n        circlepeerimer=r*2*3.14;\r\n        return circlepeerimer;\r\n    }\r\n\r\n    public double area()\r\n    {\r\n        circlearea=3.14*r*r;\r\n        return circlearea;\r\n    }\r\n}\r\n\r\npackage homework.ch04;\r\n\r\npublic class Rectangle implements Shape {\r\n    double x;\r\n    double y;\r\n\r\n\r\n\r\n    public Rectangle(double x, double y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public double perimer()\r\n    {\r\n        return 2*x+2*y;\r\n\r\n    }\r\n\r\n    public double area()\r\n    {\r\n        return x*y;\r\n\r\n    }\r\n}\r\n\r\npackage homework.ch04;\r\n\r\npublic class TestDemo {\r\n    public static void main(String[] args) {\r\n        Circle cir=new Circle(5);\r\n        Rectangle rec=new Rectangle(6,2);\r\n        System.out.println(\"圆形的面积是\"+cir.area());\r\n        System.out.println(\"圆形的周长是\"+cir.perimer());\r\n\r\n        System.out.println(\"矩形的面积是\"+rec.area());\r\n        System.out.println(\"矩形的周长是\"+rec.perimer());\r\n    }\r\n\r\n\r\n}\r\n		   ',50,48,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5413,46,587,132,'public class Person {\r\n	public String name,address;\r\n	public Person(String n,String a){\r\n		name=n;\r\n		address=a;\r\n	}\r\n}\r\n\r\nclass Employee extends Person{\r\n	public String ID;\r\n	public double wage;\r\n	public int workage;\r\n	public Employee(String n,String a,String i,double w,int age){\r\n		super(n,a);\r\n		ID=i;\r\n		wage=w;\r\n		workage=age;\r\n	}\r\n	void println(){\r\n		System.out.println(\"该员工的姓名为：\"+name+\"   \"+\"地址\"+address+\"   \"+\"工号\"+ID+\"   \"+\"工资\"+wage+\"   \"+\"工龄\"+workage);\r\n	}\r\n}\r\n\r\nclass ExcellentEmployee extends Employee{\r\n	public String level;\r\n	public ExcellentEmployee(String n,String a,String i,double w,int age,String l){\r\n		super(n,a,i,w,age);\r\n		level=l;\r\n	}\r\n	public void add(){\r\n		if(level==\"ordinary\")\r\n			wage+=wage*0.1;\r\n		if(level==\"excellent\")\r\n			wage+=wage*0.2;\r\n		System.out.println(\"该员工的姓名为：\"+name+\"   \"+\"地址\"+address+\"   \"+\"工号\"+ID+\"   \"+\"工资\"+wage+\"   \"+\"工龄\"+workage+\"   \"+\"级别\"+level);\r\n	}\r\n}\r\n\r\nclass Text{\r\n	public static void main (String[]args){\r\n		Employee employee=new Employee(\"张三\",\"南通大学\",\"001\",1000,2);\r\n		ExcellentEmployee excellentemployee=new ExcellentEmployee(\"李四\",\"南通大学\",\"002\",5000,5,\"excellent\");\r\n		employee.println();\r\n		excellentemployee.add();\r\n	}\r\n}\r\n					   ',50,48,'					   ',0,'','',NULL),
 (5414,46,587,133,'					   \r\n\r\ninterface Shape {\r\n	double area();\r\n	double circumference();\r\n}\r\n\r\nclass Circle implements Shape{\r\n	double r;\r\n	Circle(double r){\r\n		this.r=r;\r\n	}\r\n	public double area(){\r\n		return (3.14*r*r);\r\n	}\r\n	public double circumference(){\r\n		return(3.14*2*r);\r\n	}\r\n}\r\n\r\nclass Rectangle implements Shape{\r\n	double a,b;\r\n	Rectangle(double a,double b){\r\n		this.a=a;\r\n		this.b=b;\r\n	}\r\n	public double area(){\r\n		return(a*b);\r\n	}\r\n	public double circumference(){\r\n		return (2*(a+b));\r\n	}\r\n}\r\n\r\npublic class ShapeText {\r\n	public static void main(String[] args){\r\n		Shape circle=new Circle(4.0);\r\n		circle.area();\r\n		circle.circumference();\r\n		Shape rectangle=new Rectangle(3.0,4.0);\r\n		rectangle.area();\r\n		rectangle.circumference();\r\n	}\r\n}\r\n',50,48,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5415,45,582,132,'//Person.java\r\npublic class Person{\r\nprivate String name;\r\nprivate String address;\r\n\r\npublic Person(String name,String address){\r\nthis.name=name;\r\nthis.address=address;\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//Employee.java\r\n\r\n\r\npublic class Employee extends Person{\r\nprivate String ID;\r\nprivate double wage;\r\nprivate int workage;\r\n\r\npublic Employee(String name,String address,String ID,double wage,int workage){\r\nsuper(name,address);\r\nthis.ID=ID;\r\nthis.wage=wage;\r\nthis.workage=workage;\r\n}\r\n\r\npublic double Add(String position){\r\nif(position==\"0\")\r\n{wage=(wage+wage*0.2);}\r\nelse\r\n{wage=(wage+wage*0.1);}\r\nreturn wage;\r\n}\r\n\r\npublic double getWage(){\r\nreturn wage;\r\n}\r\npublic void setWage(double wage){\r\nthis.wage=wage;\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//ExcellentEmployee.java\r\n\r\npublic class ExcellentEmployee extends Employee{\r\nprivate String level=\"\";//  Employee=1   ExcellentEmployee=0\r\npublic ExcellentEmployee(String name,String address,String ID,double wage,int workage,String level){\r\nsuper(name,address,ID,wage,workage);\r\nthis.level=level;\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//Test.java\r\npublic class Test{\r\npublic static void main(String[] args){\r\nExcellentEmployee normal=new ExcellentEmployee(\"a\",\"b\");\r\nExcellentEmployee excellentemployee=new ExcellentEmployee(\"c\",\"d\");\r\nnormal.Add(normal.getLevel());\r\nexcellentemployee.Add(excellentemployee.getLevel());\r\n\r\nSystem.out.println(\"normal employee:\"+normal.getwage());\r\nSystem.out.println(\"excellent employee:\"+excellentemployee.getwage());\r\n}\r\n}',50,30,'					  这个程序，你调试了吗，编译都没有通过 ',0,'','',NULL),
 (5416,45,582,133,'abstract class Shape\r\n{\r\npublic abstract double getArea();\r\npublic abstract double getPerimeter();\r\n}\r\nclass Circle extends Shape\r\n{\r\nprivate double radius;\r\npublic Circle(double radius)\r\n{\r\nthis.radius=radius;\r\n}\r\npublic double getArea()\r\n{\r\nreturn (2*Math.PI*radius);\r\n}\r\n}\r\nclass Rectangle extends Shape\r\n{\r\nprivate double width;\r\nprivate double height;\r\n}\r\npublic double getArea()\r\n{\r\nreturn (width*height);\r\n}\r\npublic double getPerimeter()\r\n{\r\nreturn(width+height)*2;\r\n}\r\n}\r\npublic class ShapeTest\r\n{\r\npublic static void main(String[] args)\r\n{\r\nCircle circle=new Circle(5);\r\nSystem.out.println(\"the area of the circle = \"+circle.getArea()+\"  the perimeter of the circle = \"+circle.getPerimeter());\r\nRectangle rect=new Rectangle(6,9);\r\nSystem.out.println(\"the area of the rectangle = \"+rect.getArea()+\"  the perimeter of the rectangle = \"+rect.getPerimeter());\r\n}\r\n}\r\n					   ',50,30,'					  abstract class Shape这里应该是接口 ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5417,45,575,132,'class Person{\r\n	String name;\r\n	String address;\r\n	Person(String n,String add){\r\n		name=n;\r\n		address=add;\r\n	}\r\n}\r\nclass Employee extends Person{\r\n		String ID;\r\n		double wage;\r\n		int workage;\r\n		Employe(String n,String add,string id,double w,int age){\r\n			super(n,add);\r\n			ID=id;\r\n			wage=w;\r\n			workage=age;\r\n		}\r\n	}\r\n\r\n\r\nclass ExcellentEmployee extends Employee{\r\n	String level;\r\n	ExcellentEmployee(String n,String add,string id,double w,int age,String l){\r\n		super(n,add,id,w,age);\r\n		level=l;\r\n	}\r\n	void add(String level) {\r\n		if(\"common\"==level){\r\n			wage*=1.1;\r\n		}\r\n		else if(\"senior\"==level){\r\n			wage*=1.2;\r\n		}\r\n	}\r\n	static void display(ExcellentEmployee one) {\r\n		System.out.println(\"姓名：\"+one.name);\r\n		System.out.println(\"地址：\"+one.address);\r\n		System.out.println(\"工号：\"+one.ID);\r\n		System.out.println(\"工资：\"+one.wage);\r\n		System.out.println(\"工龄：\"+one.workage);\r\n		System.out.println(\"级别：\"+one.level);\r\n	}\r\n}\r\n\r\npublic class WageClass {\r\n	public static void main(String [] args) {\r\n		ExcellentEmployee common=new ExcellentEmployee(\"小红\",\"JAPAN\",16888,5888,6,\"common\");\r\n		ExcellentEmployee senior=new ExcellentEmployee(\"小张\",\"CHINA\",23456,6888,7,\"senior\");\r\n		ExcellentEmployee.display(common);\r\n		ExcellentEmployee.display(senior);\r\n	}\r\n}\r\n		   \r\n					   ',50,30,'					   你的代码为什么与张明鉴的相似度达95%？',95,'95','张明鉴',NULL),
 (5418,45,575,133,'abstract class Shape{\r\n	final float PI=3.14f;\r\n	abstract float area();\r\n    abstract float circ();\r\n}\r\n\r\nclass Circle extends Shape{\r\n	 private float radius;\r\n	 Circle(float r){\r\n	radius=r;\r\n	 }\r\n	float area() {\r\n		return 2*PI*radius*radius;\r\n	}\r\n	float circ() {\r\n		return 2*PI*radius;\r\n	}\r\n}\r\n\r\nclass Rectangle extends Shape{\r\n	private float length,width;\r\n	Rectangle(float l,float w){\r\n		length=l;\r\n		width=w;\r\n	}\r\n	float area() {\r\n		return length*width;\r\n	}\r\n	float circ() {\r\n		return 2*(length+width);\r\n	}\r\n}\r\npublic class TestClass{\r\n	public static void main(String [] args) {\r\n		float r=2.0f;\r\n		Circle one=new Circle(r);\r\n		System.out.println(\"半径是\"+r+\"的圆周长为：\"+one.circ());\r\n		System.out.println(\"半径是\"+r+\"的圆面积为：\"+one.area());\r\n		float l=3.0f,w=4.0ff;\r\n		Rectangle two=new Rectangle(l,w);\r\n		System.out.println(\"长为\"+l+\"宽为\"+w+\"的长方形的周长为：\"+two.circ());\r\n		System.out.println(\"长为\"+l+\"宽为\"+w+\"的长方形的面积为：\"+two.area());\r\n	}\r\n}		   \r\n					   ',50,30,'	你的代码为什么与张明鉴的相似度达97%？				\r\n   float area() {\r\n		return 2*PI*radius*radius;\r\n	}这个计算方法对吗？\r\n',97,'84,97','杨会龙,张明鉴',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5419,45,577,132,'abstract class Shape{\r\n	final float PI=3.14f;\r\n	abstract float area();\r\n    abstract float circ();\r\n}\r\n\r\nclass Circle extends Shape{\r\n	 private float radius;\r\n	 Circle(float r){\r\n		 radius=r;\r\n	 }\r\n	float area() {\r\n		return 2*PI*radius*radius;\r\n	}\r\n	float circ() {\r\n		return 2*PI*radius;\r\n	}\r\n}\r\n\r\nclass Rectangle extends Shape{\r\n	private float length,width;\r\n	Rectangle(float l,float w){\r\n		length=l;\r\n		width=w;\r\n	}\r\n	float area() {\r\n		return length*width;\r\n	}\r\n	float circ() {\r\n		return 2*(length+width);\r\n	}\r\n}\r\npublic class TestClass{\r\n	public static void main(String [] args) {\r\n		float r=2.5f;\r\n		Circle one=new Circle(r);\r\n		System.out.println(\"半径是\"+r+\"的圆周长为：\"+one.circ());\r\n		System.out.println(\"半径是\"+r+\"的圆面积为：\"+one.area());\r\n		float l=5.5f,w=7.25f;\r\n		Rectangle two=new Rectangle(l,w);\r\n		System.out.println(\"长为\"+l+\"宽为\"+w+\"的长方形的周长为：\"+two.circ());\r\n		System.out.println(\"长为\"+l+\"宽为\"+w+\"的长方形的面积为：\"+two.area());\r\n	}\r\n}',50,30,'					   你的代码与陈典相似度达97%，为什么？题还答错地方了',97,'84,97','杨会龙,陈典',NULL),
 (5420,45,577,133,'class Person{\r\n	String name;\r\n	String address;\r\n	Person(String n,String add){\r\n		name=n;\r\n		address=add;\r\n	}\r\n}\r\nclass Employe extends Person{\r\n		int ID;\r\n		double wage;\r\n		int workage;\r\n		Employe(String n,String add,int id,double w,int age){\r\n			super(n,add);\r\n			ID=id;\r\n			wage=w;\r\n			workage=age;\r\n		}\r\n	}\r\n\r\n\r\nclass ExcellentEmployee extends Employe{\r\n	String level;\r\n	ExcellentEmployee(String n,String add,int id,double w,int age,String l){\r\n		super(n,add,id,w,age);\r\n		level=l;\r\n	}\r\n	void add(String level) {\r\n		if(\"common\"==level){\r\n			wage*=1.1;\r\n		}\r\n		else if(\"senior\"==level){\r\n			wage*=1.2;\r\n		}\r\n	}\r\n	static void display(ExcellentEmployee one) {\r\n		System.out.println(\"姓名：\"+one.name);\r\n		System.out.println(\"地址：\"+one.address);\r\n		System.out.println(\"工号：\"+one.ID);\r\n		System.out.println(\"工资：\"+one.wage);\r\n		System.out.println(\"工龄：\"+one.workage);\r\n		System.out.println(\"级别：\"+one.level);\r\n	}\r\n}\r\n\r\npublic class WageClass {\r\n	public static void main(String [] args) {\r\n		ExcellentEmployee common=new ExcellentEmployee(\"jack\",\"USA\",16598,4565,5,\"common\");\r\n		ExcellentEmployee senior=new ExcellentEmployee(\"小明\",\"CHINA\",25469,5269,11,\"senior\");\r\n		ExcellentEmployee.display(common);\r\n		ExcellentEmployee.display(senior);\r\n	}\r\n}\r\n',50,30,'					      你的代码与陈典相似度达95%，为什么？题还答错地方了',95,'95','陈典',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5421,45,559,132,'class Person{\r\nString name;\r\nString address;\r\npublic Person(String name,String address){\r\nthis.name = name;\r\nthis.address=address ;\r\n    }\r\n}\r\n\r\nclass Employee extends Person{\r\n String ID;\r\n double wage;\r\nint age;\r\npublic Employee(String name, String address,String ID, double wage, int age){\r\n super(name，address);\r\nthis.wage = wage;\r\nthis.age = age;\r\nthis.ID = ID;\r\npublic void add()\r\n{wage*= （1+num*0.1）;\r\nSystem.out.println(\"涨工资后：\" + wage);}\r\n\r\npublic void Show(){\r\nSystem.out.println(\"普通员工：\"+ name + \"地址：\"+address+ \"工号：\" + ID +\" 工资：\" + wage + \" 工龄：\" + age );\r\n    }\r\nclass ExcellentEmployee extends Employee{\r\n String level;\r\npublic ExcellentEmployee(String name, String address，String ID, double wage, int age, String level）\r\n{\r\nsuper(name,address, ID,  wage, age);\r\nthis.level = level;\r\n    } \r\n\r\npublic void add(string level)\r\n{double num=double(level)-64\r\nwage *= （1+num*0.2）;\r\nSystem.out.println(\"涨工资后：\" + waye);}\r\n\r\npublic void Show(){\r\nSystem.out.println(\"优秀员工：\"+ name + \"地址：\"+address+ \"工号：\" + ID +\" 工资：\" + wage + \" 工龄：\" + age + \" 级别：\" + level);}\r\npublic class Test{\r\n public static void main(String[] args){\r\n Employee x = new Employee(\"小红\", \"12345\",111, 6200,47);\r\n x.Show();\r\n x.add();\r\nExcellentEmployee y = new ExcellentEmployee(\"小李\",\"123457\", 112, 7000, 42,B);\r\ny.Show();\r\nx.add(B);\r\n    }\r\n }\r\n\r\n					   ',50,45,'					   ',0,'','',NULL),
 (5422,45,559,133,'interface Shape{\r\n float Area();//求面积\r\nfloat Circumference();//求周长\r\n}\r\nclass Circle implements Shape{\r\n float 兀=3.14f;\r\nfloat radius;\r\nCircle(float r){\r\nradius=r;\r\n  }\r\n public float Area(){\r\n}\r\npublic float Circumference(){//Circle类求周长\r\n return (2*兀*radius);\r\n    }\r\n}\r\nclass Rectangle implements Shape{\r\n float width;\r\n float height;\r\n\r\nRectangle(float width,float height){\r\nthis.width=width;\r\nthis.height=height;\r\n    }\r\n  public float Area(){ //Rectangle类求面积\r\nreturn width*height;\r\n    }\r\npublic float Circumference(){//Rectangle类求周长\r\n return (2*(width+height));\r\n    }\r\n\r\npublic static void main(String[] args) {\r\nCircle x=new Circle(2);\r\nRectangle y=new Rectangle(2,6);\r\n System.out.println(\"圆的面积：\"+x.Area()+\"\\t圆的周长：\"+x.Circumference());\r\n System.out.println(\"长方形的面积：\"+y.Area()+\"\\t长方形的周长：\"+y.Circumference());\r\n    }\r\n}\r\n\r\n					   ',50,40,'					    public float Area(){\r\n}为什么为空？',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5423,45,576,132,'class Person{\r\npublic String name;\r\npublic String address;\r\npublic Person(String name,String address){\r\n this.name=name;\r\n this.address=address;}\r\n                       }\r\nclass Employee extends Person{\r\npublic String ID;\r\npublic double wage;\r\npublic int workage;\r\npublic Employee(String name, String address,String ID,String wage,int workage){\r\nsuper(name,address);\r\nthis.ID=ID;\r\nthis.wage=wage;\r\nthis.workage=workage;}\r\n                      }\r\nclass ExcellentEmployee extends Employee{\r\npublic String level;\r\npublic ExcellentEmployee(String name,String address,String ID,String wage,int workage,String level){\r\nsuper(name,address,ID,wage,workage);\r\nthis.level=level;}\r\n                  }\r\npublic double add(String level){\r\nif(level==\"0\"){wage=wage*1.1;}\r\nif(level==\"1\"){wage==wage1.2;}\r\nreturn wage;}\r\n		}\r\npublic class Test{\r\n public static void main(String[]args){\r\nExcellentEmployee putong=new ExcellentEmployee{\"韦慧卿\",\"镇江\",\"01\",2000,1,\"0\"); \r\nExcellentEmployee youxiu=new ExcellentEmployee{\"徐昊\",\"盐城\",\"02\",10000,1,\"1\");\r\nSystem.out.println(\"普通员工:\"+putong.name+\" \"+putong.address+\" \"+putong.ID+\" \"+putong.add(putong.level)+\" \"+putong.workage);\r\nSystem.out.println(\"优秀员工:\"+youxiu.name+\" \"+youxiu.address+\" \"+youxiu.ID+\" \"+youxiu.add(youxiu.level)+\" \"+youxiu.workage);}\r\n}\r\n     ',50,48,'					   ',0,'','',NULL),
 (5424,45,576,133,'interface Shape{\r\ndouble area();\r\ndouble length();}\r\nclass Circle implements Shape{\r\ndouble r;\r\nCircle(double r)\r\n{this.r=r;}\r\npublic double area()\r\n{\r\nreturn (3.14*r*r);\r\n}\r\npublic double length()\r\n{\r\nreturn(2*3.14*r);\r\n}\r\n }\r\nclass Rectangle implements Shape{\r\ndouble a,b;\r\nRectangle(double a,double b)\r\n{\r\nthis.a=a;\r\nthis.b=b;\r\n}\r\npublic double area\r\n{\r\nreturn (a*b);\r\n}\r\npublic double length\r\n{\r\nreturn ((a+b)*2);\r\n}\r\npublic class shape1{\r\n public static void main(String[]args){\r\nCircle circle=new Circle(6);\r\nSystem.out.println(\"圆的周长:\"+circle.length());\r\nSystem.out.println(\"圆的面积:\"+circle.area());\r\nRectangle rectangle=new Rectangle(4,5);\r\nSystem.out.println(\"长方形的面积:\"+rectangle.area());\r\nSystem.out.println(\"长方形的周长:\"+rectangle.length());\r\n}\r\n }',50,48,'					   ',81,'80,81,81','周璇,陈嘉懿,韦慧卿',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5425,46,602,132,'class Person{\r\n	String name, address;\r\n	Person(String _name, String _address){\r\n		name = _name;\r\n		address = _address;\r\n	}\r\n}\r\nclass Employee extends Person{\r\n	String ID;\r\n	double wage;\r\n	int worktime;\r\n	Employee(String _name, String _address, String _ID, double _wage, int _worktime){\r\n		super(_name, _address);\r\n		ID = _ID;\r\n		wage = _wage;\r\n		worktime = _worktime;\r\n	}\r\n}\r\nclass ExcellentEmployee extends Employee{\r\n	String level;\r\n	ExcellentEmployee(String _name, String _address, String _ID, double _wage, int _worktime, String _level){\r\n		super(_name, _address, _ID, _wage, _worktime);\r\n		level = _level;\r\n	}	\r\n	void add(String newLevel){\r\n		level = newLevel;\r\n		if(level.equals(\"Normal\")){\r\n			wage += wage * 0.1;\r\n		}else if(level.equals(\"Excellent\")){\r\n			wage += wage * 0.2;\r\n		}\r\n	}\r\n	void show(){\r\n		System.out.println(\"姓名:\" + name);\r\n		System.out.println(\"住址:\" + address);\r\n		System.out.println(\"ID:\" + ID);\r\n		System.out.println(\"工资:\" + wage);\r\n		System.out.println(\"工时:\" + worktime);\r\n		System.out.println(\"等级:\" + level);\r\n		System.out.println();\r\n	}\r\n}\r\npublic class Question2 {\r\n	public static void main(String []args){\r\n		ExcellentEmployee normal = new ExcellentEmployee(\"张三\", \"楼1\", \"123\", 1000.0, 2, \"Normal\");\r\n		normal.show();\r\n		normal.add(\"Excellent\");\r\n		normal.show();\r\n		ExcellentEmployee excellent = new ExcellentEmployee(\"李四\", \"楼2\", \"321\", 10000.0, 2, \"Excellent\");\r\n		excellent.show();\r\n		excellent.add(\"Normal\");\r\n		excellent.show();\r\n	}\r\n}\r\n					   \r\n					   ',50,45,'					   ',0,'','',NULL),
 (5426,46,602,133,'interface Shape{\r\n	double getArea();\r\n	double getCir();\r\n}\r\nclass Circle implements Shape{\r\n	double r;\r\n	Circle(double _r){ r = _r; }\r\n	public double getArea(){ return r * r * Math.PI; }\r\n	public double getCir(){ return 2 * r * Math.PI; }\r\n}\r\nclass Rectangle implements Shape{\r\n	double a, b;\r\n	Rectangle(double _a, double _b){ a = _a; b = _b; }\r\n	public double getArea(){ return a * b; }\r\n	public double getCir(){ return 2 * (a + b); }\r\n}\r\npublic class Question1 {\r\n	public static void main(String []args){\r\n		Circle yuan = new Circle(10);\r\n		System.out.println(\"圆的面积：\" + yuan.getArea());\r\n		System.out.println(\"圆的周长：\" + yuan.getCir());\r\n		Rectangle juxing = new Rectangle(10, 20);\r\n		System.out.println(\"长方形的面积：\" + juxing.getArea());\r\n		System.out.println(\"长方形的周长：\" + juxing.getCir());\r\n	}\r\n}\r\n					   \r\n					   ',50,45,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5427,45,564,132,'class Person{\r\n      String name;\r\n      String address;\r\n      public Person(){}\r\n      public Person(String name, String address){\r\n             this.name=name;\r\n             this.address=address;}\r\n}\r\nclass Employee extends Person{\r\n      String ID;\r\n      double wage;\r\n      int age;\r\n      public Employee(){}\r\n      public Employee(String name,String address,String ID, double wage, int age){\r\n             super(name,address);\r\n             this.ID=ID;\r\n             this.wage=wage;\r\n             this.age=age;}\r\n}\r\nclass ExcellentEmployee extends Employee{\r\n      String level;\r\n      public ExcellentEmployee(){}\r\n      public ExcellentEmployee(String name, String address, String ID, double wage, int age, String level){\r\n             super(name, address,ID,wage,age);\r\n             this.level=level;}\r\n      public double Add(String level){\r\n             if(level==\"common\"){wage=wage*1.10;}\r\n             if(level==\"excellent\"){wage=wage*1.20;}\r\n             return wage;}\r\n}\r\npublic class test{\r\n      public static void main(String[] args){\r\n      ExcellentEmployee ex=new ExcellentEmployee(\"张三\",\"南京\",\"001\",10000,25,\"excellent\");\r\n      ExcellentEmployee co=new ExcellentEmployee(\"李四\",\"上海\",\"002\",10000,25,\"common\");\r\n      System.out.println(\"员工一：\"+\" 姓名：\"+ex.name+\" 地址：\"+ex.address+\" id:\"+ex.ID+\" 基本工资:\"+ex.wage+\" 年龄：\"+ex.age+\" 级别：\"+ex.level+\" 加薪后的工资：\"+ex.Add(\"excellent\"));\r\n      System.out.println(\"员工一：\"+\" 姓名：\"+co.name+\" 地址：\"+co.address+\" id:\"+co.ID+\" 基本工资:\"+co.wage+\" 年龄：\"+co.age+\" 级别：\"+co.level+\" 加薪后的工资：\"+co.Add(\"common\"));\r\n}\r\n}	   ',50,48,'					   ',0,'','',NULL),
 (5428,45,564,133,'interface Shape{\r\n      double S();\r\n      double C();\r\n}\r\nclass Circle implements Shape{\r\n      double r;\r\n      double pi=3.14;\r\n      public double S(){\r\n             return pi*r*r;}\r\n      public double C(){\r\n             return pi*2*r;}\r\n}\r\nclass Rectangle implements Shape{\r\n      double width,length;\r\n      public double S(){\r\n             return width*length;}\r\n      public double C(){\r\n             return 2*(width+length);}\r\n}\r\npublic class test{\r\n      public static void main(String[] arges){\r\n      Circle circle=new Circle();\r\n      Rectangle rectangle=new Rectangle();\r\n      circle.r=1.5;\r\n      rectangle.width=1.5;\r\n      rectangle.length=2.0;\r\n      System.out.println(\"圆的面积为：\"+circle.S()+\" 周长为：\"+circle.C());\r\n      System.out.println(\"矩形的面积为：\"+rectangle.S()+\" 周长为：\"+rectangle.C());\r\n}\r\n}					   \r\n					   ',50,50,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5429,46,610,132,'package 1:\r\npublic class person{\r\npublice string name;\r\npublice string address;\r\nreturn name;\r\n}\r\npublic void setname(string name){\r\nthis.name=name;\r\n}	   \r\npublic void setaddress(string address){\r\nthis.address=address;\r\n}\r\npublic string getname(){\r\nreturn name;\r\n}\r\npublic string getaddress(){\r\nreturn address\r\n}\r\npublic class employee extends person{\r\npublice string id;\r\npublice double wage; \r\npublice int age;  \r\n}	\r\npublic void setid(string id){\r\nthis.id=id;\r\n}   \r\npublic void setwage(double wage){\r\nthis.wage=wage;\r\n}\r\npublic void setage(int age){\r\nthis.age=age;\r\n}\r\npublic string getid(){\r\nreturn id;\r\n}\r\npublic double getwage(){\r\nreturn wage;\r\n}\r\npublic int getage(){\r\nreturn age;\r\n}\r\npublic class ExcellentEmployee extends employee{\r\npublic string level;\r\npublic double add(string level);\r\n}\r\npublic string getlevel(){\r\nreturn level;\r\n}\r\npublic double add(string level){\r\nif(level ==\"普通员工\"){\r\nwage =wage*1.1;\r\nelse if(level ==\"优秀员工\")\r\nwage =wage*1.2；\r\n}\r\n}\r\npublic class test{\r\nperson p=new person;\r\nperson s=new person;\r\np.setname(\"P\");\r\np.setaddress(\"Atlanta\")；\r\np.setid(\"001\");\r\np.setwage(\"100\");\r\np.setage(\"25\");\r\np.level(\"普通员工\");\r\nSystem.out.println(p.getname+p.getaddress+p.getid+p.wage+p.getage+p.level);\r\ns.setname(\"S\");\r\ns.setaddress(\"area\")；\r\ns.setid(\"002\");\r\ns.setwage(\"200\");\r\ns.setage(\"26\");\r\ns.level(\"优秀员工\");\r\nSystem.out.println(s.getname+s.getaddress+s.getid+s.wage+s.getage+s.level)\r\n\r\n}',50,35,'					   \r\n					   publice是什么意思？\r\n					   ',0,'','',NULL),
 (5430,46,610,133,'package 1；\r\nclass shape{\r\npublic double 面积();\r\npublic double 周长();\r\n\r\n}   \r\nclass circle extends shape{\r\ndouble r;\r\ncircle(double r){\r\nthis.r=r;\r\n}\r\npublic double 面积(){\r\nreturn(3.14*r*r);\r\n}\r\npublic double 周长(){\r\nreturn(6.28*r);\r\n}\r\n}\r\nclass rectangle extends shape{\r\ndouble a,b;\r\nrectangle(double a,double b){\r\nthis.a=a;\r\nthis.b=b;\r\n}\r\npublic double 面积(){\r\nreturn(a*b);\r\n}\r\npublic double 周长(){\r\nreturn(2*(a+b));\r\n}\r\n}\r\npublic class shapearea{\r\npublic static void main(){\r\nshape = new circle(2.0);\r\nSystem.out.println(\"圆的面积\"+shape.面积)；\r\nSystem.out.println(\"圆的周长\"+shape.周长)；\r\nshape = new retangle(5.0,6.5);\r\nSystem.out.println(\"长方形的面积\"+shape.面积)；\r\nSystem.out.println(\"长方形的周长\"+shape.周长)；\r\n}\r\n}',50,40,'					   \r\n					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5431,46,592,132,'public class Person{\r\nString name;\r\nString address;\r\npublic Person(String name,String address){\r\nthis.name=name;\r\nthis.address=address;\r\n}\r\n}\r\npublic class Employee extends Person{\r\nString ID;\r\ndouble wage;\r\nint age;\r\nEmployee(String name,String address,String ID,double wage,int age){\r\nsuper(name,address);\r\nthis.ID=ID;\r\nthis.wage=wage;\r\nthis.age=age;\r\n}\r\n}\r\npublic class ExcellentEmployee extends Employee{\r\nString level;\r\nExcellentEmployee(String name,String address,String ID,double wage,int age,String level){\r\nsuper(name,address,ID,wage,age);\r\nthis.level=level;\r\n}\r\npublic double Add(String level){\r\nif(level==\'1\'){wage=wage*1.2;}\r\nelse {wage=wage*1.1;}\r\nreturn wage;\r\n}\r\npublic double getwage(){\r\nreturn wage;\r\n}}\r\npublic class Test {\r\npublic static void main(String[] args)[\r\nExcellentEmployee normal =new ExcellentEmployee(\"张三\",\"南通\",\"001\",3000,2,\"0\");\r\nExcellentEmployee excellent=new ExcellentEmployee(\"李四\",\"苏州\",\"001\",3000,2,\"0\");\r\nSystem.out.println(\"普通员工工资：\"+normal.getwage());\r\nSystem.out.println(\"优秀员工工资：\"+excellent.getwage());\r\n}\r\n}\r\n					   \r\n					   \r\n					   ',50,48,'					   ',0,'','',NULL),
 (5432,46,592,133,'interface Shape{\r\npublic abstract double getArea();\r\npublic abstract double getPerimeter();	\r\n}\r\nclass Circle implements Shape{\r\ndouble r;\r\nCircle(double r){\r\nthis.r=r;\r\n}\r\npublic double getArea(){\r\nreturn(3.14*r*r);\r\n}\r\npublic double getPerimeter(){\r\nreturn (3.14*r*2);\r\n}\r\n}\r\nclass Rectangle implements Shape{\r\ndouble length;\r\ndouble width;\r\nRectangle(double length,double width){\r\nthis.length=length;\r\nthis.width=width;\r\n}\r\npublic double getArea(){\r\nreturn length*width;\r\n}\r\npublic double getPerimeter(){\r\nreturn (length+width)*2;\r\n}\r\n}\r\npublic class ShapeTest{\r\npublic static void main(String[] args){\r\nCircle circle=new Circle(6);\r\nSystem.out.println(\"圆面积：\"+circle.getArea()+\",圆周长：\"+circle.getPerimeter());\r\nRectangle rectangle=new Rectangle(8,10);\r\nSystem.out.println(\"矩形面积:\"+rectangle.getArea()+\",矩形周长:\"+rectangle.getPerimeter());\r\n}\r\n}\r\n				   \r\n					   \r\n					   ',50,50,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5433,46,604,132,'(1)\r\n package com.fs.test;\r\n public class Person\r\n { \r\n private String name;\r\n private String address; //定义构造方法 \r\n public Person(String name, String address)\r\n{ this.name = name; this.address = address; } \r\n}\r\n(2)\r\n package com.fs.test; //继承Person类 \r\npublic class Employee extends Person \r\n{\r\n private String ID;\r\n private double wage;\r\n private int workAge;\r\n public Employee(String name, String address, String ID, double wage, int workAge)\r\n{ \r\nsuper(name, address); //调用父类的构造方法 \r\nthis.ID = ID;\r\n this.wage = wage;\r\n this.workAge = workAge;\r\n } \r\npublic double add(String position)\r\n{\r\n if(position == \"0\")\r\n{wage = wage*1.2;}\r\n else\r\n{wage = wage*1.1;}\r\n return wage; \r\n} \r\npublic double getWage() { return wage;\r\n}\r\n public void setWage(double wage) { this.wage = wage; } \r\n}\r\n			   ',50,30,'					  你的代码为什么与张陈鹏的一样？ ',100,'100','张陈鹏',NULL),
 (5434,46,604,133,'public abstract class Shape {\r\n    public abstract double getArea();\r\n   \r\n    public abstract double getLength();\r\n}\r\n   \r\npublic class Circle extends Shape {\r\n    private double dRadius;\r\n   \r\n    public Circle(double r) {\r\n        this.dRadius = r;\r\n    }\r\n   \r\n    public double getArea() {\r\n   \r\n        return dRadius * Math.PI * Math.PI;\r\n    }\r\n   \r\n    public double getLength() {\r\n        return 2 * dRadius * Math.PI;\r\n    }\r\n   \r\n    public void printString() {\r\n        System.out.println(\"圆形半径是:\" + this.dRadius);\r\n    }\r\n   \r\n    public void printArea() {\r\n        System.out.println(\"圆的面积:\" + getArea());\r\n    }\r\n   \r\n    public void printLength() {\r\n        System.out.println(\"圆的周长:\" + getLength());\r\n    }\r\n}\r\npublic class Rectangle extends Shape {\r\n    private double length;\r\n    private double width;\r\n    public Circle(double l,double w,) {\r\n        this.length= l;\r\n        this.width= w;\r\n    }\r\n   \r\n    public double getArea() {\r\n        return length * width;\r\n    }\r\n       public double getLength() {\r\n        return 2 *（length + width）;\r\n    }\r\n   \r\n    public void printString() {\r\n        System.out.println(\"长方形长是:\" + this.length+\",宽是:\"+width);\r\n    }\r\n   \r\n    public void printArea() {\r\n        System.out.println(\"长方形的面积:\" + getArea());\r\n    }\r\n   \r\n    public void printLength() {\r\n        System.out.println(\"长方形的周长:\" + getLength());\r\n    }\r\n}\r\npublic class Test{\r\n    public static void main(String[] args) {\r\n        Circle circle = new Circle(2d);\r\n        circle.printString();\r\n        circle.printArea();\r\n        circle.printLength();\r\n        Rectangle rectangle = new Rectangle (2d,3d);\r\n                rectangle.printString();\r\n                rectangle.printArea();\r\n                rectangle.printLength();\r\n    }\r\n}',50,30,'					 你的代码为什么与张陈鹏的一样？   ',95,'95,91','张陈鹏,侯美伊',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5435,45,579,132,'class Person{\r\npublic String name;\r\npublic String address;\r\npublic Person(String name,String address){\r\nthis.name=name;\r\nthis.address=address;\r\n}\r\n}\r\nclass Employee extends Person{\r\npublic String ID;\r\npublic double wage;\r\npublic int workage;\r\npublic Employee (String name,String address,String ID,double wage,int workage){\r\nsuper(name,address);\r\nthis.wage=wage;\r\nthis.workage=workage;\r\n}\r\n}\r\nclass ExcellentEmployee extends Employee{\r\npublic String level;\r\npublic ExcellentEmployee(String name,String address,String ID,double wage,int workage,String level){\r\nsuper(name,address,ID,wage,workage);\r\nthis.level=level;\r\n}\r\npublic double add(String level){\r\nif(level==\"1\") {wage=wage*1.1;}\r\nif(level==\"2\") {wage=wage*1.2;}\r\nreturn wage;\r\n}\r\n}\r\npublic class A{\r\npublic static void main(String []args){\r\nExcellentEmployee a=new ExcellentEmployee(\"韦慧卿\",\"镇江\",\"1813021073\",2000,1,\"1\");\r\nExcellentEmployee b=new ExcellentEmployee(\"翁佳琦\",\"苏州\",\"1813021075\",5000,3,\"2\");\r\nSystem.out.println(\"普通员工：\"+a.name+\" \"+a.address+\" \"+a.ID+\" \"+a.add(a.level)+\" \"+a.workage);\r\nSystem.out.println(\"优秀员工：\"+b.name+\" \"+b.address+\" \"+b.ID+\" \"+b.add(b.level)+\" \"+b.workage);\r\n}\r\n}\r\n	   \r\n					   \r\n					   \r\n					   ',50,40,'					   \r\n					   ',80,'80','周璇',NULL),
 (5436,45,579,133,'interface Shape\r\n{\r\npublic abstract double area();\r\npublic abstract double length();\r\n}\r\nclass Circle implements Shape{\r\nfloat r;\r\nCircle(float r)\r\n{this.r=r;}\r\npublic double area(){\r\nreturn (3.14*r*r);\r\n}\r\npublic double length(){\r\nreturn (2*3.14*r);\r\n}\r\n}\r\nclass Rectangle implements Shape{\r\nfloat a,b;\r\nRectange (float a,float b)\r\n{\r\nthis.a=a;\r\nthis.b=b;\r\n}\r\npublic double area(){\r\nreturn (a*b);\r\n}\r\npublic double length(){\r\nreturn (a+a+b+b);\r\n}\r\n}\r\npublic class Shape(){\r\npublic static void main(String[]args){\r\nCircle circle=new Circle(2);\r\nSystem.out.println(\"圆的面积\"+circle.area());\r\nSystem.out.println(\"圆的周长\"+circle.length());\r\nRectangle rectangle=new Rectangle(1,2);\r\nSystem.out.println(\"长方形的面积\"+rectangle.area());\r\nSystem.out.println(\"长方形的周长\"+rectangle.length());\r\n}\r\n}\r\n 		   \r\n					   \r\n					   \r\n					   ',50,40,'					   \r\n					   ',86,'84,81,86','周璇,徐昊,韦慧卿',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5437,45,561,132,'public abstact class Person{\r\npublic absract int add();\r\n}\r\npublic class Employee extends\r\nPerson{\r\nprotected int num;\r\npublic Employee(){}\r\npublic Employee(int num){\r\nthis.num=num;\r\n}\r\npublic int add(){\r\nnum*=(1+0.1);\r\nreturn num;\r\n}\r\n}\r\npublic class ExcellentEmployee extends\r\nEmployee{\r\npublic ExcellentEmployee(int num){\r\nsuper.num=num;\r\n}\r\npublic int add(){\r\nnum*=(1+0.2);\r\nreturn num;\r\n}\r\n}\r\npublic class test{\r\npublic static void main(String[] args){\r\nPerson employee=new Employee(10);\r\nPerson excellentEmployee=new ExcellentEmployee(10);\r\nSystem.out.println(\"普通员工工资=\"+employee.add());\r\nSystem.out.println(\"优秀员工工资=\"+excellentEmployee.add());\r\n}\r\n}   ',50,30,'					你的代码为什么与杨程羽相似度90%多？   \r\n					   ',90,'90','杨程羽',NULL),
 (5438,45,561,133,'public abstract class\r\nShape{\r\npublic abstract double\r\ngetArea();\r\npublic abstract double\r\ngetLength();\r\n}\r\npublic class Circle extends\r\nShape{\r\nprivate double dRadius;\r\npublic Circle(double r){\r\nthis.dRadius=r;\r\n}			   \r\n@Override\r\npublic double\r\ngetArea(){\r\nreturn dRadius*Math.PI*Math.PI;\r\n}\r\n@Override\r\npublic double getLength(){\r\nreturn 2*dRadius*Math.PI;\r\n}\r\npublic void printString(){\r\nSystem.out.println(\"我是圆形！+我的半径是：\"+this.dRadius);\r\n}\r\npublic void printArea(){\r\nSystem.out.println(\"圆的面积：\"+getArea());\r\n}\r\npublic void printLength(){\r\nSystem.out.println(\"圆的周长：\"+getLength());\r\n}\r\n}\r\npublic class Rectang extends\r\nShape{\r\nprivate double length;\r\nprivate double width;\r\npublic Circle(double l,double w){\r\nthis.length=l;\r\nthis.width=w;\r\n}\r\n\r\n@Override\r\npublic double\r\ngetArea(){\r\nreturn length*width;\r\n}\r\n@Override\r\npublic double getLength(){\r\nreturn 2*(length+width);\r\n}\r\npublic void printString(){\r\nSystem.out.println(\"我是长方形！我的长是：\"+this.length+\",我的宽是：\"+width);\r\n}\r\npublic void printArea(){\r\nSystem.out.println(\"长方形的面积：\"+getArea());\r\n}\r\npublic void printLength(){\r\nSystem.out.println(\"长方形的周长是：\"+getLength());\r\n}\r\n}\r\npublic class Test{\r\npublic static void main(String[] args){\r\nCircle circle=new Circle(2d);\r\ncircle.printString();\r\ncircle.printArea();\r\ncircle,printLength();\r\nRectangle rectangle=new Rectangle(2d,3d);\r\nrectangle.printString();\r\nrectangle.printArea();\r\nrectangle.printLength();\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n',50,40,'	我们要求的是定义接口interface	而不是抽象类\r\n这个计算面积的方法不对			   return dRadius*Math.PI*Math.PI;\r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5439,46,594,132,'	class Person\r\n{\r\n	String name;\r\n	String adress;\r\n	Person(String a,String b)\r\n	{\r\n		name=a;\r\n		adress=b;\r\n	}\r\n}\r\n\r\nclass Employee extends Person\r\n{\r\n	String id;\r\n	double wage;\r\n	int age;\r\n	Employee(String a,String b,String c,double d,int e)\r\n	{\r\n		super(a,b);\r\n		id=c;\r\n		wage=d;\r\n		age=e;\r\n	}\r\n	\r\n}\r\n\r\nclass ExcellentEmployee extends Employee\r\n{\r\n	String level;\r\n	ExcellentEmployee(String a,String b,String c,double d,int e,String f)\r\n	{\r\n		super(a,b,c,d,e);\r\n		level=f;\r\n	}\r\n	\r\n	void add()\r\n	{\r\n		if(level.equals(\"优秀\"))\r\n		\r\n			wage+=wage*0.2;\r\n		else\r\n			wage+=wage*0.1;\r\n	}\r\n	\r\n	void show()\r\n	{\r\n		System.out.println(\"名字：\"+name);\r\n		System.out.println(\"地址：\"+adress);\r\n		System.out.println(\"工号：\"+id);\r\n		System.out.println(\"工资：\"+wage);\r\n		System.out.println(\"工龄：\"+age);\r\n		System.out.println(\"等级：\"+level);\r\n	\r\n	}\r\n}\r\npublic class hu {\r\n	public static void main(String agrs[])\r\n	{\r\n		ExcellentEmployee aa=new ExcellentEmployee(\"小四\",\"中国\",\"123456\",1000,25,\"优秀\");\r\n		aa.add();\r\n		aa.show();\r\n		System.out.println(\"\");\r\n		ExcellentEmployee dd=new ExcellentEmployee(\"小五\",\"中国\",\"123455\",1000,28,\"普通\");\r\n		dd.add();\r\n		dd.show();\r\n		\r\n	}\r\n\r\n}\r\n				   ',50,50,'					   ',0,'','',NULL),
 (5440,46,594,133,'	interface shape\r\n{\r\n	float area();\r\n	float Cir();\r\n	\r\n}\r\n\r\nclass Cirele  implements shape\r\n{\r\n	float r;\r\n	Cirele(float x)\r\n	{\r\n		r=x;\r\n	}\r\n	public float area()\r\n	{\r\n		return 3.14f*r*r;\r\n	}\r\n	public float Cir()\r\n	{\r\n		return 2*3.14f*r;\r\n	}\r\n}\r\n\r\n\r\nclass Rectangle implements shape\r\n{ float a;\r\n  float b;\r\n  Rectangle(float x,float y)\r\n  {a=x;\r\n  b=y;\r\n  }\r\n  \r\n  public float area()\r\n  {\r\n	  return a*b;\r\n  }\r\n  public float Cir()\r\n  {\r\n	  return 2*(a+b);\r\n  }\r\n	\r\n	\r\n	\r\n	\r\n}\r\npublic class jia {\r\n	\r\n	public  static void main(String args[])\r\n	{\r\n		Cirele aa=new Cirele(3);\r\n		System.out.println(\"面积:\"+aa.area());\r\n		System.out.println(\"周长:\"+aa.Cir());\r\n		Rectangle bb=new Rectangle(3,4);\r\n		System.out.println(\"面积:\"+bb.area());\r\n		System.out.println(\"面积:\"+bb.Cir());\r\n		\r\n		\r\n	}\r\n\r\n}\r\n				   ',50,50,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5441,45,569,132,'package ZY_1;\r\npublic class Person {\r\n   String Name;\r\n   String Adress;\r\n   public Person(String n,String ad)\r\n   {\r\n	   Name=n;\r\n	   Adress=ad;\r\n   }\r\n}\r\npackage ZY_1;\r\npublic class Employee extends Person {\r\n   String ID;\r\n   double Wage;\r\n   int Age;\r\npublic Employee(String n,String ad,String id,double w,int ag)\r\n   {\r\n	   super(n,ad);\r\n	   ID=id;\r\n	   Wage=w;\r\n	   Age=ag;\r\n   }\r\n}\r\npackage ZY_1;\r\npublic class ExcellentEmployee extends Employee {\r\n   String Level;\r\n   public ExcellentEmployee(String n,String ad,String id,double w,int ag,String l)\r\n   {\r\n	   super(n,ad,id,w,ag);\r\n	   Level=l;\r\n   }\r\n   public double add(String l)\r\n   {\r\n	   if(l==\"普通员工\") Wage*=1.1;\r\n	   else if(l==\"优秀员工\") Wage*=1.2;\r\n	   else  System.out.println(\"输入的等级错误！\");\r\n	   return Wage;\r\n   }\r\n   public void display(String n,String ad,String id,double w,int ag,String l)\r\n   {\r\n	   System.out.println(\"姓名:\"+n+\" 地址:\"+ad+\" 工号:\"+id+\" 工资:\"+Wage+\" 工龄:\"+ag+\" 级别:\"+l);\r\n   }\r\n}\r\npackage ZY_1;\r\npublic class Test {\r\n	public static void main(String[] args) {\r\n	  ExcellentEmployee A=new ExcellentEmployee(\"李明\",\"河南省\",\"11\",1000,3,\"普通员工\");\r\n	  ExcellentEmployee B=new ExcellentEmployee(\"李华\",\"河北省\",\"12\",2000,5,\"优秀员工\");\r\n      A.add(\"普通员工\");\r\n      A.display(\"李明\",\"河南省\",\"11\",1000,3,\"普通员工\");\r\n      B.add(\"优秀员工\");\r\n      B.display(\"李华\",\"河北省\",\"12\",2000,5,\"优秀员工\");\r\n	}\r\n}			   \r\n					   ',50,48,'					   ',0,'','',NULL),
 (5442,45,569,133,'package ZY_2;\r\npublic interface Shape {\r\n   public double area();\r\n   public double circumference();\r\n}\r\npackage ZY_2;\r\npublic class Circle implements Shape {\r\n	double R;\r\n	public Circle(double r)\r\n	{\r\n		R=r;\r\n	}\r\n	public double area(double r)\r\n	{\r\n		return 3.14*r*r;\r\n	}\r\n	public double circumference(double r)\r\n	{\r\n		return 2*3.14*r;\r\n	}				   \r\n}\r\npackage ZY_2;\r\npublic class Rectangle implements Shape {\r\n	double L;\r\n	double W;\r\n	public Rectangle(double l,double w)\r\n	{\r\n		L=l;\r\n		W=w;\r\n	}\r\n	public double area(double l,double w)\r\n	{\r\n		return l*w;\r\n	}\r\n	public double circumference(double l,double w)\r\n	{\r\n		return 2*(l+w);\r\n	}\r\n}\r\npackage ZY_2;\r\npublic class Test {\r\n   public static void main(String[] args) {\r\n		Circle A=new Circle(3);\r\n		Rectangle B=new Rectangle(4,5);\r\n		System.out.println(\"圆的面积:\"+A.area()+\"  周长:\"+A.circumference());\r\n		System.out.println(\"长方形的面积:\"+B.area()+\"  周长:\"+B.circumference());\r\n	}\r\n}\r\n					   ',50,48,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5443,45,570,132,'public abstract class Person {\r\npublic abstract int add();\r\n}\r\npublic class Employee extends Person{\r\nprotected int num;\r\npublic Employee(int num){\r\nthis.num=num;\r\n}\r\npublic int add(){\r\nnum*=(1+0.1);\r\nreturn num;\r\n}\r\n}\r\npublic class ExcellentEmployee extends Employee{\r\npublic ExcellentEmployee(int num){\r\nsuper.num=num;\r\n}\r\npublic int add(){\r\nnum*=(1+0.2);\r\nreturn num;\r\n}\r\n}\r\npublic class test{\r\npublic static void main(String[]args){\r\nPerson employee=new Employee(10);\r\nPerson excellentEmployee=new ExcellentEmployee(10);\r\nSystem.out.println(\"优秀员公工资=\"+excellentEmployee.add());\r\nSystem.out.println(\"普通员工工资=\"+employee.add());\r\n\r\n}\r\n}\r\n					   ',50,30,'					   \r\n					   你的代码与杨利英相似度90%以上，为什么？',90,'90','杨利英',NULL),
 (5444,45,570,133,'public class Shape {\r\n	public double length()\r\n	{\r\n		return 0;\r\n		\r\n	}\r\n	public double area(){\r\n		return 0;\r\n	}\r\n}\r\npublic class Rectangle extends Shape{\r\n	private double width;\r\n	private double heigth;\r\n	public Rectangle(double heigth,double width){\r\n		super();\r\n		set Heigth(heigth);\r\n		set Width(width);\r\n	}\r\n	public double length(){\r\n		return 2*(width+heigth);\r\n		public double area(){\r\n			return width*heigth;\r\n		}\r\n		public double differ(){\r\n			return Math.abs(heigth-width);\r\n			}\r\n		public double getHeigth(){\r\n			return heigth;\r\n		}\r\n		public void setHeigth(double heigth){\r\n			this.heigth=heigth;\r\n		}\r\n	}\r\n}\r\npublic class Square extends Rectangle{\r\n	public double edge;\r\n	public Square(double edge){\r\n		super(edge,edge);\r\n		setEdge(edge);\r\n		\r\n	}\r\n	public double getEdge(){\r\n		return edge;\r\n	}\r\n	public void setEdge(double edge){\r\n		this.edge=edge;\r\n	}\r\n}					   ',50,40,'					   \r\n					   要求定义一个接口interface shape，而不是一个类class',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5445,45,581,132,'public class Person{\r\n  private String name,address;\r\n  public Person(String name,String address)\r\n   { this.name=name;\r\n     this.address=address;\r\n   }\r\n  public abstract void Add();\r\n }\r\npublic class Employee extends Person{\r\n  private String ID;\r\n  private double wage;\r\n  private int workage;\r\n  public Employee(String name,String address,String ID,double wage,int workage)\r\n {  super(name,address);\r\n    this.ID=ID;\r\n    this.wage=wage;\r\n    this.workage=workage;\r\n  }\r\n  public void Add(){ wage=wage*1.1; }\r\n }\r\npublic class ExcellentEmployee extends Employee{\r\n  private String level;\r\n  public ExcellentEmployee(String name,String address,String ID,double wage,int workage,String level)\r\n   {  super(name,address,ID,wage,workage);\r\n      this.level=level;\r\n   }\r\n  public void Add(String level){ wage=wage*1.2; }\r\n}				   \r\npublic class Test{\r\n  public static void main(String[] args){\r\n    Employee p1=new Employee(\"张三\",\"北京\",\"001\",1000,10);\r\n    ExcellentEmployee p2=new ExcellentEmployee(\"李四\",\"上海\",\"002\",2000,15,\"1\");\r\n   System.out.println(\"姓名：\"+p1.name+\" 地址：\"+p1.address+\" 工号：\"+p1.ID+\"工资：\"+p1.wage+\"工龄: \"+p1.workage);\r\n   System.out.println(\"姓名：\"+p2.name+\" 地址：\"+p2.address+\" 工号：\"+p2.ID+\"工资：\"+p2.wage+\"工龄: \"+p2.workage+\"级别：\"+p2.level);\r\n}\r\n}\r\n					   ',50,45,'					   ',0,'','',NULL),
 (5446,45,581,133,'interface Shape{\r\n final double pi=3.1415926;\r\n public abstract double getarea();\r\n public abstract double getcir();\r\n}\r\npublic class Cirle implements Shape{\r\n  private double r;\r\n  public Cirle(double r){ this.r=r;}\r\n  public double getarea(){ return pi*r*r;}\r\n  public double getcir(){ return 2*pi*r;}\r\n}\r\npublic class Rectangle implements Shape{\r\n private double length,width;\r\n public Rectangle(double length,double width){\r\n       this.length=length;\r\n       this.width.width;\r\n    }\r\n public double getarea(){ return length*width;}\r\n public double getcir(){ return 2*(length+width);}\r\n}\r\npublic class Test{\r\n  public static void main(String[] args){\r\n     Cirle c1=new Cirle(5);\r\n    Rectangle r1=new Rectangle(4,3);\r\n  System.out.println(\"圆的面积为：\"+c1.getarea()+\"周长为：\"+c1.getcir());\r\n  System.out.println(\"长方形的面积为：\"+r1.getarea()+\"周长为：\"+r1.getcir());\r\n}\r\n}		   \r\n					   ',50,50,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5447,45,583,132,' public class Person {\r\n	 String name;\r\n	    String address;\r\n	    public Person(String name, String address){                //定义构造方法\r\n	        this.name = name;\r\n	        this.address = address;\r\n	    }\r\n}\r\npublic Employee(String name, String address, String ID, double wage, int workAge, String level){\r\n     super(name, address);                                  \r\n     this.ID = ID;\r\n     this.wage = wage;\r\n     this.workAge = workAge;\r\n     this.level=level;\r\n     }\r\n     public String getLevel() {\r\n	      return level;\r\n	  }\r\n\r\n	  public void setLevel(String level) {\r\n	      this.level = level;\r\n     }\r\n \r\npublic double add(String level){                              //  判断职位\r\n     if(level == \"0\"){\r\n         wage = wage*1.1;\r\n     }\r\n     else{\r\n         wage = wage*1.2;\r\n     }\r\n     return wage;\r\n }\r\n public double getWage() {\r\n     return wage;\r\n }\r\n public void setWage(double wage) {\r\n     this.wage = wage;\r\n }\r\n}\r\npublic class ExcellentEmployee extends Employee {\r\n	private String level = \"\";                                  //1为普通员工，0为优秀员工\r\n	  \r\n	  public ExcellentEmployee(String name, String address, String ID, double wage, int workAge, String level){\r\n	      super(name, address, ID, wage, workAge,level);                //调用父类的构造方法\r\n	      this.level = level;\r\n	  }\r\n	  public String getLevel() {\r\n	      return level;\r\n	  }\r\n\r\n	  public void setLevel(String level) {\r\n	      this.level = level;\r\n	  }\r\n\r\n}\r\npublic class Test {\r\n    public static void main(String[] args) {\r\n        Employee normal = new Employee(\"张三\", \"南京\", \"1\", 2000, 1, \"0\");\r\n        ExcellentEmployee excellent = new ExcellentEmployee(\"李四\", \"北京\", \"2\", 5000, 5, \"1\");\r\n        normal.add(normal.getLevel());\r\n        excellent.add(excellent.getLevel());      \r\n        System.out.println(normal.name+\"是普通员工\"+\"家庭地址是\"+normal.address+\"工资\"+normal.getWage());\r\n        System.out.println(excellent.name+\"是优秀员工\"+\"家庭地址是\"+excellent.address+\"工资\"+excellent.getWage());\r\n    }\r\n}\r\n\r\n\r\n					   ',50,45,'					   ',0,'','',NULL),
 (5448,45,583,133,'import java.util.*;\r\n\r\ninterface Shape{\r\n    float getArea();\r\n    float getCircumference();\r\n}\r\n\r\nclass Circle implements Shape{\r\n    private final float PI=3.14f;\r\n    private float radius;\r\n    Circle(float r){\r\n        radius=r;\r\n    }\r\n    public float getArea(){                     //Circle类求面积\r\n        return PI*radius*radius;\r\n    }\r\n    public float getCircumference(){            //Circle类求周长\r\n        return 2*PI*radius;\r\n    }\r\n}\r\n\r\nclass Rectangle implements Shape{ \r\n    private float height;\r\n    private float width;\r\n    Rectangle(float width,float height){\r\n        this.width=width;\r\n        this.height=height;\r\n    }\r\n    public float getArea(){                     //Rectangle类求面积\r\n        return width*height;\r\n    }\r\n    public float getCircumference(){            //Rectangle类求周长\r\n        return 2*(width+height);\r\n    }\r\n}\r\n\r\nclass ShapeInterface {\r\n    public static void main(String[] args) {\r\n        Scanner example=new Scanner(System.in);\r\n        Shape shape=null;\r\n        int y;\r\n        do{\r\n            y=0;\r\n            System.out.println(\"请选择输入的图形：1、圆形，2、矩形：\");\r\n            int x=example.nextInt();             //圆形\r\n            if(x==1){\r\n                System.out.println(\"请输入圆的半径：\");\r\n                float radius=example.nextFloat();\r\n                shape=new Circle(radius);\r\n            }                                    //矩形\r\n            else if(x==2){\r\n                System.out.println(\"请输入矩形的长和宽，以空格相隔：\");\r\n                float width=example.nextFloat();\r\n                float height=example.nextFloat();\r\n                shape=new Rectangle(width,height);      \r\n            }\r\n            else{\r\n                y=1;\r\n                System.out.println(\"输入格式有误：\");\r\n            }\r\n        }\r\n        while(y==1);\r\n        System.out.println(\"面积：\"+shape.getArea()+\'/t\'+\"周长：\"+shape.getCircumference());\r\n    }\r\n\r\n}\r\n\r\n					   ',50,40,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5449,46,609,132,'			public  class person {\r\n	public String name;\r\n	public String address;\r\n	public String getname(){\r\n		return name;\r\n	}\r\n	public void setname(String name){\r\n		this.name=name;\r\n	}\r\n	public String getaddress(){\r\n		return address;\r\n	}\r\n	public void setaddress(String address){\r\n		this.address=address;\r\n	}\r\n	\r\n	public  int add();\r\n	\r\n\r\n}\r\n\r\npublic class employee extends person{\r\n	protected int num;\r\n	public String id;\r\n	public double wage;\r\n	public int age;\r\n	public double getwage(){\r\n		return wage;\r\n	}\r\n	public void setwage(double wage){\r\n		this.wage=wage;\r\n	}\r\n	public employee(){\r\n}\r\n    public employee(int num){\r\n    	this.num=num;\r\n    }\r\n    public int add(){\r\n    	num*=(1+0.1);\r\n    	return num;\r\n    }\r\n}\r\n\r\npublic class excellentemployee extends employee{\r\n	public String level;\r\n	public String getlevel(){\r\n		return level;\r\n	}\r\n	public void setlevel(String level){\r\n		this.level=level;\r\n	}\r\n	public excellentemployee(int num){\r\n		super.num=num;\r\n		\r\n	}\r\n	public int add(){\r\n		num*=(1+0.2);\r\n		return num;\r\n	}	\r\n}\r\npublic class test{\r\n	public static void main(String []args){\r\n		employee p =new employee();\r\n		p.setname(\"da\");\r\n		p.setaddress(\"da\");\r\n		\r\n		excellentemployee o=new excellentemployee();\r\n		\r\n		\r\n	}\r\n}\r\n\r\n    		   ',50,30,'				你的代码为什么与张凡的一样？	   ',99,'99','张凡',NULL),
 (5450,46,609,133,'		abstract class shape {\r\n	public abstract double getarea();\r\n	\r\n	public abstract double getperimeter();\r\n	\r\n	class circle extends shape{\r\n		private double radius;\r\n		public circle(double radius)\r\n		{\r\n			this.radius=radius;\r\n		}\r\n		public double getarea(){\r\n			return Math.PI*radius*radius;\r\n		}\r\n		public double getperimeter(){\r\n			return 2*Math.PI*radius;\r\n		}\r\n	}\r\n	class rectangle extends shape{\r\n		private double width;\r\n		private double height;\r\n		public rectangle (double width,double height){\r\n			this.width=width;\r\n			this.height=height;\r\n		}\r\n		public double getarea(){\r\n			return width*height;\r\n		}\r\n		public double getperimeter(){\r\n			return(width+height)*2;\r\n			\r\n		}\r\n		public class shapetest{\r\n			public static void main(String args[]){\r\n				circle circle=new circle(4);\r\n				System.out.println(\"面积\"+circle.getarea()+\"周长\"+circle.getperimeter());\r\n				rectangle rectangle=new rectangle(4,5);\r\n				System.out.println(\"面积\"+rectangle.getarea()+\"周长\"+rectangle.getperimeter());\r\n			}\r\n		}\r\n	}\r\n\r\n}\r\n			   ',50,35,'					   你的代码为什么与张凡的一样？	',98,'98','张凡',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5451,45,580,132,'class Person{\r\npublic String name;\r\npublic String address;\r\npublic Person(String name,String address){\r\nthis.name=name;\r\nthis.address=address;}\r\n}\r\nclass Employee extends Person{\r\npublic String ID;\r\npublic double wage;\r\npublic int age;\r\npublic Employee(String name,String address,String ID,double wage,int age){\r\nsuper(name,address);\r\nthis.ID=ID;\r\nthis.wage=wage;\r\nthis.age=age;\r\n}\r\n}\r\nclass ExcellentEmployee extends Employee{\r\npublic String level;\r\npublic ExcellentEmployee(String name,String address,String ID,double wage,int age,String level){\r\nsuper(name,address,ID,wage,age);\r\nthis.level=level;\r\n}\r\npublic double add(String level){\r\nif(level==\"B\"){wage=1.1*wage;}\r\nif(level==\"A\"){wage=1.2*wage;}\r\nreturn wage;\r\n}\r\n}\r\npublic class Test{\r\n public static void main(String[] args){\r\nExcellentEmployee normal=new ExcellentEmployee(\"甲\",\"苏州\",\"A01\",5000,2,\"B\");\r\nExcellentEmployee excellent=new ExcellentEmployee(\"乙\",\"苏州\",\"A02\",6000,2,\"A\");\r\nSystem.out.println(\"普通员工姓名：\"+normal.name+\"  地址：\"+normal.address+\"  工号：\"+normal.ID+\"  工资：\"+normal.add(normal.level)+\"  工龄：\"+normal.age);\r\nSystem.out.println(\"优秀员工姓名：\"+excellent.name+\"  地址：\"+excellent.address+\"  工号：\"+excellent.ID+\"  工资：\"+excellent.add(excellent.level)+\"  工龄：\"+excellent.age);\r\n}\r\n}',50,45,'					   ',0,'','',NULL),
 (5452,45,580,133,'interface Shape{\r\npublic abstract double area();\r\npublic abstract double length();\r\n}\r\nclass Circle implements Shape{\r\ndouble r;\r\nCircle(double r)\r\n{this.r=r;}\r\npublic double area()\r\n{return (3.14*r*r);}\r\npublic double length()\r\n{return (2*3.14*r);\r\n}\r\n}\r\nclass Rectangle implements Shape{\r\ndouble x,y;\r\nRectangle(double x,double y)\r\n{\r\n this.x=x;\r\n this.y=y;\r\n}\r\npublic double area()\r\n{return (x*y);}\r\npublic double length()\r\n{return ((x+y)*2);}\r\n}\r\npublic class shape{\r\n public static void main(String[] args){\r\nCircle circle;\r\nRectangle rectangle;\r\ncircle=new Circle(10);\r\nSystem.out.println(\"圆的面积：\"+circle.area()+\"  圆的周长：\"+circle.length());\r\nrectangle=new Rectangle(8,80);\r\nSystem.out.println(\"长方形的面积：\"+rectangle.area()+\"  长方形的周长：\"+rectangle.length());\r\n}\r\n}\r\n					   ',50,40,'					   ',82,'82','韦慧卿',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5453,46,605,132,'	public class Person {\r\n    private String name;\r\n    private String address;\r\n    public Person(String name, String address){\r\n        this.name = name;\r\n        this.address = address;\r\n    }\r\n}\r\n    public class Employee extends Person {\r\n        private String ID;\r\n        private double wage;\r\n        private int workAge;\r\n    public Employee(String name, String address, String ID, double wage, int workAge){\r\n        super(name, address);  \r\n        this.ID = ID;\r\n        this.wage = wage;\r\n        this.workAge = workAge;\r\n        }\r\n    \r\n    public double add(String position){\r\n        if(position == \"0\"){\r\n            wage = wage*1.2;\r\n        }\r\n        else{\r\n            wage = wage*1.1;\r\n        }\r\n        return wage;\r\n    }\r\n    public double getWage() {\r\n        return wage;\r\n    }\r\n    public void setWage(double wage) {\r\n        this.wage = wage;\r\n    }\r\n}\r\npublic class Manager extends Employee{\r\n  private String level = \"\"; \r\n  public Manager(String name, String address, String ID, double wage, int workAge, String level){\r\n      super(name, address, ID, wage, workAge);\r\n      this.level = level;\r\n  }\r\n  public String getLevel() {\r\n      return leve2;\r\n  }\r\n\r\n  public void setLevel(String leve2) {\r\n      this.leve2 = leve2;\r\n  }\r\n}\r\npublic class Test {\r\n    public static void main(String[] args) \r\n        Manager normal = new Manager(\"老王\", \"江苏\", \"098\", 3570, 1, \"4\");\r\n        Manager manager = new Manager(\"老财\", \"海南\", \"082\", 10570, 0, \"2\");\r\n        normal.add(normal.getLevel());\r\n        manager.add(manager.getLevel());   \r\n        System.out.println(\"normal wage is:\"+normal.getWage());\r\n        System.out.println(\"manager wage is:\"+manager.getWage());\r\n    }\r\n}\r\n		   ',50,46,'					   ',85,'85','赵旭',NULL),
 (5454,46,605,133,'	interface Shape{\r\n    float getArea();                            \r\n    float getCircumference();                   \r\n}\r\nclass Circle implements Shape{\r\n    private final float PI=3.14f;\r\n    private float radius;\r\n\r\n    Circle(){}                                  \r\n    Circle(float r){\r\n        radius=r;\r\n    }\r\n    public float getArea(){                     \r\n        return PI*radius*radius;\r\n    }\r\n    public float getCircumference(){            \r\n        return 2*PI*radius;\r\n    }\r\n}\r\nclass Rectangle implements Shape{\r\n    private float width;\r\n    private float height;\r\n\r\n    Rectangle(){}                               \r\n    Rectangle(float width,float height){\r\n        this.width=width;\r\n        this.height=height;\r\n    }\r\n    public float getArea(){                     \r\n        return width*height;\r\n    }\r\n    public float getCircumference(){            \r\n        return 2*(width+height);\r\n    }\r\n}\r\nclass Square extends Rectangle{\r\n    Square(){}                                  \r\n    Square(float length){\r\n        super(length,length);\r\n    }\r\n\r\n}\r\nclass ShapeInterface {\r\n\r\n    public static void main(String[] args) {    \r\n    	  Scanner sc=new Scanner(System.in);\r\n    	  \r\n        Shape shape=null;\r\n        int y;\r\n        do{\r\n            y=0;\r\n            System.out.println(\"选择图形：1、圆，2、矩形，3、正方形：\");\r\n            if(y==1){\r\n                System.out.println(\"输入圆的半径：\");            \r\n                shape= null;\r\n            }\r\n            else if(y==2){\r\n                System.out.println(\"输入矩形的长和宽，以空格相隔：\");\r\n                float width=sc.nextFloat();\r\n                float height=sc.nextFloat();\r\n\r\n                shape=new Rectangle(width,height);      \r\n            }           \r\n            else if(y==3){\r\n                System.out.println(\"输入正方形的边长：\");\r\n                float length=sc.nextFloat();\r\n\r\n                shape=new Square(length);\r\n            }\r\n            else{\r\n                y=1;\r\n                System.out.println(\"输入不正确，重新输入：\");\r\n            }\r\n        }\r\n        while(y==1);\r\n\r\n        System.out.println(\"面积：\"+shape.getArea()+\"\\t\\t周长：\"+shape.getCircumference());\r\n\r\n        sc.close();\r\n    }\r\n\r\n}\r\n				   ',50,45,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5455,46,607,132,'(1)\r\n package com.fs.test;\r\n public class Person\r\n { \r\n private String name;\r\n private String address; //定义构造方法 \r\n public Person(String name, String address)\r\n{ this.name = name; this.address = address; } \r\n}\r\n(2)\r\n package com.fs.test; //继承Person类 \r\npublic class Employee extends Person \r\n{\r\n private String ID;\r\n private double wage;\r\n private int workAge;\r\n public Employee(String name, String address, String ID, double wage, int workAge)\r\n{ \r\nsuper(name, address); //调用父类的构造方法 \r\nthis.ID = ID;\r\n this.wage = wage;\r\n this.workAge = workAge;\r\n } \r\npublic double add(String position)\r\n{\r\n if(position == \"0\")\r\n{wage = wage*1.2;}\r\n else\r\n{wage = wage*1.1;}\r\n return wage; \r\n} \r\npublic double getWage() { return wage;\r\n}\r\n public void setWage(double wage) { this.wage = wage; } \r\n}\r\n			   ',50,30,'					   你的代码为什么 与李浩的一样\r\n					   ',100,'100','李浩',NULL),
 (5456,46,607,133,'	public abstract class Shape {\r\n    public abstract double getArea();\r\n   \r\n    public abstract double getLength();\r\n}\r\n   \r\npublic class Circle extends Shape {\r\n    private double dRadius;\r\n   \r\n    public Circle(double r) {\r\n        this.dRadius = r;\r\n    }\r\n   \r\n    @Override\r\n    public double getArea() {\r\n   \r\n        return dRadius * Math.PI * Math.PI;\r\n    }\r\n   \r\n    @Override\r\n    public double getLength() {\r\n        return 2 * dRadius * Math.PI;\r\n    }\r\n   \r\n    public void printString() {\r\n        System.out.println(\"我是圆形！我的半径是:\" + this.dRadius);\r\n    }\r\n   \r\n    public void printArea() {\r\n        System.out.println(\"圆的面积:\" + getArea());\r\n    }\r\n   \r\n    public void printLength() {\r\n        System.out.println(\"圆的周长:\" + getLength());\r\n    }\r\n}\r\npublic class Rectangle extends Shape {\r\n    private double length;\r\n    private double width;\r\n    public Circle(double l,double w,) {\r\n        this.length= l;\r\n        this.width= w;\r\n    }\r\n   \r\n    @Override\r\n    public double getArea() {\r\n        return length * width;\r\n    }\r\n   \r\n    @Override\r\n    public double getLength() {\r\n        return 2 *（length + width）;\r\n    }\r\n   \r\n    public void printString() {\r\n        System.out.println(\"我是长方形！我的长是:\" + this.length+\",我的宽是:\"+width);\r\n    }\r\n   \r\n    public void printArea() {\r\n        System.out.println(\"长方形的面积:\" + getArea());\r\n    }\r\n   \r\n    public void printLength() {\r\n        System.out.println(\"长方形的周长:\" + getLength());\r\n    }\r\n}\r\npublic class Test{\r\n    public static void main(String[] args) {\r\n        Circle circle = new Circle(2d);\r\n        circle.printString();\r\n        circle.printArea();\r\n        circle.printLength();\r\n        Rectangle rectangle = new Rectangle (2d,3d);\r\n                rectangle.printString();\r\n                rectangle.printArea();\r\n                rectangle.printLength();\r\n    }\r\n}				   ',50,30,'					   你的代码为什么 与李浩的一样\r\n					   ',89,'95,89','李浩,侯美伊',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5457,46,590,132,'public class Person {\r\n	private String name;\r\n	private String address;\r\n	public Person (String name,String address){\r\n		this.name=name;\r\n		this.address=address;\r\n	}\r\n	}\r\nclass Employee extends Person {\r\n	private String ID;\r\n	private double wage;\r\n	private int workage;\r\n	public Employee(String name,String address,String ID,double wage,int workage){\r\n		super (name,address);\r\n		this.ID=ID;\r\n		this.wage=wage;\r\n		this.workage=workage;\r\n		}\r\n\r\n	public double add(String level){\r\n		if(level==\"1\"){\r\n			wage=wage*0.1;\r\n		}\r\n		else{\r\n			wage=wage*0.2;}\r\n		return wage;\r\n	}\r\n	public double getwage(){\r\n		return wage;}\r\n	\r\n	public void setwage (double wage){\r\n		this.wage=wage;\r\n	}\r\n\r\n	 public class ExcellentEmpioyee extends Employee{\r\n		 private String level=\"\";\r\n		 public ExcellentEmpioyee(String name,String address,String ID,double wage,int workage,String level){\r\n			 super (name,address,ID,wage,workage);\r\n			 this.level=level;\r\n			 \r\n			 public String getlevel(){\r\n				 return level;\r\n			 }\r\n			 public void setlevel(String level)\r\n			 { this.level=level;}\r\n			 \r\n	public class test{\r\n		public static void main (String[] args){\r\n		level excellent =new level (\"jan\",\"南通\",\"001\",6000,1,\"1\");\r\n		level   = new level (\"ann\",\"南通\",\"002\",4500,2,\"0\");\r\n		\r\n}\r\n}\r\n }\r\n }\r\n}',50,45,'					   ',0,'','',NULL),
 (5458,46,590,133,'			public interface Shape {\r\n	float getArea ();\r\n	float getcircumference();\r\n}\r\n  \r\nclass circle implements Shape{\r\n private final float PI=3.14f;\r\n private float radius;\r\n circle(){}\r\n circle (float r){\r\n	 radius=r;\r\n }\r\n public float getArea(){\r\n	 return PI*radius*radius;\r\n };\r\n public float getcircumference(){return PI*2*radius;};\r\n class Rectangle implements Shape{\r\n	 private float width;\r\n	 private float height;\r\n	 Rectangle(){}\r\n	 Rectangle (float width,float height){\r\n		 this.width=width;\r\n		 this.height=height;}\r\n	 \r\n	 public float getArea(){\r\n		 return width*height;\r\n	 }\r\n	 \r\n	 public float getcircumference(){\r\n		 return 2*(width+height);\r\n		 }\r\n	 \r\n	 }\r\n	 \r\n	 \r\n }\r\n\r\n		   ',50,45,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5459,46,598,132,'					   ',50,0,'					   ',0,'','',NULL),
 (5460,46,598,133,'	 package xsh;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class xsh {\r\n	interface Shape{float area();\r\n	float cirfer();\r\n	}\r\n	class Circle implements Shape{\r\n		private final float pi=3.14f;\r\n		private float rad;\r\n		\r\n		Circle(){}\r\n		Circle(float r){\r\n		rad=r;	\r\n		}\r\n		public float area(){return pi*rad*rad;}\r\n		public float cirfer(){\r\n			return 2*pi*rad;\r\n		}\r\n	}\r\nclass Rectangle implements Shape{\r\n	private float wide;\r\n	private float height;\r\n	Retangle(){}\r\n	Retangle(float wide,float height){\r\n		this.wide=wide;\r\n		this.height=height;\r\n	}\r\n	public float area(){\r\n		return wide*height;\r\n	}\r\n	public cirfer(){\r\n		return 2*(wide+height);\r\n	}\r\n}\r\nclass ShapeInterface{\r\n	public static void main(String[]args){\r\n		Scanner sc=new Scanner (System.in);\r\n		Shape shape=null;\r\n		int y;\r\n		do{y=0;\r\n		System.out.printh(\"请选择输入图形：1.圆形 2.长方形\");\r\n		int x=sc.nextInt();\r\n		if(x==1){\r\n			System.out.println(\"请输入圆形的半径\");\r\n			float rad=sc.nextFloat();\r\n			shape=newCircle(rad);\r\n		}\r\n		else if (x==2){\r\n			System.out.println(\"请输入矩形的长和宽\");\r\n			float wide =sc.nextFloat();\r\n			float heignt=sc.nextFloat();\r\n			shape=new Rectangle (wide,height);\r\n			\r\n		}\r\n		}}\r\n}\r\n}	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         			   ',50,50,'					   ',0,'','',NULL),
 (5461,45,578,132,'Class Person{\r\npublic String name;\r\npublic String address;\r\npublic Person(String name,String address){\r\nthis.name=name;\r\nthis.address=address;}\r\n}\r\nClass Employee extends Person{\r\npublic String ID;\r\npublic double wage;\r\npublic int workyear;\r\npublic Employee(String name,String address,String ID,double wage,int workyear){\r\nsuper(name,address,ID)\r\nthis.wage=wage;\r\nthis.workyear=workyear;}\r\n}\r\npublic ExcellentEmployee extends Person{\r\npublic String level;\r\npublic ExcellentEmployee(String name,String address,String level){\r\nsuper(name,address)\r\nthis.level=level;}\r\npublic double add(String level){\r\nif(level==\"no\"){wage=wage*1.1;}\r\nif(level==\"yes\"){wage=wage*1.2;}\r\nreturn wage;}\r\n}\r\npublic class Test{\r\npublic static void main(String[] args){\r\nExcellentEmployee normal=new ExcellentEmployee(\"小明\",\"北京\",\"no\");\r\nExcellentEmployee excellent=new ExcellentEmployee(\"小红\",\"北京\",\"yes\");\r\nSystem.out.println(\"普通员工：\"+normal.name+normal.address+normal.add(normal.level);\r\nSystem.out.println(\"优秀员工：\"+excellent.name+excellent.address+excellent.add(excellent.level);}\r\n}\r\n\r\n					   \r\n					   ',50,45,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5462,45,578,133,'interface Shape\r\n{\r\npublic abstruct double area();\r\npublic abstruct double length();\r\n}\r\nclass Circle implements Shape\r\n{\r\ndouble r;\r\nCircle(double r)\r\n{this.r=r;}\r\npublic double area()\r\n{return(3.14*r*r);}\r\npublic double length()\r\n{return(2*3.14*r);}\r\n}\r\nclass Rectangle implements Shape\r\n{\r\ndouble x,y;\r\nRectangle(double x,double y)\r\n{this.x=x;this.y=y}\r\npublic double area()\r\n{return(x*y);}\r\npublic double length()\r\n{return(2*(x+y);)}\r\n}\r\npublic class Shape(){\r\npublic static void main(String[] args){\r\nCircle circle=new circle(1);\r\nSystem.out.println(\"圆的面积\"+circle.area());\r\nSystem.out.println(\"圆的周长\"+circle.length());\r\nCircle rectangle=new rectangle(1,2);\r\nSystem.out.println(\"长方形的面积\"+rectangle.area());\r\nSystem.out.println(\"长方形的周长\"+rectangle.length());}\r\n}\r\n\r\n\r\n					   \r\n					   ',50,40,'					   \r\n					   ',82,'82,81,86,82','周璇,徐昊,陈嘉懿,翁佳琦',NULL),
 (5463,46,608,132,'public abstract class Person{\r\npublic abstract int add();}\r\npublic class Person{\r\npublic class Person{lic String name;\r\npublic String address;\r\npublic String getName(){\r\nreturn name;\r\n}\r\npublic void setName(String name){\r\nthis.name=name;\r\n}\r\npublic String getAddress(){\r\nreturn address;\r\n}\r\npublic void setAdress(String address){\r\nthis.address=address;\r\n}\r\n}\r\npublic class Employee extends Person{\r\nprotected int num;\r\npublic Employee(){}\r\npublic Employee(int num){\r\nthis.num=num;}\r\npublic int add(){\r\nnum*=(1+0.1);\r\nreturn num;}\r\npublic String ID;\r\npublic double wage;\r\npublic int work;\r\npublic String getID(){\r\nreturn ID;\r\n}\r\npublic void setID(String ID){\r\nthis.ID=ID;\r\n}\r\npublic double getWage(){\r\nreturn wage;\r\n}\r\npublic void setWage(double wage){\r\nthis.wage=wage;\r\n}\r\npublic int getWork(){\r\nreturn work;\r\n}\r\npublic void setWork(int work){\r\nthis.work=work;\r\n}\r\n}\r\npublic classExcellentEmployee{\r\npublic ExcellentEmployee(int num){\r\nsuper.num=num;}\r\npublic int add(){\r\nnum*=(1+0.2);\r\nreturn num;}\r\npublic String level;\r\npublic String getLevel(){\r\nreturn level;\r\n}	\r\npublic void setLevel(String level){\r\nthis.level=level;\r\n}\r\n}\r\npublic class test{\r\npublic static void main(String[] args){\r\nPerson employee=new Employee(10);\r\nPerson ExcellentEmployee=new ExcellentEmployee(10);\r\nSystem.out.println(\"普通员工工资+\"=employee.add());\r\nSystem.out.println(\"优秀员工工资+\"=cxcellentemployee.add());}\r\nSystem.out.println(\"name+address+ID+wage+work+level\");\r\n}\r\n					   \r\n					   \r\n					   ',50,35,'					   public abstract class Person{\r\npublic abstract int add();}\r\npublic class Person{\r\npublic class Person{lic String name;这是什么意思\r\n',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5464,46,608,133,'abstract class Shape{\r\npublic abstract double getArea();\r\npublic abstract	double get Perimeter();\r\n}\r\nclass Circle extends Shape{\r\nprivate double radius;\r\npublic Circle(double radius){\r\nthis.radius=radius;}\r\npublic double getArea(){\r\nreturn Math.PI*radius*radius;}\r\npublic double getPerimeter(){\r\nreturn 2*Math.PI*radius;}\r\n}\r\nclass Rectangle extends Shape{\r\nprivate double width;\r\nprivate double height;\r\npublic Rentangle (double width,double height){\r\nthis.width=width;\r\nthis.height=height;\r\n}\r\npublic double getArea(){return width*height;}\r\npublic double getperimeter(){\r\nreturn(width+height)*2}\r\n}\r\npublic class ShapeTest{public static void main(String[]args){\r\nCircle =new circle(5);\r\nSystem.out.println(\"circle.getarea()+\",circle.get.perimeter());		   \r\n					   \r\n					   \r\n					   ',50,40,'					   class Circle extends Shape{\r\n不是extends 是implments',0,'','',NULL),
 (5465,46,611,132,'public class Person{\r\n    private String name;\r\n    private String address;\r\n    public Person(String name, String address){\r\n           this.name=name;\r\n           this.address=address;\r\n       }\r\n}\r\n      public class Employee extends Person{\r\n         private String ID;\r\n         private double wage;\r\n         private int workAge;\r\n      public Employee(String name,String address,String ID,double wage, int workAge){\r\n                    super(name,address);\r\n                    this.ID=ID;\r\n                    this.wage=wage;\r\n		    this.workAge=workAge;}\r\n       public double add(String position){\r\n                 if(position==\"0\"){\r\n               wage=wage*1.2;}\r\n               else{\r\n                      wage=wage*1.1;\r\n                      }\r\n                 return wage;\r\n                  }\r\n       public void setWage(double wage){\r\n            this.wage=wage;\r\n                }\r\n}			  \r\n     public class ExcellentEmployee extends Employee{\r\n                     private String level=\"\";\r\n       public ExcellentEmployee(String name,String address,String ID,double wage, int workAge,String level){\r\n                  super(name,address,ID,wage,workAge);\r\n                     this.level=level;\r\n                    }\r\n                          public String getLevel(){\r\n                               return level;\r\n                                 }\r\n                   public void setLevel(String level){\r\n                     this.level=level;\r\n      }\r\n}\r\n\r\n\r\n\r\npublic class Test{\r\npublic static void main(String[] args)\r\n{\r\n    ExcellentEmployee normal=new ExcellentEmployee(\"张三\",\"北京\",\"001\",3500,2,\"1\");\r\n    ExcellentEmployee excellentEmployee=new ExcellentEmployee(\"李四\",\"上海\",\"002\",10000,7,\"0\");            \r\n             normal.add(normal.getLevel());\r\n             excellentEmployee.add(excellentEmployee.getLevel());  \r\n             System.out.println(\"normal wage is:\"+normal.getWage());\r\n             System.out.println(\"excellentEmployee wage is:\"+excellentEmployee.getWage());\r\n              }\r\n} ',50,45,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5466,46,611,133,'public abstract class Shape{\r\n    public abstract double getArea();\r\n    public abstract double getLength;\r\n }\r\npublic class Circle extends Shape{\r\n          private double dRadius;\r\n          public Circle(double r){\r\n          this.dRadius=r;\r\n         }\r\n   public double getArea(){\r\n           return dRadius *Math.PI*Math.PI;\r\n    }\r\npublic double getLength(){\r\n     return 2*dRadius*Math.PI;\r\n       }\r\npublic void printString(){\r\n   System.out.println(我是圆形！我的半径是：\"+this.dRadius);\r\n}\r\npublic void printArea(){\r\n   System.out.println(\"圆的面积:\"+getArea());\r\n}\r\npublic void printLength(){\r\n   System.out.println(\"圆的周长：\"+getLength());\r\n}\r\n}\r\npublic class Rectangle extends Shape{\r\n      private double length;\r\n      private double width;\r\n      public Circle(double l,double w){\r\n      this.length=l;\r\n      this.width=w;\r\n      }\r\npublic double getLength(){\r\n    return 2*(length+width);\r\n   }\r\npublic void printString(){\r\n  System.out.println(\"我是长方形！我的长是：\"+this.length+\",我的宽是：\"+width);\r\n}\r\npublic void printArea(){\r\n System.out.println(\"长方形的面积：\"+getArea());\r\n}\r\npublic void printLength(){\r\nSystem.out.println(\"长方形的周长：\"+getLength());\r\n   }\r\n}\r\n     \r\n      \r\n 			   ',50,40,'					public abstract class Shap   应该是接口不是抽象类',0,'','',NULL),
 (5467,46,589,132,'				\r\npublic class person {\r\n	String name;\r\n	String address;\r\n	public Object add() {\r\n		\r\n		return null;\r\n	}\r\n	public String name() {\r\n	\r\n		return null;\r\n	}\r\n}\r\nclass Employee extends person {\r\nprotected \r\nint age;\r\nString ID;\r\ndouble wage;\r\npublic Employee(){}\r\npublic Employee(int age){\r\nthis.age=age;\r\n}\r\npublic Object add(){\r\nage*=(1+0.1);\r\nreturn age;\r\n}\r\n}\r\npublic class ExcellentEmployee extends Employee{\r\nprotected String level;\r\npublic ExcellentEmployee(int age){\r\nsuper.age=age;\r\n}\r\npublic Object add( ){\r\nage*=(1+0.2);\r\nreturn age;\r\n}\r\n}\r\npublic class test {\r\n;\r\n\r\npublic static void main(String[] args) {\r\nperson excellentEmployee = new ExcellentEmployee(20);\r\n\r\nSystem.out.println(\"普通员工基本信息=\"+\"\\n\"+\"姓名：\"+person.name+\"\\n\"+\"地址：\"+\"person.address\"+\"工号\"+\"Employee.ID\"+\"工资=\"+\"Employee.add()\");\r\n\r\nSystem.out.println(\"优秀员工基本信息=\"+\"\\n\"+\"姓名：\"+person.name+\"\\n\"+\"地址：\"+\"person.address\"+\"工号\"+\"ExcellentEmployee.ID\"+\"工资=\"+\"Employee.add()\");\r\n}\r\n}\r\n	   \r\n					   ',50,45,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5468,46,589,133,'			public abstract class Shape {\r\n    public abstract double getArea();\r\n\r\n    public abstract double getLength();\r\n}\r\n\r\n public class Circle extends Shape {\r\n    private double dRadius;\r\n\r\n    public Circle(double r) {\r\n        this.dRadius = r;\r\n    }\r\n\r\n   \r\n    public double getArea() {\r\n\r\n        return dRadius * Math.PI * Math.PI;\r\n    }\r\n\r\n    \r\n    public double getLength() {\r\n        return 2 * dRadius * Math.PI;\r\n    }\r\n\r\n    public void printString() {\r\n        System.out.println(\"圆形,半径为:\" + this.dRadius);\r\n    }\r\n\r\n    public void printArea() {\r\n        System.out.println(\"圆的面积:\" + getArea());\r\n    }\r\n\r\n    public void printLength() {\r\n        System.out.println(\"圆的周长:\" + getLength());\r\n    }\r\n}\r\npublic class Rectangle extends Shape {\r\n    private double length;\r\n    private double width;\r\n    public void Circle(double l,double w) {\r\n        this.length= l;\r\n        this.width= w;\r\n    }\r\n\r\n    public double getArea() {\r\n        return length * width;\r\n    }\r\n\r\n    \r\n    public double getLength() {\r\n        return 2 *length +2* width;\r\n    }\r\n\r\n    public void printString() {\r\n        System.out.println(\"长方形,长为:\" + this.length+\",宽为:\"+width);\r\n    }\r\n\r\n    public void printArea() {\r\n        System.out.println(\"长方形的面积:\" + getArea());\r\n    }\r\n\r\n    public void printLength() {\r\n        System.out.println(\"长方形的周长:\" + getLength());\r\n    }\r\n\r\n	public void printString(double d) {\r\n		\r\n		\r\n	}\r\n}\r\n class test{\r\n    public static void main(String[] args) {\r\n        Circle circle = new Circle(3d);\r\n        circle.printString();\r\n        circle.printArea();\r\n        circle.printLength();\r\n     \r\n        Rectangle rectangle = new Rectangle(9d,3d);\r\n        rectangle.printString();\r\n                rectangle.printArea();\r\n                rectangle.printLength();\r\n    }\r\n}\r\n\r\n		   \r\n					   ',50,40,'					   这个应该是先定义接口，然后实现它\r\n你的代码为什么与李浩,张陈鹏两人相似\r\n					   ',89,'91,89','李浩,张陈鹏',NULL),
 (5469,45,584,132,'	interface Shape {\r\n	public abstract double getarea();\r\n	public abstract double getperimeter();\r\n}\r\n\r\nclass Circle implements Shape{\r\n	double r;\r\n    public Circle(double r){this.r=r;}\r\n	public double getarea(){return(3.14*r*r);}\r\n	public double getperimeter(){return(3.14*2*r);}\r\n}\r\n\r\nclass Rectangle implements Shape{\r\n	double length,width;\r\n	public Rectangle(double length,double width){\r\n		this.length=length;this.width=width;}\r\n	public double getarea(){return(length*width);}\r\n	public double getperimeter(){return(2*(length+width));}\r\n\r\n\r\npublic static void main(String[] args){\r\n	Circle c=new Circle(1);\r\n	System.out.println(\"圆的面积=\"+c.getarea()+\"圆的周长=\"+c.getperimeter());\r\n	Rectangle t=new Rectangle(1,2);\r\n	System.out.println(\"长方形的面积=\"+t.getarea()+\"长方形的周长=\"+t.getperimeter());\r\n}\r\n				   ',50,0,'					   这是什么程序？',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5470,45,584,133,'				interface Shape {\r\n	public abstract double getarea();\r\n	public abstract double getperimeter();\r\n}\r\n\r\nclass Circle implements Shape{\r\n	double r;\r\n    public Circle(double r){this.r=r;}\r\n	public double getarea(){return(3.14*r*r);}\r\n	public double getperimeter(){return(3.14*2*r);}\r\n}\r\n\r\nclass Rectangle implements Shape{\r\n	double length,width;\r\n	public Rectangle(double length,double width){\r\n		this.length=length;this.width=width;}\r\n	public double getarea(){return(length*width);}\r\n	public double getperimeter(){return(2*(length+width));}\r\n\r\n\r\npublic static void main(String[] args){\r\n	Circle c=new Circle(1);\r\n	System.out.println(\"圆的面积=\"+c.getarea()+\"圆的周长=\"+c.getperimeter());\r\n	Rectangle t=new Rectangle(1,2);\r\n	System.out.println(\"长方形的面积=\"+t.getarea()+\"长方形的周长=\"+t.getperimeter());\r\n}\r\n	   ',50,50,'					   ',0,'','',NULL),
 (5471,45,566,132,'class Person {\r\n   String name;\r\n   String address;\r\n   public Person(String n,String ad){\r\n      name=n;\r\n      address=ad;\r\n      }\r\n}\r\n\r\nclass Employee extends Person {\r\n   String ID;\r\n   double wage;\r\n   int workage;\r\n\r\n   public Employe(String n,String ad,String I,double w,int age){\r\n      super(n,ad);\r\n      ID=I;\r\n      wage=w;\r\n      workage=age;\r\n      }\r\n}\r\nclass ExcellentEmployee extends Employee {\r\n      String level;\r\n\r\n   public ExcellentEmployee(String n,String ad,String I,double w,int age,String l){\r\n      super(n,ad,I,w,age,l);\r\n      Level=l;\r\n      }\r\n   public double add(String l){\r\n      if(l==\"优秀员工\"）\r\n      {wage=wage*1.2;}\r\n      else if (l==\"普通员工\")\r\n      {wage=wage*1.1;}\r\n      return wage;\r\n      }\r\n   void display(String n,String ad,String I,double w,int age,String l){\r\n      System.out.println(\"姓名:\"+n+\"地址:\"+ad+\"ID:\"+I+\"工资:\"+w+\"工龄:\"+age+\"级别:\"+l);\r\n      }\r\n}\r\n\r\npublic class TEST{\r\n public static void main(String[] args){\r\n  ExExcellentEmployee a=new ExcellentEmployee(\"李茂斌\",\"计科183\",\"1813021061\",\"10000\",\"3\",\"优秀员工\");\r\n  ExExcellentEmployee b=new ExcellentEmployee(\"李茂茂\",\"计科193\",\"1913021061\",\"8000\",\"2\",\"普通员工\");\r\n  a.add(\"优秀员工\");\r\n  a.display();\r\n  b.add(\"普通员工\");\r\n  b.display();\r\n  }\r\n  \r\n   \r\n      \r\n      ',50,50,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5472,45,566,133,'interface Shape{\r\n  double area();\r\n  double circumference();}\r\n\r\nclass Circle implements Shape{\r\n  double R;\r\n  double PI=3.14;\r\n  public Circle(double r){\r\n    R=r;\r\n    }\r\n  public double area(double r){\r\n    return PI*r*r;\r\n    }\r\n  public double circumference(double r){\r\n    return 2*PI*r;}\r\n}\r\nclass Rectangle implements Shape{\r\n    double L,W;\r\n    public Rectangle(double l,double w){\r\n    L=l;\r\n    W=w;\r\n    }\r\n    public double area(double l,double w){\r\n    return l*w;}\r\n    public double circumference(double l,double w){\r\n    return 2*(l+w);\r\n    }\r\n}\r\n    \r\npublic class TEST {\r\n public static void main(String[] args){\r\n   Circle a=new Clicle(4);\r\n   Rectangle b=new Rectangle(5,6);\r\n System.out.println(\"圆的面积：\"+A\r\n\r\n\r\n',50,50,'					   ',0,'','',NULL),
 (5473,45,560,132,'	interface Personlevel{\r\n	\r\n	int Add(int sum);\r\n	}\r\nabstract class Person{\r\n		String name;\r\n		String adress;\r\n		Person(String name,String adress){\r\n			\r\n		}}\r\nclass Employee implements Personlevel{\r\n	String ID;\r\n	double wage;\r\n	int age;\r\n	int sum;\r\n	public int Add(int sum){\r\n		\r\n	}\r\n	}\r\nclass ExcellentEmployee implements Personlevel{\r\n	String level;\r\n	public int Add(int sum){\r\n		\r\n	}}\r\npublic  abstract void PeopleInterface(){\r\n	public static void main (String[] args){\r\n		Employee 工资=new Employee();\r\n		ExcellentEmployee 工资=new ExcellentEmployee();\r\n	}\r\n}				   ',50,30,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5474,45,560,133,'	abstract class Shape{\r\n	public abstract double Shapearea();\r\n}\r\nclass rectangle extends Shape{\r\n	double a,h;\r\n	rectangle(double a,double h){\r\n		this.a=a;this.h=h;\r\n	}\r\n	public double Shapearea(){\r\n		return ((1/2)*(a*h));\r\n	}}\r\nclass circle extends Shape{\r\n	double r;\r\n    circle(double r){\r\n    	this.r=r;\r\n    }\r\n   public double Shapearea(){\r\n	   return(3.14*r*r);\r\n   }}	\r\n\r\npublic  class ShapeArea{\r\n	public void main(String[] args){\r\n		Shape shape;\r\n		shape=new rectangle(4.2,3.0);\r\n		System.out.println(\"三角形面积是\"+shape.Shapearea());\r\n		shape=new circle(5.2);\r\n		System.out.println(\"圆的面积是\"+shape.Shapearea());\r\n	}}				   ',50,40,'					   ',0,'','',NULL),
 (5475,46,606,132,'		public  class person {\r\n	public String name;\r\n	public String address;\r\n	public String getname(){\r\n		return name;\r\n	}\r\n	public void setname(String name){\r\n		this.name=name;\r\n	}\r\n	public String getaddress(){\r\n		return address;\r\n	}\r\n	public void setaddress(String address){\r\n		this.address=address;\r\n	}\r\n	\r\n	public  int add();\r\n	\r\n\r\n}\r\n\r\npublic class employee extends person{\r\n	protected int num;\r\n	public String id;\r\n	public double wage;\r\n	public int age;\r\n	public double getwage(){\r\n		return wage;\r\n	}\r\n	public void setwage(double wage){\r\n		this.wage=wage;\r\n	}\r\n	public employee(){\r\n}\r\n    public employee(int num){\r\n    	this.num=num;\r\n    }\r\n    public int add(){\r\n    	num*=(1+0.1);\r\n    	return num;\r\n    }\r\n}\r\n\r\npublic class excellentemployee extends employee{\r\n	public String level;\r\n	public String getlevel(){\r\n		return level;\r\n	}\r\n	public void setlevel(String level){\r\n		this.level=level;\r\n	}\r\n	public excellentemployee(int num){\r\n		super.num=num;\r\n		\r\n	}\r\n	public int add(){\r\n		num*=(1+0.2);\r\n		return num;\r\n	}	\r\n}\r\npublic class test{\r\n	public static void main(String []args){\r\n		employee p =new employee();\r\n		p.setname(\"da\");\r\n		p.setaddress(\"da\");\r\n		\r\n		excellentemployee o=new excellentemployee();\r\n		\r\n		\r\n	}\r\n}\r\n\r\n    			   \r\n					   ',50,30,'					   你的代码为什么与刘金池的一样？\r\n person应该为抽象类，这里有没有实现的方法int add()，而且这方法的返回值应为float',99,'99','刘金池',NULL),
 (5476,46,606,133,'		\r\nabstract class shape {\r\n	public abstract double getarea();\r\n	\r\n	public abstract double getperimeter();\r\n	\r\n	class circle extends shape{\r\n		private double radius;\r\n		public circle(double radius)\r\n		{\r\n			this.radius=radius;\r\n		}\r\n		public double getarea(){\r\n			return Math.PI*radius*radius;\r\n		}\r\n		public double getperimeter(){\r\n			return 2*Math.PI*radius;\r\n		}\r\n	}\r\n	class rectangle extends shape{\r\n		private double width;\r\n		private double height;\r\n		public rectangle (double width,double height){\r\n			this.width=width;\r\n			this.height=height;\r\n		}\r\n		public double getarea(){\r\n			return width*height;\r\n		}\r\n		public double getperimeter(){\r\n			return(width+height)*2;\r\n			\r\n		}\r\n		public class shapetest{\r\n			public static void main(String args[]){\r\n				circle circle=new circle(4);\r\n				System.out.println(\"面积\"+circle.getarea()+\"周长\"+circle.getperimeter());\r\n				rectangle rectangle=new rectangle(4,5);\r\n				System.out.println(\"面积\"+rectangle.getarea()+\"周长\"+rectangle.getperimeter());\r\n			}\r\n		}\r\n	}\r\n\r\n}\r\n			   \r\n					   ',50,35,'					   你的代码为什么与刘金池的一样？\r\nabstract class shape应为接口',98,'98','刘金池',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5477,46,593,132,'public class Person{\r\nString namre;\r\nString address;\r\n}\r\npublic class Employee extends Person{\r\n\r\npublic Employee(){\r\nprotected String level;\r\nString ID;\r\ndouble wage;\r\nint age;\r\n}\r\npublic Employee(String level){\r\nthis.level=level;\r\n}\r\npublic int Add(){\r\nlevel*=(1+0.1);\r\nreturn level;\r\n}\r\n}\r\npublic class ExcellentEmployee extends Employee{\r\npublic ExcellentEmployee(String level){\r\nsuper.level=level;\r\n}\r\npublic int Add(){\r\nlevel*=(1+0.2);\r\nreturn level;\r\n}\r\n}\r\npublic class EmployeeSalary{\r\npublic static void main(String[] args){\r\nperson employee=new Employee(10);\r\nPerson excellentEmployee=new ExcellentEmployee(10);\r\nSystem.out.print(\"普通员工工资：\"+employee.add());\r\nSystem.out.print(\"优秀员工工资：\"+excellentEmployee.add()):\r\n}\r\n}				   ',50,40,'					   ',0,'','',NULL),
 (5478,46,593,133,'public class implements Shape{\r\npublic abstract double area();\r\npublic abstract double Perimeter();\r\n}\r\npublic class Circle extends Shape{\r\nprivate double Radius;\r\npublic Circle(double r){\r\nthis.Radius=r;\r\n}\r\npublic double Area(){\r\nreturn Radius*Math.PI*Math.PI;\r\n}\r\n}\r\npublic double Perimeter(){\r\nreturn 2*Radius*Math.PI;\r\n}\r\npublic class Rectangle extends Shape{\r\nprivate double Length;\r\nprivate double Width;\r\npublic Rectangle(double a,double b){\r\nthis.Length=a;\r\nthis.Width=b;\r\n}\r\npublic double Area(){\r\nreturn Length*Width;\r\n}\r\npublic double Perimeter(){\r\nreturn 2*(length+width);}\r\n}\r\npublic static void main(String[] agrs){\r\nSystem.out.print(\"圆形半径：\"+Circle());\r\nSystem.out.print(\"圆形面积：\"+Area());\r\nSystem.out.print(\"圆形周长：\"+Perimeter());\r\nSystem.out.print(\"长方形长，宽：\"+Retangle());\r\nSystem.out.print(\"长方形面积：\"+Area());\r\nSystem.out.print(\"长方形周长：\"+Perimeter());\r\n}				   ',50,30,'					   代码中错误太多  \r\npublic class implements Shape 这是什么意思？',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5479,46,596,132,'					   public class Person {\r\n	public String name;\r\n	public String address;\r\n	public String getName() {\r\n		return name;\r\n	}\r\n	public void setName(String name) {\r\n		this.name = name;\r\n	}\r\n	public String getAddress() {\r\n		return address;\r\n	}\r\n	public void setAddress(String address) {\r\n		this.address = address;\r\n	}\r\n}\r\npublic class Employee extends Person{\r\n	public String ID;\r\n	public double wage;\r\n	public int years;\r\n	public String getID() {\r\n		return ID;\r\n	}\r\n	public void setID(String ID) {\r\n		this.ID = ID;\r\n	}\r\n	public double getWage() {\r\n		return wage;\r\n	}\r\n	public void setWage(double wage) {\r\n		this.wage = wage;\r\n	}\r\n	public int getyears() {\r\n		return years;\r\n	}\r\n	public void setyears(int years) {\r\n		this.years = years;\r\n	}\r\n}\r\npublic class homework2 {\r\npublic static void main(String[] args)\r\n{\r\n	ExcellentEmployee excellent=new ExcellentEmployee();\r\n	ExcellentEmployee simple=new ExcellentEmployee();\r\n	excellent.setName(\"李四\");\r\n	excellent.setAddress(\"南通\");\r\n	excellent.setID(\"1234\");\r\n	excellent.setWage(40000);\r\n	excellent.setyears(4);\r\n	excellent.add(\"excellent\");\r\n	System.out.println(excellent.getName()+\" \"+excellent.getAddress()+\" \"+excellent.getID()+\" \"+excellent.getWage()+\" \"+excellent.getyears());\r\n	simple.setName(\"张三\");\r\n	simple.setAddress(\"苏州\");\r\n	simple.setID(\"2345\");\r\n	simple.setWage(10000);\r\n	simple.setyears(2);\r\n	simple.add(\"simple\");\r\n	System.out.println(simple.getName()+\" \"+simple.getAddress()+\" \"+simple.getID()+\" \"+simple.getWage()+\" \"+simple.getyears());\r\n}\r\n}\r\n',50,30,'					   还少一个ExcellentEmployee类定义，怎么创建它的对象',0,'','',NULL),
 (5480,46,596,133,'				package homework3;\r\n\r\n\r\ninterface Shape{\r\n  public abstract float getArea();                            \r\n  public abstract float getCircumference();                   \r\n}\r\n\r\nclass Circle implements Shape{\r\n   float pi=3.14f;\r\n   float radius;                               \r\n  public void Circle(float r){\r\n      radius=r;\r\n  }\r\n  public float getArea(){                    \r\n      return pi*radius*radius;\r\n  }\r\n  public float getCircumference(){            \r\n      return 2*pi*radius;\r\n  }\r\n}\r\nclass Rectangle implements Shape{\r\n   float width;\r\n   float height;                              \r\n  public void Rectangle(float width,float height){\r\n      this.width=width;\r\n      this.height=height;\r\n  }\r\n  public float getArea(){                     \r\n      return width*height;\r\n  }\r\npublic float getCircumference() {\r\n	return 2*(width+height);\r\n}\r\n}\r\npublic class homework3 {\r\n	public static void main(String[] args) {\r\n		Circle 圆= new Circle();\r\n		Rectangle 长方形 = new Rectangle();\r\n		圆.Circle(3);\r\n		长方形.Rectangle(3, 4);\r\n		System.out.println(\"圆：面积：\"+圆.getArea()+\",周长：\"+圆.getCircumference());\r\n		System.out.println(\"长方形：面积：\"+长方形.getArea()+\",周长：\"+长方形\r\n				+.getCircumference());\r\n	}\r\n}\r\n	   ',50,45,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5481,46,597,132,'				package ccc;\r\n\r\nclass Person{\r\n	String name,address;\r\n	Person(String name1,String address1){\r\n		name=name1;\r\n		address=address1;\r\n	}\r\n}\r\n\r\nclass Employee extends Person{\r\n	String ID;\r\n	double wage;\r\n	int length_of_service;\r\n	Employee(String name1,String address1,String ID1,double wage1,int time1){\r\n		super(name1,address1);\r\n		ID=ID1;\r\n		wage=wage1;\r\n		length_of_service=time1;\r\n	}\r\n}\r\n\r\nclass ExcellentEmployee extends Employee{\r\n	String level;\r\n	ExcellentEmployee(String level1,String name1,String address1,String ID1,double wage1,int time1){\r\n		super(name1,address1,ID1,wage1,time1);\r\n		level=level1;\r\n	}\r\n	void add(String level_){\r\n		level=level_;\r\n		if(level.equals(\"normal\")){wage+=wage*0.1;}\r\n		else if(level.equals(\"excellent\")){wage+=wage*0.2;}\r\n		}\r\n	}\r\n\r\nvoid show(){\r\n	System.out.println(\"姓名\"+name);\r\n	System.out.println(\"住址\"+address);\r\n	System.out.println(\"ID\"+ID);\r\n	System.out.println(\"工资\"+wage);\r\n	System.out.println(\"工时\"+length_of_service);\r\n	System.out.println(\"员工等级\"+level);\r\n}\r\n\r\n\r\n\r\npublic class IncresseSalary_test {\r\n	public static void main(String []args){\r\n		ExcellentEmployee normal=new ExcellentEmployee(\"李华\",\"长椅\",\"123\",3000,2,\"normal\");\r\n		normal.show();\r\n		normal.add(\"excellent\");\r\n		normal.show();\r\n		ExcellentEmployee excellent=new ExcellentEmployee(\"李华\",\"长椅\",\"123\",3000,2,\"excellent\");\r\n		excellent.show();\r\n		excellent.add(\"narmal\");\r\n		excellent.show();\r\n	}\r\n}\r\n	   ',50,48,'					   ',0,'','',NULL),
 (5482,46,597,133,'interface Shape{\r\n	public abstract double area_calculation();\r\n	public abstract double perimeter_calculation();\r\n	void output();\r\n}\r\n\r\nclass Circle implements Shape{\r\n	double a;\r\n	public Circle(double r){\r\n		a=r;\r\n	}\r\n	public double area_calculation(){\r\n		return a*a*Math.PI;\r\n	}\r\n	public double perimeter_calculation(){\r\n		return 2*a*Math.PI;\r\n	}\r\n	public void output(){\r\n		System.out.println(\"circle area=\"+this.area_calculation());\r\n		System.out.println(\"circle perimeter=\"+this.perimeter_calculation());\r\n	}\r\n}\r\n\r\nclass Rectangle implements Shape{\r\n	double a,b;\r\n	public Rectangle(double c,double d){\r\n		a=c;\r\n		b=d;\r\n	}\r\n	public double area_calculation(){\r\n		return a*b;\r\n	}\r\n	public double perimeter_calculation(){\r\n		return 2*a+2*b;\r\n	}\r\n	public void output(){\r\n		System.out.println(\"rectangle area=\"+this.area_calculation());\r\n		System.out.println(\"rectangle perimeter=\"+this.perimeter_calculation());\r\n	}\r\n}\r\n\r\n\r\npublic class Shape_test{\r\n	public static void main(String[] args){\r\n	Circle test1=new Circle(3.2);\r\n	test1.output();\r\n	Rectangle test2=new Rectangle(4.5,7.8);\r\n	test2.output();\r\n	}\r\n}					   ',50,48,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5483,49,572,122,'package work;\r\nimport java.util.Calendar;\r\n\r\npublic class TestDate {\r\n	public static void main(String [] args) {\r\n		Calendar dt=Calendar.getInstance();\r\n		System.out.print(\"当前的日期和时间：\");\r\n		System.out.println(dt.getTime());\r\n		System.out.print(\"十天后的日期和时间是：\");\r\n		System.out.print(dt.get(Calendar.YEAR)+\"年\");\r\n		System.out.print(dt.get(Calendar.MONTH)+\"月\");\r\n		dt.add(Calendar.DATE, 10);\r\n		System.out.print(dt.get(Calendar.DATE)+\"日  \");\r\n		System.out.print(dt.get(Calendar.HOUR)+\":\");\r\n		System.out.print(dt.get(Calendar.MINUTE)+\":\");\r\n		System.out.print(dt.get(Calendar.SECOND));\r\n	}\r\n}\r\n\r\n\r\n\r\n		   \r\n					   ',30,20,'					   ',81,'81','徐昊',NULL),
 (5484,49,572,123,'package 练习;\r\nimport java.util.*;\r\nimport java.util.Scanner;\r\n//设计一个程序，基于泛型Map实现10个英文单词的汉语翻译，即通过单词得到它的中文含义。\r\n\r\npublic class Translate {\r\n	public static void main(String [] args) {\r\n		Map<String,String>Fruit=new HashMap<String,String>();\r\n		Scanner fruit=new Scanner(System.in);\r\n		Fruit.put(\"apple\",\"苹果\");\r\n		Fruit.put(\"pear\",\"梨子\");\r\n		Fruit.put(\"grape\",\"葡萄\");\r\n		Fruit.put(\"banana\",\"香蕉\");\r\n		Fruit.put(\"orange\",\"橙子\");\r\n		Fruit.put(\"mango\",\"芒果\");\r\n		Fruit.put(\"apricot\",\"杏子\");\r\n		Fruit.put(\"lemon\",\"柠檬\");\r\n		Fruit.put(\"peach\",\"桃子\");\r\n		Fruit.put(\"arbutus\",\"杨梅\");\r\n		System.out.print(\"请输入下列单词中的一个:\");\r\n		System.out.println(\"apple,pear,grape,banana,orange,mango,apricot,lemon,peach,arbutus\");\r\n		String word=fruit.nextLine();\r\n		while(Fruit.get(word)==null) {		\r\n			System.out.println(\"您输入的单词无效，请重新输入\");\r\n		    word=fruit.nextLine();\r\n		}\r\n		System.out.println(Fruit.get(word));\r\n	}\r\n\r\n}				   \r\n					   ',30,25,'					   ',0,'','',NULL),
 (5485,49,572,124,'package 练习;\r\nimport java.util.*;\r\n/*编写一个同学的通讯录（包括姓名和电话），并将同学的信息打印在控制台上。\r\n\r\n提示：首先创建一个同学类Student，有两个成员变量：姓名和电话，\r\n\r\n然后编写一个测试类Test，在测试类中创建一个List类型的变量students，并创建5个同学对象，\r\n\r\n并将这些对象保存在students中。*/\r\n\r\nclass Student{\r\n	String name;\r\n	String Tel;\r\n	public Student(String n,String tel){\r\n		name=n;Tel=tel;\r\n	}\r\n}\r\npublic class toTestStudent {\r\n	public static void main(String [] args) {\r\n		List students=new ArrayList();\r\n		Student object[]=new Student[5];\r\n		object[0]=new Student(\"李明\",\"1111111\");\r\n		object[1]=new Student(\"王刚\",\"2222222\");\r\n		object[2]=new Student(\"李鹏\",\"3333333\");\r\n		object[3]=new Student(\"徐丽\",\"4444444\");\r\n		object[4]=new Student(\"张飞\",\"5555555\");\r\n		for(int i=0;i<5;i++)\r\n		{\r\n			students.add(object[i].name+object[i].Tel);\r\n		}\r\n		System.out.println(students);\r\n	}\r\n\r\n}				   \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5486,49,557,122,'	package homework.ch05;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDate;\r\nimport java.util.Date;\r\n\r\npublic class DateDemo {\r\n    public static void main(String[] args) throws ParseException {\r\n        LocalDate date=LocalDate.now();\r\n        date=date.plusDays(10);\r\n        int year=date.getYear();\r\n        int month=date.getMonthValue();\r\n        int day=date.getDayOfMonth();\r\n        String date1=year+\"年\"+month+\"月\"+day+\"日\";\r\n\r\n        SimpleDateFormat sdf=new SimpleDateFormat(\"yyyy年MM月dd日\");\r\n        Date dt=sdf.parse(date1);\r\n        String str=sdf.format(dt);\r\n        System.out.println(\"转换格式后为\"+str);\r\n\r\n    }\r\n}\r\n				   ',30,30,'					   ',0,'','',NULL),
 (5487,49,557,123,'		package homework.ch05;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class MapDemo {\r\n    public static void main(String[] args) {\r\n        Map<String,String> map=new HashMap<String, String>();\r\n        map.put(\"dog\",\"狗\");\r\n        map.put(\"cat\",\"猫\");\r\n        map.put(\"mouse\",\"鼠\");\r\n        System.out.println(map.get(\"dog\"));\r\n\r\n    }\r\n}\r\n			   ',30,28,'					   ',0,'','',NULL),
 (5488,49,557,124,'		package homework.ch05;\r\n\r\npublic class Student {\r\n    private String name;\r\n    private String telephone;\r\n\r\n    public Student(String name, String telephone) {\r\n        this.name = name;\r\n        this.telephone = telephone;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getTelephone() {\r\n        return telephone;\r\n    }\r\n\r\n    public void setTelephone(String telephone) {\r\n        this.telephone = telephone;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Student{\" +\r\n                \"name=\'\" + name + \'\\\'\' +\r\n                \", telephone=\'\" + telephone + \'\\\'\' +\r\n                \'}\';\r\n    }\r\n}\r\n\r\npackage homework.ch05;\r\n\r\nimport java.awt.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class StudentTest {\r\n    public static void main(String[] args) {\r\n\r\n        Student stu1=new Student(\"小红\",\"13962936376\");\r\n        Student stu2=new Student(\"菲菲\",\"8544756\");\r\n        Student stu3=new Student(\"小玉\",\"7415698\");\r\n        Student stu4=new Student(\"静静\",\"8895456\");\r\n        Student stu5=new Student(\"小明\",\"96458799546\");\r\n        List<Student> students=new ArrayList<Student>();\r\n        students.add(stu1);\r\n        students.add(stu2);\r\n        students.add(stu3);\r\n        students.add(stu4);\r\n        students.add(stu5);\r\n        for(Student student:students)\r\n        {\r\n            System.out.println(student);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n			   ',40,38,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5489,48,586,122,'import java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\npublic class wyy11 {\r\n public static void main(String[] args) {\r\n  SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy年MM月dd日\");\r\n  Date date = new Date();\r\n  Calendar c = Calendar.getInstance();\r\n  c.setTime(date);\r\n  c.add(Calendar.DATE, 10);\r\n  System.out.println(sdf.format(c.getTime()));\r\n }\r\n}\r\n					   ',30,25,'					   \r\n					   ',87,'87','魏宗邦',NULL),
 (5490,48,586,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\npublic class wyy11 {\r\n	public static void main(String[] args) {\r\n		Map<String,String>map=new HashMap<String,String>();\r\n		map.put(\"one\", \"一\");\r\n		map.put(\"two\", \"二\");\r\n		map.put(\"three\", \"三\");\r\n		map.put(\"four\", \"四\");\r\n		map.put(\"five\", \"五\");\r\n		map.put(\"six\", \"六\");\r\n		map.put(\"seven\", \"七\");\r\n		map.put(\"eight\", \"八\");\r\n		map.put(\"nine\", \"九\");\r\n		map.put(\"ten\", \"十\");\r\n		for(Map.Entry<String, String>entry:map.entrySet()) {\r\n			String key=entry.getKey();\r\n			String value=entry.getValue();\r\n			System.out.println(\"key=\"+key+\",value=\"+value);\r\n		}\r\n	}\r\n}\r\n				   ',30,25,'					   \r\n					   ',0,'','',NULL),
 (5491,48,586,124,'import java.util.ArrayList;\r\nimport java.util.List;\r\nclass Student{\r\n	String name;\r\n	String tel;\r\n	public Student(String name, String tel) {\r\n		this.name = name;\r\n		this.tel = tel;\r\n	}	\r\n	public String toString() {\r\n		return \"姓名：\"+name+\"，电话号码：\"+tel;\r\n	}\r\n}\r\n\r\npublic class Test {\r\n	public static void main(String[] args) {\r\n		List<Student>students=new ArrayList<Student>();\r\n		students.add(new Student(\"张一\",\"15962990001\"));\r\n		students.add(new Student(\"张二\",\"15962990002\"));\r\n		students.add(new Student(\"张三\",\"15962990003\"));\r\n		students.add(new Student(\"张四\",\"15962990004\"));\r\n		students.add(new Student(\"张五\",\"15962990005\"));\r\n		for(Student s:students) {\r\n			System.out.println(s);\r\n		}\r\n	}\r\n}\r\n				   ',40,40,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5492,49,562,122,'import java.util.Calendar;\r\npublic class DateExample {\r\n\r\n	public static void main(String[] args) {\r\n		Calendar dt=Calendar.getInstance();\r\n		System.out.print(\"当前的日期是：\");\r\n		System.out.print(dt.get(Calendar.YEAR)+\"年\");\r\n		System.out.print((dt.get(Calendar.MONTH)+1)+\"月\");\r\n		System.out.print(dt.get(Calendar.DATE)+\"日\");\r\n		System.out.print(dt.get(Calendar.HOUR)+\":\");\r\n		System.out.print(dt.get(Calendar.MINUTE)+\":\");\r\n		System.out.println(dt.get(Calendar.SECOND));\r\n		dt.add(Calendar.DATE, 10);\r\n		System.out.print(\"十天后的日期和时间：\");\r\n		System.out.print(dt.get(Calendar.YEAR)+\"年\");\r\n		System.out.print((dt.get(Calendar.MONTH)+1)+\"月\");\r\n		System.out.print(dt.get(Calendar.DATE)+\"日\");\r\n		System.out.print(dt.get(Calendar.HOUR)+\":\");\r\n		System.out.print(dt.get(Calendar.MINUTE)+\":\");\r\n		System.out.println(dt.get(Calendar.SECOND));\r\n	}\r\n\r\n}					   \r\n					   \r\n					   \r\n					   ',30,20,'					   ',84,'84','张明鉴',NULL),
 (5493,49,562,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\npublic class Transform {\r\n\r\n	public static void main(String[] args) {\r\n		Map<String,String> map=new HashMap<String, String>();\r\n		map.put(\"one\", \"一\");\r\n		map.put(\"two\", \"二\");\r\n		map.put(\"three\", \"三\");\r\n		map.put(\"four\", \"四\");\r\n		map.put(\"five\", \"五\");\r\n		map.put(\"six\", \"六\");\r\n		map.put(\"seven\", \"七\");\r\n		map.put(\"eight\", \"八\");\r\n		map.put(\"nine\", \"九\");\r\n		map.put(\"ten\", \"十\");\r\n		\r\n		System.out.println(\"one的中文：\"+map.get(\"one\"));\r\n		System.out.println(\"two的中文：\"+map.get(\"two\"));\r\n		System.out.println(\"three的中文：\"+map.get(\"three\"));\r\n		System.out.println(\"four的中文：\"+map.get(\"four\"));\r\n		System.out.println(\"five的中文：\"+map.get(\"five\"));\r\n		System.out.println(\"six的中文：\"+map.get(\"six\"));\r\n		System.out.println(\"seven的中文：\"+map.get(\"seven\"));\r\n		System.out.println(\"eight的中文：\"+map.get(\"eight\"));\r\n		System.out.println(\"nine的中文：\"+map.get(\"nine\"));\r\n		System.out.println(\"ten的中文：\"+map.get(\"ten\"));\r\n		\r\n	}\r\n\r\n}\r\n					   \r\n					   \r\n					   \r\n					   ',30,25,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5494,49,562,124,'public class Student {\r\n	public String name;\r\n	public int tel;\r\n	\r\n	public Student(String n, int tele) {\r\n		name=n;\r\n		tel=tele;\r\n	}\r\n}\r\n\r\nimport java.util.*;\r\npublic class Test {\r\n\r\n	public static void main(String[] args) {\r\n		List<Student> students=new ArrayList<Student>();\r\n		Student s1=new Student(\"张三\",1234567);\r\n		Student s2=new Student(\"李四\",1237694);\r\n		Student s3=new Student(\"王五\",5725679);\r\n		Student s4=new Student(\"赵二\",3701593);\r\n		Student s5=new Student(\"周九\",3430028);\r\n		\r\n		students.add(s1);\r\n		students.add(s2);\r\n		students.add(s3);\r\n		students.add(s4);\r\n		students.add(s5);\r\n		\r\n		System.out.println(\"students表中共有\"+students.size()+\"个元素\");\r\n		System.out.println(\"    studetnts表\");\r\n		System.out.print(\"姓名：\"+students.get(0).name+\" \");\r\n		System.out.println(\"电话：\"+students.get(0).tel);\r\n		System.out.print(\"姓名：\"+students.get(1).name+\" \");\r\n		System.out.println(\"电话：\"+students.get(1).tel);\r\n		System.out.print(\"姓名：\"+students.get(2).name+\" \");\r\n		System.out.println(\"电话：\"+students.get(2).tel);\r\n		System.out.print(\"姓名：\"+students.get(3).name+\" \");\r\n		System.out.println(\"电话：\"+students.get(3).tel);\r\n		System.out.print(\"姓名：\"+students.get(4).name+\" \");\r\n		System.out.println(\"电话：\"+students.get(4).tel);\r\n	}\r\n\r\n}			   \r\n					   \r\n					   \r\n					   ',40,40,'					   ',0,'','',NULL),
 (5495,49,558,122,'		import java.util.*; \r\npublic class time {\r\n	 public static void main(String[] args){\r\n	 Calendar cal=Calendar.getInstance(); \r\n	 cal.add(Calendar.DAY_OF_YEAR,10);\r\n	 String strDate=cal.get(Calendar.YEAR)+\"年\" \r\n	 +(cal.get(Calendar.MONTH)+1)+\"月\"\r\n			 +cal.get(Calendar.DATE)+\"日\";\r\n	 System.out.println(\"10天后的日期为：\"+strDate);\r\n	 }\r\n	 }			   \r\n					   ',30,15,'					   ',85,'86,82,84,85,82,83','徐百川,赵明辉,张凡,杨利英,王伟杰,简江进',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5496,49,558,123,'public class translate { \r\n	public static void main(String[] args)\r\n {\r\nString[] eng={\"one\",\"two\",\"five\",\"computer\",\"phone\",\"hair\",\"ten\",\"nine\",\"seven\",\"eye\",\"hand\",\"water\"};\r\nString[] chs={\"一\",\"二\",\"五\",\"电脑\",\"手机\",\"头发\",\"十\",\"九\",\"七\",\"眼睛\",\"手\",\"水\"};\r\n\r\nMap<String,String>map=new HashMap<String,String>();\r\n\r\nfor(int i=0;i<eng.length;i++)\r\n\r\nmap.put(eng[i],chs[i]);\r\n\r\nString test=\"one\";\r\n\r\nSystem.out.println(test+\"翻译:\"+map.get(test));\r\n}\r\n}\r\n				   \r\n					   ',30,30,'					   ',0,'','',NULL),
 (5497,49,558,124,'import java.util.*;	\r\npublic class Student {\r\n\r\n   private String name;\r\n   private String Phone;\r\n\r\n    //无参构造\r\n   \r\n    public Student(String name, String Phone) {\r\n        this.name = name;\r\n        this.Phone = Phone;\r\n    }\r\npublic String toString(){\r\nreturn name=\":\"+phone;\r\n}\r\npublic class Test_Five {\r\n\r\n    public  void main(String[] args) {\r\n        \r\n     Student st1=new Student(\"小红\",\"136666666666\")；\r\n     Student st2=new Student(\"小蓝\",\"136666666667\");\r\n     Student st3=new Student(\"小绿\",\"136666666668\");\r\n     Student st4=new Student(\"小白\",\"136666666669\");\r\n     Student st5=new Student(\"小粉\",\"136666666665\");\r\n   List<Student>List=new ArrayList<Student>();\r\nList.add(st1);\r\nList.add(st2);\r\nList.add(st3);\r\nList.add(st4);\r\nList.add(st5);\r\nfor (int i=0;i<List.size();i++)\r\nSystem.out.println(List.get(i));\r\n    }\r\n\r\n}				   \r\n					   ',40,40,'					   ',0,'','',NULL),
 (5498,49,559,122,'import java.util.*;\r\npublic class time {\r\n	 public static void main(String[] args){\r\n	 Calendar cal=Calendar.getInstance(); \r\n\r\n	 cal.add(Calendar.YEAR,10);\r\n         cal.add(Calendar.MONTH,10);\r\n         cal.add(Calendar.DATE,10);\r\n	 System.out.print(\"10天后的日期为：\"+cal.get(Calendar.YEAR)+\"年\" \r\n	 +(cal.get(Calendar.MONTH)+1)+\"月\"+cal.get(Calendar.DATE)+\"日\");\r\n	 }\r\n	 }		   \r\n					   ',30,30,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5499,49,559,123,'import java.util.*;\r\npublic class translate {\r\n	public static void main(String[] args)\r\n	 {\r\n	String[] english={\"pistachio\",\"gardenias\",\"south\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\"};\r\n	String[] chinese={\"开心果\",\"栀子花\",\"南方\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\"};\r\n	Map<String,String>map=new HashMap<String,String>();\r\n	for(int i=0;i<english.length;i++)\r\n	map.put(english[i],chinese[i]);\r\n	System.out.println(\"单词pistachio的翻译:\"+map.get(\"pistachio\"));\r\n	    }\r\n	}\r\n					   ',30,25,'					   ',0,'','',NULL),
 (5500,49,559,124,'			import java.util.*;\r\nclass Student{\r\n	public String name;\r\n	public String phone;\r\n	public Student(String name, String phone){ \r\n	this. name=name;\r\n	this. phone=phone;\r\n	}\r\n	public String toString(){ return name+\": \"+phone;\r\n}\r\n}\r\npublic class Text {\r\n	public  void main (String[] args){\r\n		Student stl=new Student(\"南栀\", \"100\");\r\n		Student st2=new Student(\"板南耕\", \"101\");\r\n		Student st3=new Student(\"未来主席\", \"111\");\r\n		Student st4=new Student(\"草婴\", \"110\");\r\n		Student st5=new Student(\"乖乖\", \"011\");\r\n		List< Student>list=new ArrayList<Student>();\r\n				list. add(stl);\r\n		        list. add(st2);\r\n		        list. add(st3);\r\n		        list. add(st4);\r\n		        list. add(st5);\r\n		for (int i=0;i<list. size();i++)\r\n		 {System.out. println(list.get(i));}\r\n	}\r\n}\r\n\r\n		   \r\n					   ',40,25,'					   ',0,'','',NULL),
 (5501,49,561,122,'		import java.util.Calendar;\r\npublic class Ex12 {\r\npublic static void main(String[] args) {\r\nCalendar cal=Calendar.getInstance();\r\ncal.add(Calendar.DAY_OF_YEAR,10);\r\nString strDate=cal.get(Calendar.YEAR)+”年“\r\n+(cal.get(Calendar.MONTH)+1)+”月“\r\n+cal.get(Calendar.DATE)+”日“;\r\nSystem.out.println(“10天后的日期为：“+strDate);\r\n}\r\n}			   \r\n					   \r\n					   ',30,20,'					   \r\n					   ',81,'86,82,90,85,81','徐百川,赵明辉,张凡,卢姿彤,王伟杰',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5502,49,561,123,'import java.util.*;\r\npublic class Ex22 {\r\npublic static void main(String[] args) {\r\nString[] eng={“Apple”,”Orange”,”Green”};\r\nString[] chs={“苹果“,”桔子“,”绿色“};\r\nMap map=new HashMap();\r\nfor(int i=0;i<eng.length;i++)\r\nmap.put(eng[i],chs[i]);\r\nString test=”Orange”;\r\nSystem.out.println(test+”翻译：“+map.get(test));\r\n}\r\n}\r\n					   \r\n					   \r\n					   ',30,20,'					   \r\n					   ',91,'91','张凡',NULL),
 (5503,49,561,124,'import java.util.*;\r\n class Stu{\r\n	private String name;\r\n	private  String phone;\r\n    public Stu(String name,String phone){\r\n	this.name=name;\r\n	this.phone=phone;\r\n}\r\npublic String toString(){\r\n	return name+\":\"+phone;\r\n}\r\n}\r\n public class Student{\r\n	 public static void main(String[] args){\r\n		 Stu st1=new Stu(\"Linda\",\"23345\");\r\n		 Stu st2=new Stu(\"Jack\",\"24675\");\r\n		 Stu st3=new Stu(\"Nicy\",\"11345\");\r\n		 Stu st4=new Stu(\"Luny\",\"29345\");\r\n		 Stu st5=new Stu(\"Huaa\",\"13348\");\r\n	List<Stu>list=new ArrayList<Stu>();\r\n		 list.add(st1);\r\n		 list.add(st2);\r\n		 list.add(st3);\r\n		 list.add(st4);\r\n		 list.add(st5);\r\n	 for(int i=0;i<list.size();i++)\r\n	 System.out.println(list.get(i));\r\n	 } \r\n }		   ',40,40,'					   \r\n					   ',0,'','',NULL),
 (5504,48,596,122,'package homework2;\r\nimport java.util.Calendar;\r\npublic class homework2 {\r\npublic static void main(String[] args)\r\n{\r\n Calendar day=Calendar.getInstance();\r\n day.add(Calendar.DATE, 10);\r\n System.out.print(day.get(Calendar.YEAR)+\"年\");\r\n System.out.print(day.get(Calendar.MONTH)+\"月\");\r\n System.out.print(day.get(Calendar.DATE)+\"日\");\r\n}\r\n}',30,30,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5505,48,596,123,'package homework3;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\npublic class homework3 {\r\n	public static void main(String[] args) {\r\n		Map<String,String>translation=new HashMap<String,String>();\r\n		translation.put(\"lawn\",\"草坪\");\r\n		translation.put(\"pregnant\",\"怀孕的\");\r\n		translation.put(\"probe\",\"盘问\");\r\n		translation.put(\"burn\",\"燃烧\");\r\n		translation.put(\"mystic\",\"神秘主义者\");\r\n		translation.put(\"windwill\",\"风车\");\r\n		translation.put(\"concentric\",\"同心的\");\r\n		translation.put(\"soul\",\"灵魂\");\r\n		translation.put(\"bullet\",\"子弹\");\r\n		translation.put(\"wallet\",\"钱包\");\r\n		String test=\"soul\";\r\n		System.out.print(\"soul的中文翻译是：\"+translation.get(test));\r\n	}\r\n}\r\n	   ',30,25,'					   ',0,'','',NULL),
 (5506,48,596,124,'package Test;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nclass Student{\r\n String name;\r\n String number;\r\n}\r\npublic class Test {\r\n public static void main(String[] args) {\r\n  List<Student> students=new ArrayList<Student>();\r\n  Student a=new Student();\r\n  Student b=new Student();\r\n  Student c=new Student();\r\n  Student d=new Student();\r\n  Student e=new Student();\r\n  a.name=\"王一\";\r\n  b.name=\"李二\";\r\n  c.name=\"张三\";\r\n  d.name=\"赵四\";\r\n  e.name=\"林五\";\r\n  a.number=\"1357775551\";\r\n  b.number=\"1357775552\";\r\n  c.number=\"1357775553\";   \r\n  d.number=\"1357775554\";\r\n  e.number=\"1357775555\";\r\n  students.add(a);\r\n  students.add(b);\r\n  students.add(c);\r\n  students.add(d);\r\n  students.add(e);\r\n  System.out.println(students.get(0));\r\n  System.out.println(students.get(1));\r\n  System.out.println(students.get(2));\r\n  System.out.println(students.get(3));\r\n  System.out.println(students.get(4));\r\n  System.out.println(a.name+\" \"+a.number);\r\n  System.out.println(b.name+\" \"+b.number);\r\n  System.out.println(c.name+\" \"+c.number);\r\n  System.out.println(d.name+\" \"+d.number);\r\n  System.out.println(e.name+\" \"+e.number);\r\n }\r\n}',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5507,49,565,122,'package com.company;\r\nimport java.util.Calendar;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n     Calendar cal=Calendar.getInstance();\r\n     System.out.println(\"10天后的日期和时间：\");\r\n     cal.add(Calendar.DATE,10);\r\n     System.out.print(cal.get(Calendar.YEAR)+\"年\");\r\n     System.out.print(cal.get(Calendar.MONTH)+\"月\");\r\n     System.out.print(cal.get(Calendar.DATE)+\"日 \");\r\n     System.out.print(cal.get(Calendar.HOUR)+\"：\");\r\n     System.out.print(cal.get(Calendar.MINUTE)+\"：\");\r\n     System.out.print(cal.get(Calendar.SECOND));\r\n    }\r\n}				   \r\n					   \r\n					   ',30,30,'					   ',0,'','',NULL),
 (5508,49,565,123,'package com.company;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\npublic class fanxing {\r\n    public static void main(String[] args){\r\n        String[] eng={\"Apple\",\"Red\",\"Green\",\"Yellow\",\"Peer\",\"Blue\",\"Orange\",\"Water\",\"Box\",\"Bag\"};\r\n        String[] chs={\"苹果\",\"红色\",\"绿色\",\"黄色\",\"梨子\",\"蓝色\",\"橘子\",\"水\",\"盒子\",\"包\"};\r\n        Map<String,String>map=new HashMap<String,String>();\r\n        for(int i=0;i<eng.length;i++)\r\n        {  map.put(eng[i],chs[i]);  }\r\n        for(int i=0;i<eng.length;i++) {\r\n            System.out.println(eng[i] + \"翻译：\" + (map.get(eng[i])));\r\n        }\r\n    }\r\n}				   \r\n					   \r\n					   ',30,25,'					   ',0,'','',NULL),
 (5509,49,565,124,'package com.company;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nclass Student{\r\n    String name;\r\n    String phone;\r\n    public Student(String n,String p){\r\n        name=n;\r\n        phone=p;\r\n    }\r\n    public String toString(){\r\n        return name+\":\"+phone;\r\n    }\r\n}\r\npublic class Test {\r\n    public static void main(String [] args){\r\n        Student st1=new Student(\"小A\",\"12345\");\r\n        Student st2=new Student(\"小B\",\"23455\");\r\n        Student st3=new Student(\"小C\",\"34588\");\r\n        Student st4=new Student(\"小D\",\"45690\");\r\n        Student st5=new Student(\"小E\",\"56748\");\r\n        List<Student> list=new ArrayList<Student>();\r\n        list.add(st1);\r\n        list.add(st2);\r\n        list.add(st3);\r\n        list.add(st4);\r\n        list.add(st5);\r\n        for(int i=0;i<list.size();i++){\r\n            System.out.println(list.get(i));\r\n        }\r\n\r\n    }\r\n}\r\n					   \r\n					   \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5510,49,567,122,'import java.util.Date;\r\nimport java.util.Calendar;\r\nimport java.text.SimpleDateFormat;\r\n\r\npublic class DateTest {\r\n    public static void main(String[] args){\r\n        SimpleDateFormat d=new SimpleDateFormat(\"yyyy年MM月dd日\");\r\n        Date date=new Date();\r\n        Calendar calendar=Calendar.getInstance();\r\n        calendar.setTime(date);\r\n        calendar.add(Calendar.DATE,10);\r\n        System.out.println(d.format(calendar.getTime()));\r\n    }\r\n}\r\n					   \r\n					   \r\n					   ',30,20,'					   \r\n					   ',92,'92','杨程羽',NULL),
 (5511,49,567,123,'import java.util.*;\r\n\r\npublic class TranslateTest {\r\n    public static void main(String[] args){\r\n        String[] english={\"apple\",\"pear\",\"watermelon\",\"orange\",\"banana\",\"cherry\",\"grape\",\"peach\",\"blackberry\",\"pineapple\"};\r\n        String[] chinese={\"苹果\",\"梨子\",\"西瓜\",\"橘子\",\"香蕉\",\"樱桃\",\"葡萄\",\"桃子\",\"黑莓\",\"菠萝\"};\r\n        Map map=new HashMap();\r\n        for(int i=0;i<english.length;i++){\r\n            map.put(english[i],chinese[i]);\r\n        }\r\n        String demo=\"pineapple\";\r\n        System.out.println(demo+\"的翻译为:\"+map.get(demo));\r\n    }\r\n}					   \r\n					   \r\n					   ',30,30,'					   \r\n					   ',0,'','',NULL),
 (5512,49,567,124,'import java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Student {\r\n    String name;\r\n    String number;\r\n    public Student(){\r\n\r\n    }\r\n    public Student(String name,String number){\r\n        this.name=name;\r\n        this.number=number;\r\n    }\r\n}\r\n\r\npublic class Test {\r\n    public static void main(String[] args){\r\n        List students=new ArrayList();\r\n        Student s1=new Student(\"Xing\",\"1111111\");\r\n        Student s2=new Student(\"Yun\",\"2222222\");\r\n        Student s3=new Student(\"Chen\",\"3333333\");\r\n        Student s4=new Student(\"Lin\",\"4444444\");\r\n        Student s5=new Student(\"Ao\",\"5555555\");\r\n        students.add(s1);\r\n        students.add(s2);\r\n        students.add(s3);\r\n        students.add(s4);\r\n        students.add(s5);\r\n    }\r\n}					   \r\n					   \r\n					   ',40,30,'					   \r\n					   ',84,'84','杨程羽',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5513,48,597,122,'import java.util.Calendar;\r\n\r\npublic class date {\r\n	public static void main(String[] args){\r\n		Calendar cal=Calendar.getInstance();\r\n		cal.add(Calendar.DAY_OF_YEAR,10);\r\n		System.out.print(\"十天后的日期是\");\r\n		System.out.print(cal.get(Calendar.YEAR)+\"年\");\r\n		System.out.print((1+cal.get(Calendar.MONTH))+\"月\");\r\n		System.out.print(cal.get(Calendar.DATE)+\"日\");\r\n		System.out.print(cal.get(Calendar.HOUR)+\"时\");\r\n		System.out.print(cal.get(Calendar.MINUTE)+\"分\");\r\n		System.out.print(cal.get(Calendar.SECOND)+\"秒\");\r\n	}\r\n}		\r\n					   ',30,30,'					   \r\n					   ',0,'','',NULL),
 (5514,48,597,123,'import java.util.*;\r\n\r\npublic class translation {\r\n	public static void main(String[] args){\r\n		String[] en={\"esteem\",\"pursue\",\"noema\",\"imitation\",\"lesson\",\r\n				\"gain\",\"autonomously\",\"negotiable\",\"speculator\",\"anonymous\"};\r\n		String[] ch={\"尊重\",\"追逐\",\"心智\",\"模仿\",\"教训\",\"获得\",\"自主地\",\"可协商的\",\"投机者\",\"不具名的\"};\r\n		Map<String,String>map=new HashMap<String,String>();\r\n		for(int i=0;i<en.length;i++)\r\n			map.put(en[i],ch[i]);\r\n		\r\n		String n1=\"anonymous\";\r\n		System.out.println(n1+\"-->\"+map.get(n1));\r\n		String n2=\"模仿\";\r\n		System.out.println(n2+\"-->\"+map.get(n2));\r\n	}\r\n}					   \r\n					   ',30,25,'					   \r\n					   ',0,'','',NULL),
 (5515,48,597,124,'import java.util.*;\r\n\r\nclass Student{\r\n	String name;\r\n	String phonenum;\r\n	public Student(String name,String phonenum){\r\n		this.name=name;\r\n		this.phonenum=phonenum;\r\n	}\r\n}\r\n\r\n\r\npublic class address_book {\r\n	public static void main(String[] args){\r\n		Student p1=new Student(\"徐坤\",\"0000000\");\r\n		Student p2=new Student(\"辣个蓝人\",\"7777777\");\r\n		Student p3=new Student(\"比利-海灵顿\",\"2222222\");\r\n		Student p4=new Student(\"Faker\",\"6666666\");\r\n		Student p5=new Student(\"The Shy\",\"???????\");\r\n		List<Student>list=new ArrayList<Student>();\r\n		list.add(p1);list.add(p2);list.add(p3);list.add(p4);list.add(p5);\r\n		System.out.println(\"小黄的电话簿\\n\");\r\n		for(int i=0;i<list.size();i++){\r\n			System.out.print(((Student)list.get(i)).name);\r\n			System.out.println(((Student)list.get(i)).phonenum);\r\n		}\r\n	}\r\n}					   \r\n					   ',40,35,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5516,49,568,122,'import java.util.Calendar; \r\npublic class Date {\r\n	public static void main(String[] args) {\r\n		Calendar cal=Calendar.getInstance();\r\n		System.out.println(\"当前的日期和时间\");\r\n		System.out.println(cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\");\r\n		cal.add(Calendar.DATE,10);\r\n		System.out.println(\"距当前时间10天后的日期和时间\");\r\n		System.out.println(cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\");\r\n	}\r\n}\r\n	   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',30,20,'					   ',84,'80,84,84','杜潇,张颖,周璇',NULL),
 (5517,49,568,123,'import java.util.*; \r\npublic class translate{\r\n	public static void main(String[] args) {\r\n		String[]eng={\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\"};\r\n		String[]chi={\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\"};\r\n		Map map=new HashMap();\r\n		for(int i=0;i<eng.length;i++)\r\n			map.put(eng[i], chi[i]);\r\n		System.out.println(\"seven翻译为\"+map.get(\"senven\"));\r\n	}\r\n} \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',30,25,'					   ',0,'','',NULL),
 (5518,49,568,124,'import java.util.*; \r\nclass student{\r\n	String name;\r\n	String tel;\r\n	public student (String name,String tel)\r\n	{this.name=name;this.tel=tel;}\r\n	public String toString()\r\n	{return name+\":\"+tel;}\r\n}\r\npublic class Date {\r\n	public static void main(String[] args) {\r\n         List <student>list=new ArrayList<student>();\r\n		student st1=new student(\"梁\",\"1\");\r\n		student st2=new student(\"振\",\"2\");\r\n		student st3=new student(\"梁振\",\"3\");\r\n		student st4=new student(\"振振\",\"4\");\r\n		student st5=new student(\"梁振振\",\"5\");\r\n		list.add(st1);\r\n		list.add(st2);\r\n		list.add(st3);\r\n		list.add(st4);\r\n		list.add(st5);\r\n		for(student s:list)\r\n		{System.out.println(s);}\r\n	}\r\n}	   			   \r\n					   \r\n					   \r\n					   \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5519,48,587,122,'import java.util.Calendar;\r\npublic class CalendarExample {\r\n	public static void main (String []args){\r\n		Calendar calendar=Calendar.getInstance();\r\n		calendar.add(Calendar.DATE,10);\r\n		System.out.print(calendar.get(Calendar.YEAR)+\"年\");\r\n		System.out.print(calendar.get(Calendar.MONTH)+\"月\");\r\n		System.out.print(calendar.get(Calendar.DATE)+\"日\");\r\n		System.out.print(calendar.get(Calendar.HOUR)+\"-\");\r\n		System.out.print(calendar.get(Calendar.MINUTE)+\"-\");\r\n		System.out.print(calendar.get(Calendar.SECOND));\r\n		\r\n	}\r\n}\r\n		   ',30,30,'					   ',0,'','',NULL),
 (5520,48,587,123,'import java.util.Map;\r\nimport java.util.HashMap;\r\npublic class Translate {\r\n	public static void main(String[]args){\r\n		String[]Chinese={\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\"};\r\n		String[]English={\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\"};\r\n		Map map=new HashMap();\r\n		for(int i=0;i<English.length;i++){\r\n			map.put(English[i], Chinese[i]);\r\n		}\r\n		String test=\"one\";\r\n		System.out.print(test+\"的翻译为：\"+map.get(test));\r\n	\r\n	}\r\n}\r\n		   ',30,28,'					   ',0,'','',NULL),
 (5521,48,587,124,'public class Student {\r\n	private String name;\r\n	private String number;\r\n	public Student(String name,String number){\r\n		this.name=name;\r\n		this.number=number;\r\n	}\r\n	public String getName() {\r\n		return name;\r\n	}\r\n	public void setName(String name) {\r\n		this.name = name;\r\n	}\r\n	public String getNumber() {\r\n		return number;\r\n	}\r\n	public void setNumber(String number) {\r\n		this.number = number;\r\n	}\r\n	public String toString(){\r\n		return name+\"的电话为：\"+number;\r\n	}\r\n}\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic class StudentText {\r\n	public static void main (String[]args){\r\n		Student student1=new Student(\"张三\",\"012345\");\r\n		Student student2=new Student(\"李四\",\"123456\");\r\n		Student student3=new Student(\"王五\",\"234567\");\r\n		Student student4=new Student(\"小明\",\"345678\");\r\n		Student student5=new Student(\"小红\",\"456789\");\r\n		List<Student>students=new ArrayList<Student>();\r\n		students.add(student1);\r\n		students.add(student2);\r\n		students.add(student3);\r\n		students.add(student4);\r\n		students.add(student5);\r\n		for(Student s:students){\r\n			System.out.println(s);\r\n		}\r\n	}\r\n}\r\n',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5522,49,582,122,'package lkl;\r\n\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\npublic class llklk{\r\n  public static void main(String[] args){\r\n    Calendar cal=Calendar.getInstance();//GET CURRENT DATE\r\n    cal.add(Calendar.DAY_OF_YEAR,10);//ADD 10 DAYS\r\n    String YEARMONTHDAY=cal.get(Calendar.YEAR)+\" year \"\r\n                   +(cal.get(Calendar.MONTH)+1)+\" month \"\r\n                   +cal.get(Calendar.DATE)+\" day \";//STORE THE DATE TO \'YEARMONTHDAY\'\r\n    System.out.println(\"the date 10 days later is \"+YEARMONTHDAY);//OUTPUT\r\n}\r\n}\r\n					   \r\n					   \r\n					   ',30,30,'					   ',0,'','',NULL),
 (5523,49,582,123,'package translation;\r\nimport java.util.*;\r\npublic class translation {\r\n	public static void main(String[] args){\r\n		String[] ENGLISH={\"Sandiego\",\"Kaga\",\"Yamato\",\"Saratoga\",\"Mogami\",\"Kasumi\",\"Asashio\",\"Bismark\",\"HSF Harekaze\",\"Fubuki\"};\r\n		String[] CHINESE={\"圣地亚哥\",\"加贺\",\"大和\",\"萨拉托加\",\"最上\",\"霞\",\"朝潮\",\"俾斯麦\",\"晴风\",\"吹雪\"};\r\n		Map<String,String>map=new HashMap<String,String>();\r\n		for(int i=0;i<ENGLISH.length;i++)\r\n			map.put(ENGLISH[i],CHINESE[i]);\r\n		String translation1=\"Sandiego\";\r\n		String translation2=\"Saratoga\";\r\n		String translation3=\"Asashio\";\r\n		String translation4=\"Fubuki\";\r\n		String translation5=\"Kasumi\";\r\n		System.out.println(translation1+\" --Translation: \"+map.get(translation1));\r\n		System.out.println(translation2+\" --Translation: \"+map.get(translation2));\r\n		System.out.println(translation3+\" --Translation: \"+map.get(translation3));\r\n		System.out.println(translation4+\" --Translation: \"+map.get(translation4));\r\n		System.out.println(translation5+\" --Translation: \"+map.get(translation5));\r\n	}\r\n\r\n}\r\n\r\n					   \r\n					   ',30,25,'					   ',0,'','',NULL),
 (5524,49,582,124,'package jk;\r\nimport java.util.*;\r\n\r\nclass Student{\r\n	private String name;\r\n	private String phone;\r\n	public Student(String name,String phone){\r\n		this.name=name;\r\n		this.phone=phone;\r\n	}\r\n	public String toString(){\r\n		return name+\":\"+phone;\r\n	}\r\n}\r\npublic class jk3{\r\n	public static void main(String[] args){\r\n		Student st1=new Student(\"岬哥\",\"147\");\r\n		Student st1=new Student(\"小高\",\"147-\");\r\n		Student st1=new Student(\"老李\",\"199\");\r\n		Student st1=new Student(\"老张\",\"119\");\r\n		Student st1=new Student(\"老徐\",\"911\");\r\n		List<Student>list=new ArrayList<Student>();\r\n		list(int i=0;i<list.size();i++)\r\n		System.out.println(list.get(i));\r\n	}\r\n\r\n}\r\n',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5525,49,571,122,'import java.util.Date;\r\n\r\npublic class The_time_after_10_days {\r\n    void print_the_time_after_10_days(){\r\n        Date date = new Date();\r\n        date.setTime(date.getTime() + 864000000);\r\n        System.out.printf(\"%tY年\",date);\r\n        System.out.printf(\"%tm月\",date);\r\n        System.out.printf(\"%te日\",date);\r\n    }\r\n}\r\n\r\npublic class The_time_after_10_days_TestDrive {\r\n    public static void main(String[] args) {\r\n        The_time_after_10_days date = new The_time_after_10_days();\r\n        date.print_the_time_after_10_days();\r\n    }\r\n}					   ',30,30,'					   ',0,'','',NULL),
 (5526,49,571,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\npublic class Translator {\r\n    Map<String, String> map = new HashMap<String, String>();\r\n    Set<String> set = map.keySet();\r\n    Translator() {\r\n        map.put(\"one\", \"一\");\r\n        map.put(\"two\", \"二\");\r\n        map.put(\"three\", \"三\");\r\n        map.put(\"four\", \"四\");\r\n        map.put(\"five\", \"五\");\r\n        map.put(\"six\", \"六\");\r\n        map.put(\"seven\", \"七\");\r\n        map.put(\"eight\", \"八\");\r\n        map.put(\"nine\", \"九\");\r\n        map.put(\"ten\", \"十\");\r\n    }\r\n    String getMeaning(String word){\r\n        return map.get(word);\r\n    }\r\n}\r\n\r\npublic class TranslatorTestDrive {\r\n    public static void main(String[] args) {\r\n        Translator translator = new Translator();\r\n        for(String e : translator.set){\r\n            System.out.print(e + \" \" + translator.getMeaning(e) + \"\\n\");\r\n        }\r\n    }\r\n}\r\n					   ',30,30,'					   ',0,'','',NULL),
 (5527,49,571,124,'public class Student {\r\n    String Name, Phone;\r\n\r\n    Student(String Name_, String Phone_){Name = Name_; Phone = Phone_;}\r\n    Student(){this(null,null);}\r\n\r\n    void Print_inf(){\r\n        System.out.println(\"Name \" + Name);\r\n        System.out.println(\"Phone \" + Phone + \"\\n\");\r\n    }\r\n}\r\n\r\nimport java.util.*;\r\n\r\npublic class Student_TestDrive {\r\n    public static void main(String[] args) {\r\n        List<Student> students = new ArrayList<Student>();\r\n        students.add(new Student(\"WEST\",\"666\"));\r\n        students.add(new Student(\"EAST\",\"555\"));\r\n        students.add(new Student(\"NORTH\",\"444\"));\r\n        students.add(new Student(\"SOUTH\",\"333\"));\r\n        students.add(new Student(\"SOUTHWEST\",\"222\"));\r\n        for(Student e : students)\r\n            e.Print_inf();\r\n    }\r\n}					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5528,48,602,122,'import java.util.Calendar;\r\npublic class First {\r\n	public static void main(String []args){\r\n		Calendar day = Calendar.getInstance();\r\n		day.add(Calendar.DATE, 10);\r\n		System.out.println(day.get(Calendar.YEAR) + \"年\" + day.get(Calendar.MONTH) + \"月\" + day.get(Calendar.DATE) + \"日\");\r\n	}\r\n}					   ',30,30,'					   ',0,'','',NULL),
 (5529,48,602,123,'import  java.util.*;\r\npublic class Second {\r\n	public static void main(String []args){\r\n		Map<String, String> Trans = new HashMap<String, String>();\r\n		Trans.put(\"one\", \"一\");\r\n		Trans.put(\"two\", \"二\");\r\n		Trans.put(\"three\", \"三\");\r\n		Trans.put(\"four\", \"四\");\r\n		Trans.put(\"five\", \"五\");\r\n		Trans.put(\"six\", \"六\");\r\n		Trans.put(\"seven\", \"七\");\r\n		Trans.put(\"eight\", \"八\");\r\n		Trans.put(\"nine\", \"九\");\r\n		Trans.put(\"ten\", \"十\");\r\n		System.out.println(\"one \" + Trans.get(\"one\"));\r\n		System.out.println(\"two \" + Trans.get(\"two\"));\r\n		System.out.println(\"three \" + Trans.get(\"three\"));\r\n		System.out.println(\"four \" + Trans.get(\"four\"));\r\n		System.out.println(\"five \" + Trans.get(\"five\"));\r\n		System.out.println(\"six \" + Trans.get(\"six\"));\r\n		System.out.println(\"seven \" + Trans.get(\"seven\"));\r\n		System.out.println(\"eight \" + Trans.get(\"eight\"));\r\n		System.out.println(\"nine \" + Trans.get(\"nine\"));\r\n		System.out.println(\"ten \" + Trans.get(\"ten\"));\r\n	}\r\n}\r\n					   ',30,25,'					   ',0,'','',NULL),
 (5530,48,602,124,'//Student.java\r\npublic class Student {\r\n	String name, tel;\r\n	Student(String A, String B){\r\n		name = A;\r\n		tel = B;\r\n	}\r\n	String getName(){ return name; }\r\n	String getTel(){ return tel; }\r\n}\r\n//Test.java\r\nimport java.util.*;\r\npublic class Test {\r\n	public static void main(String[] args){ \r\n		List<Student> students = new ArrayList<Student>();\r\n		students.add(new Student(\"God Xu\", \"111\"));\r\n		students.add(new Student(\"God An\", \"222\"));\r\n		students.add(new Student(\"God Wang\", \"333\"));\r\n		students.add(new Student(\"God Huang\", \"444\"));\r\n		students.add(new Student(\"God God\", \"555\"));\r\n		for(Student i: students){\r\n			System.out.println(i.getName() + \" \" + i.getTel());\r\n		}\r\n	}\r\n}					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5531,48,588,122,'import java.until.Calendar;\r\npublic class CalendarExample{\r\n  public static void main(String[] args){\r\n  Calendar cal=Calendar.getInstance();\r\n  System.out.print(cal.get(Calendar.YEAR+\"年\");\r\n  System.out.print(cal.get(Calendar.MONTH+\"月\");\r\n  System.out.print(cal.get(Calendar.DATE+\"日\");\r\n  cal.add(Calendar.DATE,10);\r\n  System.out.println(cal.get(Calendar.YEAR+\"年\")+cal.get(Calendar.MONTH+\"月\")+cal.get(Calendar.DATE+\"日\"));\r\n}\r\n}\r\n\r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',30,30,'					   ',0,'','',NULL),
 (5532,48,588,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\npublic class Translate{\r\n  public static void main(String[] args){\r\n  Map map=new HashMap();\r\n  String[] word={\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\"};\r\n  String[] chinese={\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\"};\r\n  for(int i=0;i<word.length;i++)\r\n  map.put(word[i],chinese[i]);\r\n  String test=\"one\";\r\n  System.out.println(test+\"翻译：\"+map.get(test));\r\n}\r\n}\r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',30,25,'					   ',0,'','',NULL),
 (5533,48,588,124,'import java.until.ArrayList;\r\nimport java.until.List;\r\nclass Student{\r\n  private String name;\r\n  private int number;\r\n  public String getName(){\r\n  return name;\r\n }\r\npublic String(String name,int number){\r\n  this.name=name;\r\n  this.number=number;\r\n }\r\n}					   \r\npublic class TestStudent{\r\npublic static void main(String[] args){\r\nList students=new Student();\r\nList student1=new Student(\"小明\",\"18827861932\");\r\nList student2=new Student(\"小李\",\"15687368767\");\r\nList student3=new Student(\"小王\",\"15367878978\");\r\nList student4=new Student(\"小张\",\"13678980097\");\r\nList student5=new Student(\"小刘\",\"15267938901\");\r\nint[] list1=addStudents(student1);\r\nint[] list2=addStudents(student2);\r\nint[] list3=addStudents(student3);\r\nint[] list4=addStudents(student4);\r\nint[] list5=addStudents(student5);\r\npublic static string[] addNumberList(Student student){\r\nint n=5;\r\nint[] a={Student.name,Student.number};\r\n\r\nString test=\"小明\";\r\nSystem.out.println(test+\"电话：\"+student.get(test));\r\n				   \r\n}\r\n}					   \r\n					   \r\n					   \r\n					   \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5534,48,610,122,'import java.util.calendar;\r\nimport java.util.timezone;\r\npublic class app{\r\npublic string getdataafterndays(int days){\r\ncalendar calendar = calendar.getinstance(timezone.gettimezone(\"gmt+8\"));\r\ncalendar.settimeinmillis(system.currentimemillis()-1000L*3600*24*days);\r\nreturn calendar.get(calendar.YEAR)+\"-\"+(calendar.get(calendar.MONTH)+1)+\"-\"+calendar.DAY_OF_MONTH)+\"-\"+ calendat.get(calendar.HOUR_OF_DAY)+\"-\"+ calendar.MINUTE)+\":\"+calendar.get(calendar.SECOND)\r\n}\r\npublic static void main(string[] args){\r\nsystem.out.println(new test().getdataafterndays(10));\r\n}\r\n}',30,30,'					   ',0,'','',NULL),
 (5535,48,610,123,'import java.util.*;\r\npublic class app{\r\nstring[] static void main (string[]args){\r\nstring[]en ={\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\"};\r\nstring[]ch ={\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\"}；\r\nmap<string,string>map = new hashmap<sting,string>();\r\nfor(int i = 0;i<en.length;i++){\r\nmap.put(en[i],ch[i]);\r\nstring exam = \"five\"；\r\nsystem.out.println(exam+\"翻译:\"+map.get(exam));\r\n}\r\n}\r\n}		   ',30,25,'					   ',0,'','',NULL),
 (5536,48,610,124,'import java.util.*;\r\nclass student{\r\npublic string name;\r\npublic string number;\r\npublic student(string name,string number){\r\n   this.name = name;\r\n   this.number = number;\r\n}\r\npublic string show(){\r\n   return name+\"/n\"+number;\r\n}\r\n\r\n}	   \r\npublic class test{\r\n  public static void main(string[]args){\r\nstudent a = new student(\"赵\",\"01\");\r\nstudent b = new student(\"钱\",\"02\");\r\nstudent c = new student(\"孙\",\"03\");\r\nstudent d = new student(\"李\",\"04\");\r\nstudent e = new student(\"周\",\"05\");\r\nlist<student>list = new Arraylist<student>();\r\nlist.add(a);\r\nlist.add(b);\r\nlist.add(c);\r\nlist.add(d);\r\nlist.add(e);\r\nsystem.out.println(list.get(0));\r\nsystem.out.println(list.get(1));\r\nsystem.out.println(list.get(2));\r\nsystem.out.println(list.get(3));\r\nsystem.out.println(list.get(4));\r\n}\r\n}',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5537,49,569,122,'import java.util.Calendar;\r\npublic class CalendarDate {\r\n	public static void main(String[] args) {\r\n		Calendar date=Calendar.getInstance();\r\n		System.out.println(\"当前的日期和时间:\"+date.get(Calendar.YEAR)+\"年\"+date.get(Calendar.MONTH)+\"月\"+date.get(Calendar.DATE)+\"日\");\r\n		date.add(Calendar.DATE,10);\r\n		System.out.println(\"距当前日期10天后的日期和时间:\"+date.get(Calendar.YEAR)+\"年\"+date.get(Calendar.MONTH)+\"月\"+date.get(Calendar.DATE)+\"日\");\r\n	}\r\n}					   \r\n					   \r\n					   \r\n					   ',30,20,'					   ',80,'80','梁振',NULL),
 (5538,49,569,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\npublic class MAp{\r\n	public static void main(String[] args) {\r\n		Map<String,String>map=new HashMap<String,String>();\r\n		map.put(\"one\",\"一\");\r\n		map.put(\"two\",\"二\");\r\n		map.put(\"three\",\"三\");\r\n		map.put(\"four\",\"四\");\r\n		map.put(\"five\",\"五\");\r\n		map.put(\"six\",\"六\");\r\n		map.put(\"seven\",\"七\");\r\n		map.put(\"eight\",\"八\");\r\n		map.put(\"nine\",\"九\");\r\n		map.put(\"ten\",\"十\");\r\n		System.out.println(\"six的翻译为\"+map.get(\"six\"));\r\n	}\r\n}					   \r\n					   \r\n					   \r\n					   ',30,25,'					   ',0,'','',NULL),
 (5539,49,569,124,'import java.util.ArrayList;\r\nimport java.util.List;\r\npublic class student {\r\n   String Name;\r\n   int Phone;\r\n   public student(String n,int p)\r\n   {\r\n	   Name=n;\r\n	   Phone=p;\r\n   }\r\n   public String toString()\r\n   {\r\n	  return Name+\"  \"+Phone;   \r\n   }\r\n}\r\npublic class Test {\r\n	public static void main(String[] args) {\r\n		student a=new student(\"曹操\",1813021001);\r\n		student b=new student(\"张飞\",1813021002);\r\n		student c=new student(\"刘备\",1813021003);\r\n		student d=new student(\"关羽\",1813021004);\r\n		student e=new student(\"赵云\",1813021005);\r\n		List<student> stu=new ArrayList<student>();\r\n		stu.add(a);\r\n		stu.add(b);\r\n		stu.add(c);\r\n		stu.add(d);\r\n		stu.add(e);\r\n		for(student s:stu)\r\n		{\r\n			System.out.println(s);\r\n		}\r\n	}\r\n}\r\n					   \r\n					   \r\n					   \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5540,48,599,122,'\r\nimport java.util.*;\r\npublic class Test001 {\r\n\r\n	/**\r\n	 * @param args\r\n	 */\r\n	public static void main(String[] args) {\r\n		// TODO Auto-generated method stub\r\n		Calendar cal = Calendar.getInstance();\r\n		cal.add(Calendar.DATE, 10);\r\n		String strDate=cal.get(Calendar.YEAR)+\"年\"+(cal.get(Calendar.MONTH)+1)+\"月\"+cal.get(Calendar.DATE)+\"日\"+cal.get(Calendar.HOUR)+\"时\"+cal.get(Calendar.MINUTE)+\"分\"+cal.get(Calendar.SECOND)+\"秒\";\r\n		System.out.println(\"十天后的时间：\"+strDate);\r\n	}\r\n\r\n}\r\n			   ',30,30,'					   ',0,'','',NULL),
 (5541,48,599,123,'import java.util.*;\r\npublic class Test002 {\r\n\r\n	/**\r\n	 * @param args\r\n	 */\r\n	public static void main(String[] args) {\r\n		// TODO Auto-generated method stub\r\n		Map<String,String>map=new HashMap<String,String>();\r\n		String[] English={\"Red\",\"Orange\",\"Yello\",\"Green\",\"Cyan\",\"Blue\",\"Purple\",\"Whit\",\"Black\",\"Colour\"};\r\n		String[] Chinese={\"红色\",\"橙色\",\"黄色\",\"绿色\",\"青色\",\"蓝色\",\"紫色\",\"白色\",\"黑色\",\"彩色\"};\r\n		\r\n		for(int i=0;i<10;i++){\r\n			map.put(English[i], Chinese[i]);\r\n		}\r\n		\r\n		for(int i=0;i<10;i++){\r\n			System.out.println(\"\\\"\"+English[i]+\"\\\"\"+\"的中文是：\"+\"\\\"\"+map.get(English[i])+\"\\\"\");\r\n		}\r\n	}\r\n\r\n}\r\n	   ',30,25,'					   ',0,'','',NULL),
 (5542,48,599,124,'import java.util.*;\r\nclass Student{\r\n	private String name;\r\n	private String phone;\r\n	\r\n	public Student(String name,String phone){\r\n		this.name=name;\r\n		this.phone=phone;\r\n	}\r\n	\r\n	public String toString(){\r\n		return name+\"\\t\"+phone;\r\n	}\r\n}\r\nclass Show{\r\n	public static void show(){\r\n		System.out.println(\"姓名\"+\"\\t\"+\"电话\");\r\n		System.out.println(\"----------------\");\r\n	}\r\n}\r\npublic class Test003 {\r\n\r\n	/**\r\n	 * @param args\r\n	 */\r\n	public static void main(String[] args) {\r\n		// TODO Auto-generated method stub\r\n		Student stu1=new Student(\"Van\",\"73011595\");\r\n		Student stu2=new Student(\"CXK\",\"71028903\");\r\n		Student stu3=new Student(\"药酱\",\"5222222\");\r\n		Student stu4=new Student(\"芦本苇\",\"3751866\");\r\n		Student stu5=new Student(\"JOJO\",\"38189278\");\r\n		List<Student>newsStu=new ArrayList<Student>();\r\n		newsStu.add(stu1);\r\n		newsStu.add(stu2);\r\n		newsStu.add(stu3);\r\n		newsStu.add(stu4);\r\n		newsStu.add(stu5);\r\n		Show.show();\r\n		for(Student s:newsStu){\r\n			System.out.println(s);\r\n		}\r\n	}\r\n\r\n}\r\n		   ',40,40,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5543,49,564,122,'import java.util.Calendar;\r\npublic class test {\r\n	public static void main(String[] args) {\r\n    Calendar cal=Calendar.getInstance();\r\n    System.out.println(\"当前日期和时间：\");\r\n    System.out.println(cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\");\r\n    cal.add(Calendar.DATE,10);\r\n    System.out.println(\"十天后是：\");\r\n    System.out.println(cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\");\r\n	}\r\n}					   \r\n					   ',30,20,'					   \r\n					   \r\n					   ',90,'84,90','梁振,周璇',NULL),
 (5544,49,564,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\npublic class test {\r\n	public static void main(String[] args) {\r\n    Map<String, String> map=new HashMap<String, String>();\r\n    map.put(\"one\",\"1\");\r\n    map.put(\"two\", \"2\");\r\n    map.put(\"three\", \"3\");\r\n    map.put(\"four\", \"4\");\r\n    map.put(\"five\", \"5\");\r\n    map.put(\"six\", \"6\");\r\n    map.put(\"seven\", \"7\");\r\n    map.put(\"eight\", \"8\");\r\n    map.put(\"nine\", \"9\");\r\n    map.put(\"ten\", \"10\");\r\n    System.out.println(\"英文单词：\"+map.keySet());\r\n    System.out.println(\"中文意思：\"+map.values());\r\n    System.out.println(\"three的中文含义为\"+map.get(\"three\"));\r\n	}\r\n}					   \r\n					   ',30,30,'					   \r\n					   \r\n					   ',0,'','',NULL),
 (5545,49,564,124,'import java.util.List;\r\nimport java.util.ArrayList;\r\nclass Student{\r\n	String name;\r\n	String number;\r\n	public Student() {}\r\n	public Student(String name,String number) {\r\n		this.name=name;\r\n		this.number=number;\r\n	}\r\n	public String getname(){\r\n		return name;\r\n	}\r\n	public String getnumber(){\r\n		return number;\r\n	}\r\n}\r\npublic class test {\r\n	public static void main(String[] args) {\r\n    List<Student> students=new ArrayList<Student>();\r\n    students.add(new Student(\"甲\",\"18821780326\"));\r\n    students.add(new Student(\"乙\",\"15021780326\"));\r\n    students.add(new Student(\"丙\",\"15321780326\"));\r\n    students.add(new Student(\"丁\",\"13821780326\"));\r\n    students.add(new Student(\"戊\",\"17121780326\"));\r\n    System.out.println(students.get(0).getname()+students.get(0).getnumber());\r\n    System.out.println(students.get(1).getname()+students.get(1).getnumber());\r\n    System.out.println(students.get(2).getname()+students.get(2).getnumber());\r\n    System.out.println(students.get(3).getname()+students.get(3).getnumber());\r\n    System.out.println(students.get(4).getname()+students.get(4).getnumber());\r\n	}\r\n}					   \r\n					   ',40,35,'					   \r\n					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5546,48,592,122,'import java.util.Calendar;\r\npublic class CalendarExample {\r\n  public static void main (String[] args){\r\n	  Calendar cal=Calendar.getInstance();\r\n	  cal.add(Calendar.DATE,10);\r\n	  System.out.println(\"10天后的日期和时间：\");\r\n	  System.out.println(cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\"+cal.get(Calendar.MINUTE)+\":\"+cal.get(Calendar.SECOND));\r\n 	  \r\n	  \r\n  }\r\n}\r\n				   ',30,25,'					   \r\n					   \r\n					   ',0,'','',NULL),
 (5547,48,592,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\npublic class Translation {\r\n	public static void main(String[] args){\r\n		Map map=new HashMap();\r\n		String[] eng={\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\"};\r\n		String[] chi={\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\"};\r\n		for(int i=0;i<eng.length;i++)\r\n			map.put(eng[i],chi[i]);\r\n		for(int j=0;j<eng.length;j++)\r\n			System.out.println(\"英文单词：\"+eng[j]+\"中文翻译：\"+chi[j]);\r\n	}\r\n\r\n}					   ',30,35,'					   \r\n					   \r\n					   ',0,'','',NULL),
 (5548,48,592,124,'import java.util.ArrayList;\r\nimport java.util.List;\r\nclass Student{\r\n	String name;\r\n	String telephone;\r\n	public Student(String name,String telephone){\r\n		this.name=name;\r\n		this.telephone=telephone;\r\n	}\r\n	public String toString(){\r\n		return \"姓名：\"+name+\" \"+\"电话号码：\"+telephone;\r\n	}\r\n	\r\n}\r\npublic class Tset {\r\n	public static void main(String[] args){\r\n		List <Student>student=new ArrayList<Student>();\r\n		Student st1=new Student(\"甲\",\"12345\");\r\n		Student st2=new Student(\"乙\",\"23456\");\r\n		Student st3=new Student(\"丙\",\"34567\");\r\n		Student st4=new Student(\"丁\",\"45678\");\r\n		Student st5=new Student(\"戊\",\"56789\");\r\n		student.add(st1);student.add(st2);student.add(st3);student.add(st4);student.add(st5);\r\n		for(int i=0;i<student.size();i++)\r\n			System.out.println(student.get(i));		\r\n		\r\n	}\r\n\r\n}					   ',40,25,'					   \r\n					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5549,48,595,122,'					   \r\n	import java.util.Date;\r\n\r\nimport java.text.SimpleDateFormat;\r\n\r\npublic class riqi{\r\n	public static void main(String [] args)\r\n	{\r\n         SimpleDateFormat d=new SimpleDateFormat(\"YYYY年—MM月—DD日\");\r\n	Date dt=d.parse(\"2019-11-30\");\r\n	String str=d.format(dt);\r\n	System.out.println(\"日期\"+str)；\r\n	}				   \r\n					   \r\n}					   ',30,30,'					   ',0,'','',NULL),
 (5550,48,595,123,'					   \r\nimport java.util.*;\r\npublic class Ex3 {\r\n	public static void main (String [] args)throws Exception{\r\n		\r\n	Map<String,String> map=getDictionary();\r\n	String str =\"love\";\r\n	if (map.containsKey(str)){\r\n		System.out.println(map.get(str));\r\n	}\r\n	else{\r\n		System.out.println(\"没有这个个词\"));\r\n	}\r\n}\r\n\r\n	public staticMap<String,String>getDictionary()\r\n{\r\n		Map<String,String> map=new HashMap<String,String>();\r\n		map.put1(\"苹果\", \"apple\");\r\n		map.put2(\"地图\", \"map\");\r\n		map.put3(\"爱\", \"love\");\r\n		map.put4(\"小鸟\", \"bird\");\r\n		map.put5(\"猫\", \"cat\");\r\n		map.put6(\"狗\", \"dog\");\r\n		map.put7(\"字典\", \"dictionary\");\r\n		return map;\r\n		\r\n		 \r\n	}\r\n	\r\n}\r\n				   \r\n					   \r\n					   ',30,25,'					   ',0,'','',NULL),
 (5551,48,595,124,'import java.util.*;\r\nclass student {\r\n	public String name;\r\n	public String tel;\r\n  public student(String name,String tel)\r\n{\r\n	this.name=name;\r\n	this.tel=tel;\r\n}\r\npublic String toString(){\r\n	return name+tel;\r\n}\r\n}\r\n\r\npublic  class Test{\r\n	public static void main (String [] args){\r\n	student st1=new student(\"张三\",\"123456783\");\r\n	student st2=new student(\"李四\",\"643666788\");\r\n	student st3=new student(\"王五\",\"165752367\");\r\n	student st4=new student(\"赵六\",\"127687347\");\r\n	student st5=new student(\"刘七\",\"164778480\");\r\n	student st6=new student(\"牛八\",\"196754864\");\r\n	List<student>list=new ArryList<student>();\r\n	list.add(st1);\r\n	list.add(st2);\r\n	list.add(st3);\r\n	list.add(st4);\r\n	list.add(st5);\r\n	list.add(st6);\r\n	for(int i=0;i<list.size();i++)\r\n		System.out.println(list.get(i));\r\n	}\r\n}   \r\n					   \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5552,49,560,122,'import java.util.Calendar;\r\npublic class CalendarSkip {\r\n	public static void main(String args[]){\r\n		Calendar cal=Calendar.getInstance();\r\n		System.out.println(\"时：分：秒\");\r\n		System.out.print(cal.get(Calendar.YEAR)+\"年\");\r\n		System.out.print(cal.get(Calendar.MONTH)+\"月\");\r\n		System.out.println(cal.get(Calendar.DATE)+\"日\");\r\n		System.out.print(cal.get(Calendar.HOUR)+\":\");\r\n		System.out.print(cal.get(Calendar.MINUTE)+\":\");\r\n		System.out.println(cal.get(Calendar.SECOND));\r\n		cal.add(Calendar.DATE,10);\r\n		System.out.println(\"十天后是：\");\r\n		System.out.println(cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\");\r\n		\r\n	}\r\n\r\n}				   ',30,30,'					   ',0,'','',NULL),
 (5553,49,560,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\npublic class Translate {\r\n	public static void main(String[] args){\r\n		String [] eng={\"Yellow\",\"Red\",\"Green\",\"Orange\",\"Purple\",\"Blue\",\"White\",\"Black\",\"Brown\",\"Color\"};\r\n		String[] chs={\"黄色\",\"红色\",\"绿色\",\"橙色\",\"紫色\",\"蓝色\",\"白色\",\"黑色\",\"棕色\",\"颜色\"};\r\n		Map<String,String>\r\n		map=new HashMap<String,String>();\r\n		for(int i=0;i<eng.length;i++)\r\n			map.put(eng[i],chs[i]);\r\n		String test=\"Red\";\r\n		System.out.println(test+\"翻译为：\"+map.get(test));\r\n		String test1=\"Yellow\";\r\n		System.out.println(test1+\"翻译为：\"+map.get(test1));\r\n		String test2=\"Green\";\r\n		System.out.println(test2+\"翻译为：\"+map.get(test2));\r\n		String test3=\"Blue\";\r\n		System.out.println(test3+\"翻译为：\"+map.get(test3));\r\n		String test4=\"Brown\";\r\n		System.out.println(test4+\"翻译为：\"+map.get(test4));\r\n		String test5=\"White\";\r\n		System.out.println(test5+\"翻译为：\"+map.get(test5));\r\n		String test6=\"Black\";\r\n		System.out.println(test6+\"翻译为：\"+map.get(test6));\r\n		String test7=\"Purple\";\r\n		System.out.println(test7+\"翻译为：\"+map.get(test7));\r\n		String test8=\"Orange\";\r\n		System.out.println(test8+\"翻译为：\"+map.get(test8));\r\n		String test9=\"Color\";\r\n		System.out.println(test9+\"翻译为：\"+map.get(test9));\r\n		}\r\n\r\n}					   ',30,25,'					   ',0,'','',NULL),
 (5554,49,560,124,'import java.util.*;\r\nclass student{\r\n	public String name;\r\n	public String phone;\r\n	public student(String name,String phone ){\r\n		this.name=name;\r\n		this.phone=phone;\r\n	}\r\n	public String toString(){\r\n		return name+\":\"+phone;\r\n	}\r\n}\r\npublic class StudentInformation{\r\n	public static void main(String[] args){\r\n		student st1=new student(\"小明\",\"12345678910\");\r\n		student st2=new student(\"李华\",\"32897269878\");\r\n		List<student>list=new ArrayList<student>();\r\n		list.add(st1);\r\n		list.add(st2);\r\n		for(int i=0;i<list.size();i++)\r\n			System.out.println(list.get(i));\r\n	}\r\n	\r\n}				   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5555,49,570,122,'import java.util.Date;\r\nimport java.util.Calendar;\r\nimport java.text.SimpleDateFormat;\r\n\r\npublic class Datey {\r\n    public static void main(String[] args){\r\n        SimpleDateFormat d=new SimpleDateFormat(\"yyyy年MM月dd日\");\r\n        Date date=new Date();\r\n        Calendar calendar=Calendar.getInstance();\r\n        calendar.setTime(date);\r\n        calendar.add(Calendar.DATE,10);\r\n        System.out.println(d.format(calendar.getTime()));\r\n    }\r\n}',30,20,'					   ',92,'92','杨臣',NULL),
 (5556,49,570,123,'public static void main(String[] args) throws Exception {\r\n        Map<String, String> map = geDictionary();\r\n        String str = \"love\";\r\n        if (map.containsKey(str)) {\r\n            System.out.println(map.get(str));\r\n        } else \r\n       {\r\n            System.out.println(\"没有这个词\");\r\n        }\r\n    }\r\n\r\n    public static Map<String, String> geDictionary() {\r\n        Map<String, String> map = new HashMap<String, String>();\r\n        map.put(\"dictionary\", \"字典\");\r\n        map.put(\"map\", \"地图\");\r\n        map.put(\"eat\", \"吃\");\r\n        map.put(\"cat\", \"猫\");\r\n        map.put(\"dog\", \"狗\");\r\n        map.put(\"love\", \"爱\");\r\n        map.put(\"pink\", \"粉红色\");\r\n        map.put(\"red\", \"红色\");\r\n        map.put(\"shoe\", \"鞋子\"); \r\n        map.put(\"chat\", \"聊天\");\r\n        return map;\r\n    }	   ',30,30,'					   ',0,'','',NULL),
 (5557,49,570,124,'import java.util.ArrayList;\r\nimport java.util.List;\r\npublic class Student {\r\n    String name;\r\n    String number;\r\n    public Student(){\r\n\r\n    }\r\n    public Student(String name,String number){\r\n        this.name=name;\r\n        this.number=number;\r\n    }\r\n}\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Test {\r\n    public static void main(String[] args){\r\n        List students=new ArrayList();\r\n        Student s1=new Student(\"Tu\",\"123\");\r\n        Student s2=new Student(\"Ja\",\"321\");\r\n        Student s3=new Student(\"Qu\",\"132\");\r\n        Student s4=new Student(\"Wa\",\"213\");\r\n        Student s5=new Student(\"Io\",\"231\");\r\n        students.add(s1);\r\n        students.add(s2);\r\n        students.add(s3);\r\n        students.add(s4);\r\n        students.add(s5);\r\n    }\r\n}\r\n			   ',40,30,'					   ',84,'84','杨臣',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5558,49,579,122,'import java.util.Calendar;\r\npublic class date {\r\npublic static void main(String[] args) {\r\n		// TODO Auto-generated method stub\r\nCalendar a=Calendar.getInstance();\r\na.add(Calendar.DATE,10);\r\nSystem.out.print(\"10天后的时间是：\");\r\nSystem.out.println(a.get(Calendar.YEAR)+\"年\"+a.get(Calendar.MONTH)+\"月\"+a.get(Calendar.DATE)+\"日\");\r\n\r\n	}\r\n\r\n}\r\n			   \r\n					   ',30,20,'					   ',80,'80','张钰成',NULL),
 (5559,49,579,123,'import java.util.*;\r\npublic class tra {\r\n	public static void main(String[] args) {\r\n		String[] a={\"dog\",\"cat\",\"apple\",\"green\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\"};\r\n		String[] b={\"狗\",\"猫\",\"苹果\",\"绿色\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\"};\r\n		Map<String,String>map=new HashMap<String,String>();\r\n		int i;\r\n		for (i=0;i<a.length;i++);\r\n		map.put(a[i],b[i]);\r\n		String test=\"dog\";\r\n		System.out.println(test+\"翻译成中文是：\"+map.get(test));\r\n	}\r\n\r\n}\r\n\r\n					   ',30,25,'					   ',0,'','',NULL),
 (5560,49,579,124,'import java.util.*;\r\nclass student1{\r\n	private int phone;\r\n	private String name;\r\n	public student1(int phone,String name){\r\n	this.phone=phone;\r\n	this.name=name;\r\n	}\r\n	public String Output(){\r\n		return phone+\"  \"+name;\r\n	}\r\n}\r\n	public class student{\r\n	public static void main(String[] args) {\r\n		student1 a=new student1(1,\"一\");\r\n		student1 b=new student1(2,\"二\");\r\n		student1 c=new student1(3,\"三\");\r\n		student1 d=new student1(4,\"四\");\r\n		student1 e=new student1(5,\"五\");\r\n		List<student1>students=new ArrayList<student1>();\r\n		students.add(a);\r\n		students.add(b);\r\n		students.add(c);\r\n		students.add(d);\r\n		students.add(e);\r\n		for(int i=1;i<students.size();i++)\r\n		{System.out.println(students.get(i));}\r\n	}\r\n\r\n	}\r\n			   \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5561,49,563,122,'	import java.util.Calendar;\r\npublic class ten {\r\n\r\n	public static void main(String[] args) {\r\nCalendar cal=Calendar.getInstance();\r\nSystem.out.print(\"当前的时间为:\");\r\nSystem.out.println(cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\");\r\ncal.add(Calendar.DATE,10);\r\nSystem.out.print(\"10天后是:\");\r\nSystem.out.println(cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\");\r\n	}\r\n\r\n}				   \r\n					   ',30,20,'					   \r\n					   \r\n					   ',90,'84,90','梁振,张颖',NULL),
 (5562,49,563,123,'	import java.util.*;\r\npublic class map {\r\n	public static void main(String[] args) {\r\nString[]eng={\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\"};\r\nString[]cha={\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"};\r\nMap<String,String>map=new HashMap<String,String>();\r\nfor(int i=0;i<eng.length;i++)\r\n{\r\n	map.put(eng[i], cha[i]);\r\n}\r\nSystem.out.println(\"请输入一个单词:\");\r\nScanner s=new Scanner(System.in);\r\nString test;\r\ntest=s.nextLine();\r\nSystem.out.println(test+\"翻译为:\"+map.get(test));\r\ns.close();\r\n	}\r\n\r\n}\r\n				   \r\n					   ',30,30,'					   \r\n					   \r\n					   ',0,'','',NULL),
 (5563,49,563,124,'	import java.util.*;\r\n\r\nclass Student{\r\n	private int phonenum;\r\n	private String name;\r\n	public Student(int phonenum,String name){\r\n		this.phonenum=phonenum;\r\n		this.name=name;\r\n	}\r\n	public String toString(){\r\n		return phonenum+\":\"+name;\r\n	}\r\n}\r\npublic class tong {\r\n\r\n	public static void main(String[] args) {\r\nStudent st1=new Student(123,\"张三\");\r\nStudent st2=new Student(456,\"李四\");\r\nStudent st3=new Student(789,\"王五\");\r\nStudent st4=new Student(147,\"周六\");\r\nStudent st5=new Student(258,\"吴七\");\r\nList<Student>students=new ArrayList<Student>();\r\nstudents.add(st1);students.add(st2);\r\nstudents.add(st3);students.add(st4);\r\nstudents.add(st5);\r\nfor(int i=0;i<students.size();i++)\r\n{\r\n	System.out.println(students.get(i));\r\n}\r\n\r\n\r\n	}\r\n\r\n}				   \r\n					   ',40,35,'					   \r\n					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5564,48,589,122,'import java.util.Calendar;\r\npublic class CalendarExample{\r\n  public static void main(String[] args){\r\n     Calendar cal=Calendar.getInstance();\r\n     System.out.println(\"当前的日期：\");\r\n     System.out.print(\"年-月-日\")\r\n     System.out.print(cal.get(Calendar.YEAR)+\"-\");\r\n     System.out.print(cal.get(Calendar.MONTH)+\"-\");\r\n     System.out.print(cal.get(Calendar.DATE)+\" \");\r\n     cal.add(Calendar.DATE,10);\r\n     System.out.println(\"10天后的日期是：\");\r\n     System.out.print(cal.get(Calendar.YEAR)+\"年\");\r\n     System.out.print(cal.get(Calendar.MONTH)+\"月\");\r\n     System.out.print(cal.get(Calendar.DATE)+\"日\");\r\n}\r\n}          			   \r\n					   \r\n					   \r\n					   \r\n					   ',30,30,'					   \r\n					   ',0,'','',NULL),
 (5565,48,589,123,'	import java.util.HashMap;\r\n        import java.util.Map;\r\n public class HashMapExampleEdit{\r\n    public static void main(String[] args){\r\n     String[]English={\"small\",\"big\",\"pig\",\"pink\",\"blue\",\"black\",\"red\",\"one\",\"two\",\"ten\",\"six\"};\r\n     String[]Chinese={\"小\",\"大\",\"猪\",\"粉色\",\"蓝色\",\"黑色\",\"红色\",\"一\",\"二\",\"十\",\"六\"};\r\nMap<String,String>map=new HashMap<String,String>();\r\nfor(int i=0;i<English.length;i++)\r\nmap.put(English[i],Chinese[i]);\r\nString test=\"six\";\r\nSystem.out.println(test+\"中文翻译：\"+map.get(test));\r\n}\r\n}\r\n       				   \r\n					   \r\n					   \r\n					   \r\n					   ',30,25,'					   \r\n					   ',0,'','',NULL),
 (5566,48,589,124,'import java.util.ArrayList;\r\nimport java.util.List;\r\nclass Student{\r\nString name;\r\nString Tel;\r\npublic String getName(){\r\n     return name;}\r\npublic Student(String name,String Tel){\r\nthis.name=name;\r\nthis.Tel=Tel;\r\n}\r\npublic String toString(){\r\nreturn name+\"的电话号码是：\"+Tel;}\r\n} \r\n public class ADDRESS{\r\n    public static void main(String[] args){\r\n    Student stu1=new Student(\"小红\",\"789456\");\r\n    Student stu2=new Student(\"小米\",\"789123\");\r\n    Student stu3=new Student(\"小明\",\"456123\");\r\n    Student stu4=new Student(\"小张\",\"123456\");\r\n    Student stu5=new Student(\"小强\",\"741085\");\r\n   List<Student>newStu=new ArrayList<Student>();\r\n   newStu.add(stu1);\r\n   newStu.add(stu2);\r\n   newStu.add(stu3);\r\n   newStu.add(stu4);\r\n   newStu.add(stu5);\r\n  for(Student s: newStu){\r\nSystem.out.println(s);\r\n}\r\n}\r\n}			   \r\n				\r\n					   \r\n					   ',40,35,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5567,48,609,122,'			import java.util.Calendar;//导入calendar类，对日期和时间进行编辑\r\npublic class output_local_time {\r\n	public static void main(String [] args)\r\n	{\r\n		Calendar time =Calendar.getInstance();//calendar类中的getInstance方法，返回默认时区的calendar类中的对象\r\n		time.add(Calendar.DATE, 10);\r\n		String output_time=time.get(Calendar.YEAR)+\"年\"\r\n		+(time.get(Calendar.MONTH)+1)+\"月\"\r\n		+time.get(Calendar.DATE)+\"日\";\r\n		\r\n		\r\n		System.out.println(\"十天后的日期为：\"+output_time);\r\n	}\r\n\r\n}\r\n		   ',30,30,'					   ',0,'','',NULL),
 (5568,48,609,123,'			import java.util.*;\r\npublic class fanyi {\r\n	public static void main(String[] args)\r\n	{\r\n		HashMap english_map=new HashMap();//构造hashmap对象english_map\r\n\r\n		english_map.put(\"car\", \"汽车\");\r\n		english_map.put(\"plane\", \"飞机\");\r\n		english_map.put(\"ship\", \"轮船\");\r\n		english_map.put(\"tank\", \"水罐\");\r\n		english_map.put(\"apple\", \"苹果\");\r\n		english_map.put(\"japan\", \"日本\");\r\n		english_map.put(\"aristocracy\", \"贵族\");\r\n		english_map.put(\"owerwatch\", \"守望者\");\r\n		english_map.put(\"league\", \"联盟\");\r\n		english_map.put(\"fighter\", \"搏斗\");\r\n		String mingzi;//声明string类型的变量mingzi\r\n		Scanner cin=new Scanner(System.in);\r\n		mingzi=cin.nextLine();//将输入的值赋给String类型的变量mingzi\r\n		System.out.println(english_map.get(mingzi));//将english_m中与mingzi对应的值进行输出\r\n	}\r\n\r\n}		   ',30,25,'					   ',0,'','',NULL),
 (5569,48,609,124,'			import java.util.ArrayList;\r\nimport java.util.List;\r\nclass student{\r\n	 String name;\r\n	 String number;\r\n	public student(String a,String b)\r\n	{\r\n	   this.name=name;\r\n	this.number=number;\r\n	}\r\n	\r\n	\r\n}\r\npublic class  toTeststudent {\r\n	public static void main(String[]args)\r\n	{\r\n	    List students=new ArrayList();\r\n		student program[]=new student[5];\r\n		program[0]=new student(\"李浩\",\"12138\");\r\n		program[1]=new student(\"顾海泉\",\"68412\");\r\n		program[2]=new student(\"张鸭\",\"465435\");\r\n		program[3]=new student(\"董海林\",\"15758\");\r\n		program[4]=new student(\"张陈鹏\",\"118\");\r\n		for(int j=0;j<5;j++)\r\n		{\r\n			students.add(program[j].name+program[j].number);\r\n		}\r\n			System.out.println(students);\r\n		\r\n	}\r\n\r\n}\r\n		   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5570,48,594,122,'import java.util.Date;\r\nimport java.util.Calendar;\r\nimport java.text.SimpleDateFormat;\r\npublic class FA {\r\n	public static void main(String args[])\r\n	{\r\n		SimpleDateFormat ds=new SimpleDateFormat(\"yyyy年-MM月-dd日-hh点-mm分-ss秒\");\r\n		Calendar wq=Calendar.getInstance();\r\n		wq.add(Calendar.DATE, 10);\r\n		Date bb=wq.getTime();\r\n		String fd=ds.format(bb);\r\n		System.out.println(fd);\r\n	}\r\n	\r\n\r\n}\r\n		   \r\n					   ',30,30,'					   ',0,'','',NULL),
 (5571,48,594,123,'import java.util.Map;\r\nimport java.util.HashMap;\r\nimport java.util.Scanner;\r\nimport java.util.Set;\r\npublic class Test {\r\n	public static void main(String args[])\r\n	{   Scanner a=new Scanner(System.in);\r\n		Map<String,String> s=new HashMap<String,String>();\r\n		s.put(\"Strong\", \"强壮\");\r\n		s.put(\"accusalate\", \"控诉\");\r\n		s.put(\"degrad\", \"轻视\");\r\n		s.put(\"corralate\", \"使联系\" );\r\n		s.put(\"revenue\",\"利益\");\r\n		s.put(\"bench\",\"替补队员\");\r\n		s.put(\"leap\",\"跳跃\");\r\n		s.put(\"rage\",\"愤怒\");\r\n		s.put(\"grid\",\"网格\");\r\n		s.put(\"reluctant\",\"不情愿\");\r\n		Set<String> k=s.keySet();\r\n    	while(true)\r\n		{\r\n			String g=a.next();\r\n			if(k.contains(g))\r\n              System.out.println(s.get(g));\r\n			else\r\n			System.out.println(\"未找到\");\r\n		}\r\n		\r\n	}\r\n	\r\n\r\n}\r\n\r\n					   ',30,25,'					   ',0,'','',NULL),
 (5572,48,594,124,'import java.util.List;\r\nimport java.util.ArrayList;\r\nclass Student{\r\n	String name;\r\n	String number;\r\n	Student(String a,String b)\r\n	{\r\n		name=a;\r\n		number=b;\r\n	}\r\n}\r\npublic class HA {\r\n	public static void main(String []args)\r\n	{\r\n		Student a=new Student(\"小赵\",\"123456\");\r\n		Student b=new Student(\"小李\",\"12345\");\r\n		Student c=new Student(\"小王\",\"1234\");\r\n		Student d=new Student(\"小点\",\"123\");\r\n		Student e=new Student(\"小花\",\"123672\");\r\n		List<Student> students=new ArrayList<Student>();\r\n		students.add(a);\r\n		students.add(b);\r\n		students.add(c);\r\n		students.add(d);\r\n		students.add(e);\r\n		for(Student s:students)\r\n		{\r\n			System.out.println(s.name+\" \"+s.number);\r\n		}\r\n		\r\n	}\r\n	\r\n\r\n}\r\n			   \r\n					   ',40,40,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5573,48,603,122,'import java.until.Calendar;\r\npublic class Ex12{\r\n	public static void main(String[] args){\r\n		Calendar cal=Calendar.getlnstance();\r\n		cal.add(Calendar.DAY_OF_YEAR,10)\r\n		String strData=cal.get(Calendar.YEAR)+\"年\"+(cal.get(Calendar.MONTH)+1)+\"月\"+cal.get(Calendar.DATE)+\"日\"；\r\n		System.out.println(\"10天后的日期为：\"+strDate);\r\n	}\r\n}\r\n				   ',30,20,'					   ',88,'80,85,81,88','曾金波,徐素皓,赵明辉,张凡',NULL),
 (5574,48,603,123,'import java .until.*;\r\npublic class Ex22{\r\n	public static void main(String[] args){\r\n		String[] eng={\"Apple\",\"Orange\",\"Green\"};\r\n		String[] chs={\"苹果\",\"橘子\",\"绿色\"}；\r\n		Map<String.String>map=new HashMap<String,String>();\r\n		for(int i=0;i<eng.length;i++)\r\n		map.put(eng[i],chs[i]);\r\n		String test=\"Orange\";\r\n		System.out.println(test+\"翻译\"+map.get(test));\r\n	}\r\n}				   ',30,25,'					   ',0,'','',NULL),
 (5575,48,603,124,'import java.util.*;\r\nclass Student{\r\n	private String name;\r\n	private String phone;\r\n	public Student(String name,String phone){\r\n		this.name=name;\r\n		this.phone=phone;\r\n}\r\n	public String toString(){\r\n		return name+\":\"+phone;\r\n	}\r\n}\r\npublic class Test{\r\n	public static void main(String[] args){\r\n		Student st1=new Student(\"John\",\"23214\");\r\n		Student st2=new Student(\"Alice\",\"4563\");\r\n                Student st3=new Student(\"David\",\"38873\");\r\n                Student st4=new Student(\"Mike\",\"72893\");\r\n                Student st5=new Student(\"Marry\",\"789686\");\r\n		List<Student>list =new ArrayList<Student>();\r\n		list.add(st1);list.add(st2);list.add(st3);list.add(st4);list.add(st5);\r\n		for(int i=0;i<list.size();i++)\r\n			System.out.println(list.get(i));\r\n	}\r\n}\r\n\r\n\r\n				   ',40,30,'					   ',80,'80','赵明辉',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5576,49,576,122,'package work;\r\nimport java.util.Calendar;\r\n\r\npublic class TestDate {\r\n	public static void main(String [] args) {\r\n		Calendar riqi=Calendar.getInstance();\r\n		System.out.print(\"当前的日期和时间：\");\r\n		System.out.println(riqi.getTime());\r\n		System.out.println(\"从现在开始十天以后的日期是：\");\r\n		System.out.print(riqi.get(Calendar.YEAR)+\"年\"+riqi.get(Calendar.MONTH)+\"月\");\r\n		riqi.add(Calendar.DATE, 10);\r\n		System.out.println(riqi.get(Calendar.DATE)+\"日  \");\r\n		System.out.print(riqi.get(Calendar.HOUR)+\":\"+riqi.get(Calendar.MINUTE)+\":\"+riqi.get(Calendar.SECOND));\r\n	}\r\n}\r\n\r\n\r\n  \r\n\r\n\r\n		   ',30,20,'					   ',81,'81','杨会龙',NULL),
 (5577,49,576,123,'package work;\r\nimport java.util.Map;\r\nimport java.util.HashMap;\r\n\r\npublic class FanYi {\r\n	public static void main(String [] args){\r\n		String [] English={\"cat\",\"dog\",\"pig\",\"chick\",\"cow\",\"deer\",\"donkey\",\"monkey\",\"duck\",\"fox\"};\r\n		String [] Chinese={\"猫\",\"狗\",\"猪\",\"鸡\",\"母牛\",\"鹿\",\"驴\",\"猴子\",\"鸭子\",\"狐狸\"};\r\n		Map Fanyi=new HashMap();\r\n		for(int i=0;i<10;i++)\r\n		{\r\n			Fanyi.put(English[i], Chinese[i]);\r\n		}\r\n		String animal=\"pig\";\r\n		System.out.println(animal+\"的英文是：\"+Fanyi.get(animal));	 \r\n	}\r\n}\r\n		   ',30,25,'					   ',0,'','',NULL),
 (5578,49,576,124,'package work;\r\nimport java.util.*;\r\n\r\nclass Student{\r\n	String name;\r\n	String tel;\r\n	public Student(String n,String tel){\r\n		name=n;\r\n		tel=tel;\r\n	}\r\n}\r\npublic class toTestStudent {\r\n	public static void main(String [] args) {\r\n		String [] name={\"jack\",\"tom\",\"tim\",\"jenny\",\"xiaoming\"};\r\n		String [] tel={\"7797\",\"9897\",\"7865\",\"8765\",\"9876\"};\r\n		List students=new ArrayList();\r\n		Student object[]=new Student[5];\r\n		for(int i=0;i<5;i++){\r\n			object[i].name=name[i];\r\n			object[i].tel=tel[i];\r\n		}\r\n		for(int i=0;i<5;i++)\r\n		{\r\n			students.add(object[i].name+object[i].tel);\r\n		}\r\n		System.out.println(students);\r\n	}\r\n\r\n}			   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5579,49,584,122,'public class HQL{	\r\npublic class void main(String[] args){\r\n             Calendar cal=Calendar.getInstance();\r\n             cal.add(Calendar.DAY_OF_YEAR,10);\r\n             String strDate=cal.get(Calendar.YEAR)+\"年\"+cal.get((Calendar.MONTH)+1)+\"月\"+cal.get(Calendar.DATE)+\"日\"\r\n        System.out.println(\"10天后的日期为:\"+strDate);\r\n}\r\n}				   ',30,30,'					   ',0,'','',NULL),
 (5580,49,584,123,'public class HUA{\r\n      public static void main(String[] args){\r\n          String[]  eng={\"Cat\",\"Dog\",\"Pig\",\"panda\",\"Rabbit\",\"Duck\",\"Chicken\",\"Donkey\",\"Mouse\",\"Bird\"};\r\n          String[]  chs={\"猫\",\"狗\",\"猪\",\"熊猫\",\"兔子\",\"鸭子\",\"鸡\",\"驴子\",\"鼠\",\"鸟\"};\r\n          Map<String,String>map=new HashMap<String,String>();\r\n          for(int i=0;i<eng.length;i++)\r\n          map.put(eng[i],chs[i]);\r\n          String test=\"Rabbit\"+\"Donkey\";\r\n          System.out.println(test+\"翻译:\"+map.get(test));\r\n         			   ',30,25,'					   ',0,'','',NULL),
 (5581,49,584,124,'class Student{\r\n      private String name;\r\n      private String phone;\r\n      public Student(String name,String phone){\r\n         this.name=name;this.phone=phone;}\r\n      public String toString(){\r\n         return name+\":\"+phone;}\r\n}\r\npublic class Test{\r\n    public static void main(String[] args){\r\n       Student st1=new Student(\"John\",\"18755036239\");\r\n       Student st2=new Student(\"Alice\",\"18823062204\");\r\n       Student st3=new Student(\"Marry\",\"18742101426\");\r\n       Student st4=new Student(\"Sam\",\"13612044856\");\r\n       Student st5=new Student(\"Bob\",\"14558692014\");\r\n       List<Student>list=new ArrayList<Student>();\r\n       List.add(st1);List.add(st2);List.add(st3);List.add(st4);List.add(st5);\r\n       for(int i=0;i<list.size();i++)\r\n         System.out.println(List.get(i));\r\n}\r\n}\r\n				   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5582,49,580,122,'import java.util.Calendar;\r\npublic class CalendarExample {\r\n\r\n	public static void main(String[] args) {\r\n		Calendar cal=Calendar.getInstance();\r\n		cal.add(Calendar.DATE,10);\r\n		System.out.print(\"十天后是：\");\r\n		System.out.println(cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\"\r\n				+cal.get(Calendar.HOUR)+\"时\"+cal.get(Calendar.MINUTE)+\"分\"+cal.get(Calendar.SECOND)+\"秒\");\r\n		\r\n\r\n	}\r\n\r\n}					   \r\n					   ',30,20,'					   ',82,'82','秦梓韵',NULL),
 (5583,49,580,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\npublic class Translation {\r\n	public static void main(String[] args) {\r\n		Map<String,String>map=new HashMap<String,String>();\r\n		map.put(\"one\", \"一\");\r\n		map.put(\"two\", \"二\");\r\n		map.put(\"three\", \"三\");\r\n		map.put(\"four\", \"四\");\r\n		map.put(\"five\", \"五\");\r\n		map.put(\"six\", \"六\");\r\n		map.put(\"seven\", \"七\");\r\n		map.put(\"eight\", \"八\");\r\n		map.put(\"nine\", \"九\");\r\n		map.put(\"ten\", \"十\");\r\n		for(Map.Entry<String, String>entry:map.entrySet()){\r\n			String key=entry.getKey();\r\n			String value=entry.getValue();\r\n			System.out.println(key+\"翻译为：\"+value);\r\n		}\r\n		String test=\"eight\";\r\n		System.out.println(test+\"翻译为：\"+map.get(test));\r\n	}\r\n\r\n}					   \r\n					   ',30,20,'					   ',84,'84','吴媛媛',NULL),
 (5584,49,580,124,'import java.util.*;\r\nimport java.util.List;\r\nclass Student{\r\n	public String name;\r\n	public String number;\r\n	public Student(String name,String number){\r\n		this.name=name;\r\n		this.number=number;\r\n	}\r\n	public String toString(){\r\n		return name+\"的电话号码为:\"+number;\r\n	}\r\n}\r\npublic class Test {\r\n	public static void main(String[] args) {\r\n		Student students1=new Student(\"A同学\",\"1234\");\r\n		Student students2=new Student(\"B同学\",\"2345\");\r\n		Student students3=new Student(\"C同学\",\"3456\");\r\n		Student students4=new Student(\"D同学\",\"4567\");\r\n		Student students5=new Student(\"E同学\",\"5678\");\r\n		List<Student>list=new ArrayList<Student>();\r\n		list.add(students1);\r\n		list.add(students2);\r\n		list.add(students3);\r\n		list.add(students4);\r\n		list.add(students5);\r\n		for(Student s:list){\r\n			System.out.println(s);\r\n		}\r\n\r\n	}\r\n\r\n}\r\n					   \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5585,48,605,122,'import java.util.Calendar;\r\npublic class 	t1	{\r\n	public static void main(String [] args) {\r\n		Calendar=Calendar.getInstance();\r\n		System.out.print(\"今天的日期：\");\r\n		System.out.println(dt.getTime());\r\n		cal.add(Calendar.DAY_OF_YEAR,10);\r\n		System.out.print(dt.get(Calendar.YEAR)+\"年\");\r\n		System.out.print(dt.get(Calendar.MONTH)+\"月\");\r\n		dt.add(Calendar.DATE, 10);\r\n		System.out.print(dt.get(Calendar.DATE)+\"日  \");\r\n		System.out.println(\"10天后的日期:\"+strDate);\r\n	}\r\n					   ',30,30,'					   ',0,'','',NULL),
 (5586,48,605,123,'		import java.util.*;\r\npublic class Translate {\r\n	public static void main(String [] args) {\r\n		Map<String,String>Fruit=new HashMap<String,String>();\r\n		Scanner fruit=new Scanner(System.in);\r\n		word.put(\"majesty\",\"皇帝\");\r\n		word.put(\"loard\",\"贵族\");\r\n		word.put(\"servant\",\"仆人\");\r\n		word.put(\"master\",\"主人\");\r\n		word.put(\"headmaster\",\"校长\");\r\n		word.put(\"superman\",\"超人\");\r\n		word.put(\"god\",\"上帝\");\r\n		word.put(\"zero\",\"零\");\r\n		word.put(\"rabit\",\"兔子\");\r\n		word.put(\"detective\",\"侦探\");\r\n		System.out.print(\"输入下列单词中的任意一个:\");\r\n		System.out.println(\"majesty,loard,servant,master,superman,god,zero,detective,rabit,\");\r\n		String word=word.nextLine();\r\n		}\r\n		System.out.println(word.get(word));\r\n	}\r\n\r\n}\r\n\r\n			   ',30,30,'					   ',0,'','',NULL),
 (5587,48,605,124,'	import java.util.*;\r\nclass Student{\r\n	private String name;\r\n	private string phone;\r\n	public Student(String name,String phone){\r\n	}\r\n}\r\npublic class tostudent  {\r\n	public static void main(String [] args) {\r\n		List students=new List();\r\n		Student object[]= Student[5];\r\n		object[1]= Student(\"小王\",\"1378995553\");\r\n		object[2]= Student(\"小飞\",\"3536748964\");\r\n		object[3]= Student(\"小天\",\"0742566326\");\r\n		object[4]= Student(\"小红\",\"1579378437\");\r\n		object[5]= Student(\"小黄\",\"7394287954\");\r\n		for(int i=1;i<6;i++)\r\n		{\r\n			students.add(object[i].name+object[i].phone);\r\n		}\r\n		System.out.println(list.get(i));\r\n	}\r\n\r\n}				   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5588,48,607,122,'import java.util.riqi;\r\npublic class zcp{                                                 //定义zcp类\r\n      public static void main(String[] args){\r\n\r\nriqi r= riqi.getInstance();\r\nr.add(riqi.day_of_year,10);\r\nString strdate=r.get(riqi.year)+\"年\"+（r.get(riqi.month)+1）+\"月\"+r.get(riqi.date)+\"日\";	//strdate由年月日组合而成\r\n\r\nSystem.out.println(\"10天后的日期为:\"+strdate);}                     //输出结果\r\n}				   \r\n					   \r\n					   ',30,30,'					   ',0,'','',NULL),
 (5589,48,607,123,'	import java.util.*;\r\npublic class zcp{                 //定义zcp类\r\n    public static void main(String[] args){\r\n\r\n          String[] e={\"bull\",\"sheep\",\"pig\"，\"tiger\",\";rabbit\",\"dog\",\"cat\",\"duck\",\"chicken\",\"fish\"};  //定义e串\r\n          String[] c={\"牛\"，\"羊\",\"猪\",\"虎\",\"兔\",\"狗\",\"猫\",\"鸭\",\"鸡\",\"鱼\"};  //定义c串\r\n\r\n          Map<String,String>map=new HashMap<String,String>();  //利用泛型Map\r\n\r\n          for(int i=0;i<e.length;i++)\r\n          map.put(e[i],c[i]);\r\n          String test=\"sheep\";\r\n          System out.println(test+\"翻译：\"+map.get(test));//    输出结果\r\n      }\r\n}				   \r\n					   \r\n					   ',30,25,'					   ',0,'','',NULL),
 (5590,48,607,124,'import   java.util.*;\r\nclass Student{\r\n    private String mingzi;\r\n    private String dianhua;\r\n    public Student(String mingzi,String dianhua) {\r\n       this.mingzi=mingzi;\r\n       this.dianhua=dianhua;\r\n    }\r\n    public String toString(){\r\n       return mingzi+\":\"+dianhua;\r\n    }\r\n}\r\npublic class Test{\r\n    public static void main(String[] args){\r\n       Student a=new Student(\"张三\"，\"123\");\r\n       Student b=new Student(\"李四\"，\"456\");\r\n       Student c=new Student(\"赵五\"，\"789\");\r\n       Student d=new Student(\"顾六\"，\"741\");\r\n       Student e=new Student(\"刘二\"，\"963\");\r\n         list.add(a);\r\n         list.add(b);\r\n         list.add(c);\r\n         list.add(d);\r\n         list.add(e);\r\nfor(int i=0;i<list.size();i++)\r\n       System.out.println(list.get(i));\r\n    }\r\n}\r\n       \r\n       \r\n       \r\n       \r\n					   \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5591,49,566,122,'import java.util.Calendar;\r\npublic class dusao {\r\n	public static void main(String[] args) {\r\n		Calendar cal=Calendar.getInstance();\r\n		System.out.println(\"当前日期(年月日)：\");\r\n		System.out.print(cal.get(Calendar.YEAR)+\"年\");\r\n		System.out.print(cal.get(Calendar.MONTH)+\"月\");\r\n		System.out.println(cal.get(Calendar.DATE)+\"日\");\r\n		cal.add(Calendar.DAY_OF_YEAR,10);\r\n		String strDate = cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\";\r\n		System.out.println(\"十天后的日期为：\"+strDate);\r\n	}\r\n\r\n}\r\n		   ',30,30,'					   ',0,'','',NULL),
 (5592,49,566,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\npublic class duxiao1 {\r\n	public static void main(String[] args) {\r\n		String[] eng={\"Human\",\"and\",\"wolf\",\"both\",\"live\",\"in\",\"group\",\"one\",\"two\",\"three\"};\r\n		String[] cn={\"人类\",\"和\",\"狼\",\"都\",\"生活\",\"在…里面\",\"群\",\"一\",\"二\",\"三\"};\r\n		Map<String,String>map=new HashMap<String,String>();\r\n		for(int a=0;a<eng.length;a++)\r\n			map.put(eng[a], cn[a]);\r\n		String test=\"Human\";\r\n		System.out.println(test+\"翻译:\"+map.get(test));\r\n	}\r\n\r\n}\r\n					   ',30,25,'					   ',0,'','',NULL),
 (5593,49,566,124,'import java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nclass Student{\r\n	private String name;\r\n	private String phone;\r\n    public Student(String n,String p){\r\n    	name=n;\r\n    	phone=p;\r\n    }\r\n    public String toString(){\r\n    	return name+\":\"+phone;\r\n    }\r\n}\r\n\r\npublic class Test {\r\n\r\n	public static void main(String[] args) {\r\n		Student s1=new Student(\"ayi\",\"123\");\r\n		Student s2=new Student(\"aer\",\"456\");\r\n		Student s3=new Student(\"asan\",\"789\");\r\n		Student s4=new Student(\"asi\",\"233\");\r\n		Student s5=new Student(\"awu\",\"332\");\r\n	List<Student>list=new ArrayList<Student>();\r\n	list.add(s1);\r\n	list.add(s2);\r\n	list.add(s3);\r\n	list.add(s4);\r\n	list.add(s5);\r\n	for(int a=0;a<list.size();a++)\r\n		System.out.println(list.get(a));\r\n	\r\n	}\r\n\r\n}				   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5594,49,574,122,'import java.util.Calender;\r\npublic class Ex12{\r\n public static void main(String[] args){\r\n  Calender cal=Calender.gentlnstance();\r\n  cal.add(Calender.DAY_OF_YEAR,10);\r\n  String strDate=cal.get(Calender.YEAR)+\"年\"+(cal.get(Calender.MONTH)+1)+\"月\"+cal.get(Calender.DATE)+\"日\";\r\n  System.out.println(\"十天后的日期为：\"+strDate);\r\n }\r\n}',30,20,'					   ',81,'90,84,82,81,81','徐百川,张凡,卢姿彤,杨利英,简江进',NULL),
 (5595,49,574,123,'import java.util.*;\r\npublic class Ex22{\r\n public static void main(String[] args){\r\n  String[] eng={\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\"};\r\n  String[] chs={\"一\"，\"二\"，\"三\"，\"四\"，\"五\"，\"六\"，\"七\"，\"八\"，\"九\"，\"十\"}；\r\n  Map map=new HashMap();\r\n   for(int i=0;i<eng.length;i++)\r\n   map.put(eng[i],chs[i]);\r\n  String test=\"一\";\r\n  System out.println(test+\"翻译：\"+map.get(test));\r\n }\r\n}',30,25,'					   ',0,'','',NULL),
 (5596,49,574,124,'import java util.*;   \r\nclass Student{\r\n private String name;\r\n private String phone; \r\n public Student(String name,String phone){\r\n  this.name=name;\r\n  this.phone=phone;\r\n  }\r\n public String toString(){\r\n  return name+\":\"+phone;\r\n  }\r\n}\r\npublic class Ex21{\r\n public static void main(String[] args){\r\n  Studeng st1=new Student(\"张三\",\"123\");\r\n  Studeng st2=new Student(\"李四\",\"456\");\r\n  Studeng st3=new Student(\"王二\",\"789\");\r\n  Studeng st4=new Student(\"陈一\",\"321\");\r\n  Studeng st5=new Student(\"杨五\",\"654\");\r\n  List<Student>list=new ArrayList<Student>();\r\n  list.add(st1);\r\n  list.add(st2);\r\n  list.add(st3);\r\n  list.add(st4);\r\n  list.add(st5);\r\n  for(int i=0;i<list.size();i++)\r\n   System.out.println(list.get(i));\r\n }\r\n}',40,30,'					   ',80,'80','董海林',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5597,49,577,122,'package aaaa;\r\nimport java.util.Calendar;\r\npublic class CalendarExample {\r\n	public static void main(String[] args) {\r\n		Calendar cal=Calendar.getInstance();\r\n		System.out.println(\"当前的日期和时间:\");\r\n		System.out.print(cal.get(Calendar.YEAR)+\"年\");\r\n		System.out.print(cal.get(Calendar.MONTH)+\"月\");\r\n		System.out.print(cal.get(Calendar.DATE)+\"日\");\r\n		System.out.print(cal.get(Calendar.HOUR)+\"时\");\r\n		System.out.print(cal.get(Calendar.MINUTE)+\"分\");\r\n		System.out.println(cal.get(Calendar.SECOND)+\"秒\");\r\n		cal.add(Calendar.DATE, 10);\r\n		System.out.println(\"10天后是\");\r\n		System.out.print(cal.get(Calendar.YEAR)+\"年\");\r\n		System.out.print(cal.get(Calendar.MONTH)+\"月\");\r\n		System.out.print(cal.get(Calendar.DATE)+\"日\");\r\n		System.out.print(cal.get(Calendar.HOUR)+\"时\");\r\n		System.out.print(cal.get(Calendar.MINUTE)+\"分\");\r\n		System.out.println(cal.get(Calendar.SECOND)+\"秒\");\r\n		\r\n	}\r\n}		   ',30,20,'					   ',84,'84','柏轶昕',NULL),
 (5598,49,577,123,'package aaaa;\r\nimport java.util.*;\r\npublic class FanYi {\r\n	public static void main(String[] args) {\r\n		Map map=new HashMap();\r\n		String[] english={\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\"};\r\n		String[] chinese={\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\"};\r\n		for(int i=0;i<10;i++)\r\n			map.put(english[i], chinese[i]);\r\n		System.out.println(map.get(\"one\"));\r\n	}\r\n\r\n}\r\n			   ',30,25,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5599,49,577,124,'package aaaa;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nclass Student{\r\n	String name;\r\n	String phone;\r\n	public Student(String a,String b){\r\n		name=a;phone=b;\r\n	}\r\n}\r\npublic class Test1 {\r\n	public static void main(String[] args) {\r\n		List list=new ArrayList();\r\n		Student st1=new Student(\"zmj\",\"123456\");\r\n		Student st2=new Student(\"cd\",\"456789\");\r\n		Student st3=new Student(\"xh\",\"418521\");\r\n		Student st4=new Student(\"jjj\",\"963456\");\r\n		Student st5=new Student(\"yhl\",\"456741\");\r\n		list.add(st1.name+st1.phone);\r\n		list.add(st2.name+st2.phone);\r\n		list.add(st3.name+st3.phone);\r\n		list.add(st4.name+st4.phone);\r\n		list.add(st5.name+st5.phone);\r\n		for(int i=0;i<list.size();i++)\r\n			System.out.println(list.get(i));\r\n	}\r\n\r\n} ',40,35,'					   ',0,'','',NULL),
 (5600,48,608,122,'import java.util .dat;\r\npublic class d{\r\npublic static void main(String[] args){\r\ndat da =dat.getinstance();\r\nda.add(dat.day_of_year,10);\r\nString strDate=cal.get(dat.year)+\"年\"\r\n+(da.get(dat.month)+1)+\"月\"\r\n+da.get(da.date)+\"日\";\r\nSystem.out.println(\"10天后的日期为:\"+strdate);\r\n}\r\n}\r\n					   \r\n					   \r\n					   ',30,30,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5601,48,608,123,'import java.util.*;\r\npublic class word{\r\npublic static void main(String[] args){\r\nString[] eng={\"Apple\",\"Orange\",\"Pear\",\"Banana\",\"Grape\",\"Red\",\"Green\",\"White\",\"Yellow\",\"Blue\"};\r\nString[] chs={\"苹果\",\"橘子\",\"梨子\",\"香蕉\",\"葡萄\",\"红色\",\"绿色\",\"白色\",\"黄色\",\"蓝色\"};\r\nMap<String,String>map=new HashMap<String,String>();\r\nfor(int i=0;i<eng.length;i++)\r\nmap.put(eng[i],chs[i]);\r\nString test=\"Orange\";\r\nSystem.out.println(test+\"翻译\":\"+map.get(test));\r\n}\r\n}\r\n					   \r\n					   \r\n					   ',30,20,'					   ',0,'','',NULL),
 (5602,48,608,124,'import java.util.*;\r\nclass Student{\r\nprivate String name;\r\nprivate String phone;\r\npublic Student(String name,String phone){\r\nthis.name=name;\r\nthis.phone=phone;\r\n}\r\npublic String toString(){\r\nreturn name+\":\"+phone;\r\n}\r\n}\r\npublic class Test{\r\npublic static void main(String[] args){\r\nstudent st1=new student(\"李大\",\"0001\");\r\nstudent st2=new student(\"王二\",\"0002\");\r\nstudent st3=new student(\"张三\",\"0003\");\r\nstudent st4=new student(\"夏四\",\"0004\");\r\nstudent st5=new student(\"谢五\",\"0005\");\r\nlist<student>list=new arraylist<student>();\r\nlist.add(st1);\r\nlist.add(st2);\r\nlist.add(st3);\r\nlist.add(st4);\r\nlist.add(st5);\r\nfor(int i=0;i<list.size();i++)\r\nSystem.out.println(list.get(i));\r\n}\r\n}\r\n					   \r\n					   \r\n					   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (5603,48,601,122,'	import java.text.SimpleDateFormat;\r\n        import java.util.Calendar;\r\n        import java.util.Date;\r\n   public class test{\r\n   public static void main(String[] args)\r\n{\r\n        SimpleDateFormat sdf=new SimpleDateFormat(\"yyyy年MM月dd日\");\r\n   Date date =new Date();\r\n   Calendar c=Calendar.getlnstance();\r\n   c.setTime(date);\r\n   c.add(Calendar.DATE,10);\r\n   System.out.println(sdf.format(c.getTime()));\r\n}\r\n}				   ',30,25,'					   ',87,'87','吴媛媛',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5604,48,601,123,'		import java.util.*;\r\n                public class Ex22\r\n{\r\n                  public static void main (String[] args){\r\n                    String[] eng={\"Father\",\"Mother\",\"Sister\"};\r\n                    String[] chs={\"爸爸\",\"妈妈\",\"姐姐\"};\r\n                    Map<String,String>map=new HashMap<String,String>();\r\n                    for (int i=0;i<eng.length;i++)\r\n                    map.put(eng[i],chs[i]);\r\n                    String test=\"Mother\";\r\n                    System.out.println(test+\"翻译\":\"+map.get(test));\r\n}\r\n}			   ',30,25,'					   ',0,'','',NULL),
 (5605,48,601,124,'	import java.util.*;\r\n        class Student{\r\n         private String name;\r\n         private String phone;\r\n         public Student (String name,String phone){\r\n             this.name=name;\r\n             this.phone=phone;\r\n}\r\n         public String toString(){\r\n           return name+\":\"+phone;\r\n}\r\n}\r\n         public class Text{\r\n          public static void main (String[] args){\r\n            Student st1=new Student (\"John\",\"23214\");\r\n            Student st2=new Student (\"joe\",\"55642\");\r\n            Student st3=new Student (\"Mary\",\"44512\");\r\n            Student st4=new Student (\"Amy\",\"33425\");\r\n            Student st5=new Student (\"Alice\",\"44567\");\r\n         list<Student>list=new ArrayList<Student>();\r\n         list.add(st1);list.add(st5);\r\n         for(int i=0;i<list.size();i++)\r\n            System.out.println(list.get (i));\r\n}\r\n}				   ',40,35,'					   ',0,'','',NULL),
 (5606,49,583,122,'					   import java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\npublic class Test {\r\n  public static void main(String[] args) {\r\n  SimpleDateFormat SDF= new SimpleDateFormat(\"xxxx年xx月xx日\");\r\n  Date date = new Date();\r\n  Calendar ca= Calendar.getInstance();\r\n  ca.setTime(date);\r\n  ca.add(Calendar.DATE, 10);\r\n  System.out.println(SDF.format(ca.getTime()));\r\n  }\r\n}\r\n					   ',30,20,'					   \r\n					   ',83,'91,83','吴媛媛,魏宗邦',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5607,49,583,123,'					   import  java.util.Hashmap\r\nimport  java.util.Map\r\npublic calss HashMap{\r\n  public static void main (String [] arg){\r\n         Map<String,String>map=new HashMap< String,String>();\r\n         map.put(“one”,”一”);\r\n         map.put(“two”,”二”);\r\n         map.put(“three”,”三”);\r\n         map.put(“four”,”四”);\r\n         map.put(“five”,”五”);\r\n         map.put(“six”,”六”);\r\n         map.put(“seven”,”七”);\r\n         map.put(“eight”,”八”);\r\n         map.put(“nine”,”九”);\r\n         map.put(“ten”,”十”);\r\n   for (Map.Entry<String,String>entry:map.entrySet()){\r\n   String key=entry.getKey();\r\n   String value=entry.getValue();\r\n   System.out.println(“英文=”+key+”,对应的中文翻译为=”+value);}\r\n   }\r\n}\r\n\r\n					   ',30,30,'					   \r\n					   ',0,'','',NULL),
 (5608,49,583,124,'					   import java.util.*;\r\nclass Student{\r\nprivate String name;\r\nprivate String phone;\r\npublic Student(String name,String phone){\r\nthis.name = name;\r\nthis.phone = phone;\r\n}\r\npublic String toString(){\r\nreturn \"姓名\"+\":\"+name+\" \"+\"电话\"+\":\"+phone;\r\n}\r\n}\r\npublic class Test{\r\n   public static void main(String [] args){\r\nStudent st1=new Student(\"John\",\"152643\");\r\n Student st2=new Student(\"Joye\",\"132645\");\r\nStudent st3=new Student(“Mike”,”145623”);\r\nStudent st4=new Student(“Milly”,”123465”);\r\nStudent st5=new Student(“Tom”,”132654”)\r\nList<Student>students=new ArrayList<Student>();\r\nstudents.add(st1); \r\nstudents.add(st2); \r\nstudents.add(st3);\r\nstudents.add(st4);\r\nstudents.add(st5);\r\nfor(int i=0;i<students.size();i++)\r\nSystem.out.println(students.get(i));\r\n}\r\n}\r\n\r\n					   ',40,30,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5609,49,575,122,'		\r\nimport java.util.Date;\r\n//编程计算距当前时间10天后的日期和时间，并用“xxxx年xx月xx日”的格式输出新的日期和时间。\r\n\r\nclass disDate{\r\n	Date date=new Date();\r\n	String STRDATE;\r\n	String strYear;\r\n	String strMonth;\r\n	String strDate;\r\n	String strTime;\r\n	void changeDate() {\r\n		STRDATE=date.toString();\r\n		strYear=STRDATE.substring(24,28);\r\n		strMonth=STRDATE.substring(4,7);\r\n		strDate=STRDATE.substring(8,10);\r\n		strTime=STRDATE.substring(11,19);\r\n		System.out.println(\"今天的日期是：\"+date);\r\n		System.out.print(\"十天后日期是：\");\r\n		System.out.print(strYear+\"年\");\r\n		translate(strMonth);\r\n		System.out.print(strMonth+\"月\");\r\n		int date=Integer.parseInt(strDate);\r\n		System.out.print((date+10)+\"日\");\r\n		System.out.println(strTime);\r\n	}\r\n	String translate(String month) {\r\n		final String a=\"Jan\";\r\n		final String b=\"Feb\";\r\n		final String c=\"Mar\";\r\n		final String d=\"Apr\";\r\n		final String e=\"May\";\r\n		final String f=\"Jun\";\r\n		final String g=\"Jul\";\r\n		final String h=\"Aug\";\r\n		final String i=\"Sep\";\r\n		final String j=\"Oct\";\r\n		final String k=\"Nov\";\r\n		final String l=\"Dec\"; \r\n		switch(month) {\r\n		case a:month=\"1\";break;\r\n		case b:month=\"2\";break;\r\n		case c:month=\"3\";break;\r\n		case d:month=\"4\";break;\r\n		case e:month=\"5\";break;\r\n		case f:month=\"6\";break;\r\n		case g:month=\"7\";break;\r\n		case h:month=\"8\";break;\r\n		case i:month=\"9\";break;\r\n		case j:month=\"10\";break;\r\n		case k:month=\"11\";break;\r\n		case l:month=\"12\";break;\r\n		}\r\n		return strMonth=month;\r\n	}\r\n}\r\n\r\npublic class TestDate {\r\n	public static void main(String [] args) {\r\n		disDate dt=new disDate();\r\n		dt.changeDate();\r\n	}\r\n}\r\n			   ',30,30,'					   ',0,'','',NULL),
 (5610,49,575,123,'package yhlzhenshuai;\r\n\r\nimport java.util.*;\r\n\r\npublic class translate {\r\npublic static void main(String[] args) {\r\n		// TODO Auto-generated method stub\r\n		String []yingyu={\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\"};\r\n		String []zhongwen={\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\"};\r\n        Map translate=new HashMap();\r\n        translate.put(\"one\",\"一\");\r\n        translate.put(\"two\",\"二\");\r\n	    translate.put(\"three\",\"三\");\r\n	    translate.put(\"four\",\"四\");\r\n	    translate.put(\"five\",\"五\");\r\n	    translate.put(\"six\",\"六\");\r\n	    translate.put(\"seven\",\"七\");\r\n	    translate.put(\"eight\",\"八\");\r\n	    translate.put(\"nine\",\"九\");\r\n	    translate.put(\"ten\",\"十\");\r\n	    System.out.println(translate.get(\"three\"));\r\n	    \r\n}\r\n}\r\n',30,25,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5611,49,575,124,'	package work;\r\nimport java.util.*;\r\n\r\nclass Student{\r\n	String name;\r\n	String tel;\r\n	public Student(String n,String t){\r\n		name=n;tel=t;\r\n	}\r\n}\r\npublic class toTestStudent {\r\n	public static void main(String [] args) {\r\n		\r\n		String [] name={\"小米\",\"小孩\",\"小杰\",\"小杨\",\"小夏\"};\r\n		String [] tel={\"70123797\",\"98165516197\",\"7164158165\",\"8715615665\",\"9156156876\"};		\r\n		List students=new ArrayList();\r\n		Student object[]=new Student[5];\r\n		object[0].name=name[0];\r\n		object[1].name=name[1];\r\n		object[2].name=name[2];\r\n		object[3].name=name[3];\r\n		object[4].name=name[4];\r\n		object[5].name=name[5];\r\n		object[6].name=name[6];\r\n		object[7].name=name[7];\r\n		object[8].name=name[8];\r\n		object[9].name=name[9];\r\n		\r\n		for(int i=0;i<5;i++)\r\n		{\r\n			students.add(object[i].name+object[i].tel);\r\n		}\r\n		System.out.println(students);\r\n	}\r\n\r\n}	   ',40,35,'					   ',0,'','',NULL),
 (5612,48,600,122,'public class  day1{\r\npublic static void main(String[] args) {\r\nCalendar cal=Calendar.getInstance();\r\ncal.add(Calendar.day of yera,10);\r\nString strDate=cal.get(Calendar.YEAR)+\"年\"+(cal.get(Calendar.MONTH)+1)+\"月\"+cal.get(Calendar.DATE)+\"日\";\r\nSystem.out.println(\"距当天10天后的日期为：\"+strDate);\r\n}\r\n}\r\n\r\n		   ',30,25,'					   ',80,'80','徐百川',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5613,48,600,123,'public class translation{\r\n  public static viod main (String[] args){\r\nHashMap map=mew HashMap();\r\nmap.put(\"one\",\"一\");\r\nmap.put(\"tow\",\"二\");\r\nmap.put(\"three\",\"三\");\r\nmap.put(\"four\",\"四\");\r\nmap.put(\"five\",\"五\");\r\nmap.put(\"six\",\"六\");\r\nmap.put(\"seven\",\"七\");\r\nmap.put(\"eight\",\"八\");\r\nmap.put(\"nine\",\"九\");\r\nmap.put(\"ten\"，\"十\");\r\nString name;\r\nScanner sc=new\r\nScanner(System.in);\r\nname=sc.nextLine();\r\nSystem.out.println(map.get(name));\r\n}}				   ',30,25,'					   ',0,'','',NULL),
 (5614,48,600,124,' class accpstudent{\r\nprivate String name;\r\nprivate String phone;\r\npublic student(String name,String phone){\r\nthis.name=name;\r\nthis.phone=phone;\r\n}\r\npublic String toString(){\r\nreturn name+\":\"+phone; \r\n}}\r\npublic class text{\r\npublic static viod main(String[]arge){\r\nStudent st1=new Student(\"张三\",\"111111\");	\r\nStudent st2=new Student(\"李四\",\"222222\");\r\nStudent st3=new Student(\"王二\",\"333333\");\r\nStudent st4=new Student(\"麻子\",\"444444\");\r\nStudent st5=new Student(\"小明\",\"555555\");	\r\nList<Student>list=new ArrayList<Student>();\r\nlisr.add(st1);	\r\nlist.add(st5);\r\nfor(int i=0;i<;list.size();i++)\r\nSystem.out.println(list.get(i));\r\n}}   ',40,35,'					   ',0,'','',NULL),
 (5615,48,604,122,'import java.text.SimpleDteFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\npublic class Text{\r\npublic static void main(String[] args)\r\n{\r\nSimpleDateFormat sdf=new SimpleDateFormat(\"aaaa年bb月cc日\");//格式化日期实例sdf\r\nDate date=new Date();\r\nCalendar c=Calendar.getInstance();     //创建Calendar对象\r\nc.setTime(date);\r\nc.add(calendar.DATE,10);               //调用add方法给当前日期增加10天\r\nSystem.out.println(sdf.format(c.getTime()));\r\n}\r\n}',30,30,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5616,48,604,123,'import java.util.*;\r\npublic class Text{\r\npublic static void main(String[] args){\r\nString[] english={\"Teacher\",\"Student\",\"School\"};\r\nString[] chinese={\"老师\",\"学生\",\"学校\"};\r\nMap map=new HashMap();\r\nfor(int i=0;i<english.length;i++)\r\nmap.put(english[i],chinese[i]);\r\nString test=\"Student\";\r\nSystem.out.println(test+\"翻译为:\"map.et(test));\r\n}}   ',30,25,'					   \r\n					   ',0,'','',NULL),
 (5617,48,604,124,'import java.util.*;\r\nclass Student {\r\nprivate String name;\r\nprivate String phone;\r\npublic Student(String name,String phone){\r\n  this.name=name;\r\n  this.phone=phone;\r\n}\r\npublic String toString(){\r\nreturn name+\":\"+phone;\r\n}}\r\npublic class Ex21{\r\npublic static void main(String[] args){\r\nStudent xs1=new Student(\"丁一\",\"1339861458\");\r\nStudent xs2=new Student(\"洪二\",\"1947812651\");\r\nStudent xs3=new Student(\"张三\",\"1497159120\");\r\nStudent xs4=new Student(\"李四\",\"1749927502\");\r\nList.add(xs1);list.add(xs2);list.add(xs3);list.add(xs4);\r\nfor(int i=0;i<list.size();i++)\r\nSystem.out.println(list.get(i));\r\n}\r\n		   ',40,35,'					   \r\n					   ',0,'','',NULL),
 (5618,49,578,122,'import java.util.Calendar;\r\npublic class ten{\r\npublic static void main(String[] args){\r\nCalendar cal=Calendar.getInstance();\r\ncal.add(Calendar.DATE,10);\r\nSystem.out.println(\"10天后的年月日是\"+cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\")}\r\n}					   \r\n					   ',30,20,'					   ',86,'86','张钰成',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5619,49,578,123,'import java.util.*;\r\npublic class Map{\r\npublic static void main(String[] args){\r\nString[] eng={\"people\",\"human\",\"east\",\"west\",\"north\",\"south\",\"apple\",\"blue\",\"glass\",\"water\"};\r\nString[] chs={\"人\",\"人类\",\"东\",\"西\",\"北\",\"南\",\"苹果\",\"蓝色\",\"玻璃\",\"水\"}；\r\nMap<String,String>map=new HashMap<String,String>();\r\nfor(inti=0;i<eng.length;i++)\r\nmap.put(eng[i],chs[i]);\r\nString test=\"blue\";\r\nSystem.out.println(test+\"翻译:\"+map.get(test));}\r\n}					   \r\n					   ',30,20,'					   ',80,'80','董海林',NULL),
 (5620,49,578,124,'import java.util.*;\r\nclass Student{\r\nprivate String name;\r\nprivate String tel;\r\npublic Student(String name,String tel){\r\nthis.name=name;\r\nthis.tel=tel;}\r\npublic String toString(){\r\nreturn name+\":\"+tel;}\r\n}\r\npublic class Test{\r\npublic static void main(String[] args){\r\nStudent S1=new Student(\"张麻子\",\"12345\");\r\nStudent S2=new Student(\"王麻子\",\"54321\");\r\nStudent S3=new Student(\"李麻子\",\"01234\");\r\nStudent S4=new Student(\"赵麻子\",\"98765\");\r\nStudent S5=new Student(\"陈麻子\",\"56789\");\r\nList<Student>list=new ArrayList<Student>();\r\nlist.add(S1);\r\nlist.add(S2);\r\nlist.add(S3);\r\nlist.add(S4);\r\nlist.add(S5);\r\nfor(int i=0,i<list.size();i++)\r\nSystem.out.println(list.get(i));}\r\n}  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n					   \r\n					   ',40,30,'					   ',80,'80','董海林',NULL),
 (5621,49,581,122,'import java.util.Calendar;\r\npublic class test {\r\npublic static void main(String[] args){\r\n	Calendar cal=Calendar.getInstance();\r\n	cal.add(Calendar.DATE, 10);\r\n	System.out.println(\"10天后的日期为：\");\r\n	System.out.println(cal.get(Calendar.YEAR)+\"年\"+cal.get(Calendar.MONTH)+\"月\"+cal.get(Calendar.DATE)+\"日\");\r\n	\r\n}\r\n}				   \r\n					   ',30,20,'					   ',86,'80,86','陈嘉懿,韦慧卿',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5622,49,581,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Scanner;\r\npublic class test{\r\n	public static void main(String[] args){\r\n		 Map map=new HashMap();\r\n		 map.put(\"one\",\"一\");\r\n		 map.put(\"two\", \"二\");\r\n		 map.put(\"three\",\"三\");\r\n		 map.put(\"four\", \"四\");\r\n		 map.put(\"five\",\"五\");\r\n		 map.put(\"six\", \"六\");\r\n		 map.put(\"seven\", \"七\");\r\n		 map.put(\"eight\", \"八\");\r\n		 map.put(\"nine\", \"九\");\r\n		 map.put(\"ten\", \"十\");\r\n		 System.out.println(\"输入英文：\");\r\n		 Scanner in=new Scanner(System.in);\r\n		 String eng=in.nextLine();\r\n		 System.out.println(\"中文为：\"+map.get(eng)); \r\n		 \r\n	}\r\n}			   \r\n					   ',30,28,'					   ',0,'','',NULL),
 (5623,49,581,124,'import java.util.*;\r\npublic class Student{\r\n	private String name;\r\n	private String tel;\r\n	public Student(String name,String tel)\r\n	{this.name=name;this.tel=tel;}\r\n	public String toString(){return name+\":\"+tel;}\r\n	\r\n}	\r\npublic class Test{\r\n   public static void main(String[] args){\r\n       Student st1=new Student(\"张三\",\"10086\");\r\n       Student st2=new Student(\"李四\",\"10000\");\r\n       Student st3=new Student(\"王五\",\"10001\");\r\n   	Student st4=new Student(\"啊啊\",\"11111\");\r\n        Student st5=new Student(\"哈哈\"，\"11112\");\r\n   List<Student>students=new ArrayList<Student>();\r\n    students.add(st1);students.add(st2);\r\n    students.add(st3);students.add(st4);\r\n    students.add(st5);\r\n  for(int i=0;i<students.size();i++)\r\n       System.out.println(students.get(i));\r\n  }\r\n}\r\n					   ',40,35,'					   ',0,'','',NULL),
 (5624,48,591,122,'import java.until.Canlendar;\r\npublic class Canlendar {\r\n    public static void main(String[]args){\r\n    	Canlendar cal=Canlendar.getInstance();\r\n    	Cal.add(Canlendar.DAY-OF-MOUTH-OF-YEAR,10);\r\n    	System.out.print(\"10天后的日期为:\");\r\n    	System.out.println(cal.get(Canlendar.YEAR)+\"年\"+cal.get(Canlendar.MOUTH)+\"月 \"+\r\n    	               cal.get(Canlendar.DATE)+\"日\");\r\n    }\r\n}			   ',30,30,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5625,48,591,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class HashMapExampleEdit{\r\n     public static void main (String[]args){\r\n    	 Map map=new HashMap();\r\n    	 map.put(\"banana\",\"香蕉 \");\r\n    	 map.put(\"apple\",\"苹果 \");\r\n    	 map.put(\"grape\",\"葡萄 \");\r\n    	 map.put(\"orange\",\"橙子 \");\r\n    	 map.put(\"pear\",\" 梨子\");\r\n    	 map.put(\"strawberry\",\"草莓 \");\r\n    	 map.put(\"pineapple\",\"菠萝 \");\r\n    	 map.put(\"watermelon\",\"西瓜 \");\r\n    	 map.put(\"dragon fruit\",\"火龙果 \");\r\n    	 map.put(\"peach\",\"桃子 \");\r\n    	 System.out.println(\"10个英文单词的汉语翻译:\"+map.values());\r\n     }\r\n}',30,25,'					   ',0,'','',NULL),
 (5626,48,591,124,'import java.util*;\r\nclass Student{\r\n       private name;\r\n       private phone;\r\n public class Student(String name,String phone){\r\n       this.name=name;\r\n      this.phone=phone;\r\n }\r\n  public String toString(){\r\n     return name+phone;\r\n}\r\n}\r\n public class EX{\r\n public static void main (String[]args){\r\n  Student st1=new Student(\" 张三\",\"55555\")\r\n  Student st1=new Student(\" 李四\",\"66666\")；\r\n    	   List list =new Arraylist();\r\n    	   list.add(st1);\r\n    	   list.add(st2);\r\n    	   for(int i=0;i<list.size();i++)\r\n    		   System.out.println(list.get(i));\r\n\r\n    	       }\r\n}					   ',40,35,'					   ',0,'','',NULL),
 (5627,48,590,122,'import java.util.Calendar;\r\npublic class CalendarExample {\r\n	public static void main (String[] args){\r\n		Calendar cal=Calendar.getInstance();\r\n		cal.add(Calendar.DATE,10);\r\n		System.out.println(\"10天后的日期是：\");\r\n		System.out.print(cal.get(Calendar.YEAR)+\"年\");\r\n		System.out.print(cal.get(Calendar.MONTH)+\"月\");\r\n		System.out.print(cal.get(Calendar.DATE)+\"日\");\r\n					\r\n		}\r\n	}\r\n	   \r\n					   ',30,30,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5628,48,590,123,'import java.util.HashMap;\r\nimport java.util.Map;\r\npublic class HashMapExample {\r\n	public static void main (String[] args){\r\n		\r\n		String []english={\"one\",\"two\",\"three\",\"four\"};\r\n		String []chinese={\"一\",\"二\",\"三\",\"四\"};\r\n		Map map=new HashMap();\r\n		for (int i=0;i<english.length;i++){\r\n			map.put(english[i],chinese[i]);\r\n		}\r\n		String test=\"one\";\r\n		System.out.println(test+\"翻译：\"+map.get(test));\r\n		}\r\n\r\n}\r\n		   \r\n					   ',30,28,'					   ',0,'','',NULL),
 (5629,48,590,124,'			import java.util.*;\r\n class Student {\r\n	private String name;\r\n	private String phone;\r\n	public Student (String name,String phone){\r\n		this.name=name;\r\n		this.phone=phone;\r\n	}\r\n	public String toString(){\r\n		return name+\":\"	+phone;\r\n		}\r\n}\r\npublic class ArrayListExample {\r\n	public static void main (String[] args){\r\n		Student  student1 =new Student(\"a\",\"1234\");\r\n		Student   student2 =new Student(\"b\",\"2345\");\r\n		Student   student3 =new Student(\"c\",\"3456\");\r\n		Student   student4 =new Student(\"d\",\"4567\");\r\n		Student   student5=new Student(\"e\",\"6789\");\r\n		List list=new ArrayList();\r\n		list.add( student1);\r\n		list.add( student2);\r\n		list.add( student3);\r\n		list.add( student4);\r\n		list.add( student5);\r\n		for(int i=0;i<list.size();i++);\r\n		System.out.println(List.get( studenti));\r\n\r\n		\r\n		}\r\n	\r\n\r\n}\r\n		   \r\n					   ',40,35,'					   ',0,'','',NULL),
 (5630,48,598,122,'		package xsh;\r\nimport java.util.Calendar;\r\npublic class xsh {\r\n	public static void main (String[] args) {\r\n		Calendar cha =Calendar.getInstance();\r\n		cha.add(Calendar.DATE,10);\r\n		String strDate=cha.get(Calendar.YEAR)+\"年\"+(cha.get(Calendar.MONTH)+1)+\"月\"+cha.get(Calendar.DATE)+\"日\";\r\n		System.out.println(\"10天后的日期：\"+strDate);\r\n	}\r\n\r\n}			   ',30,25,'					   ',81,'85,81','徐百川,赵明辉',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5631,48,598,123,'	package xsh;\r\nimport java.util.*;\r\npublic class xsh {\r\n	public static void main (String[] args){\r\n		String[] word={\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\"};\r\n		String[] chinese={\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\"};\r\n		Map<String,String>map=new HashMap<String,String>();\r\n		for(int i=0;i<word.length;i++)\r\n		map.put(word[i],chinese[i]);\r\n		System.out.println(map.get(\"one\"));\r\n		String test=\"one\";\r\n		System.out.println(test+\"翻译为汉语为：\"+map.get(test));\r\n		\r\n	}\r\n\r\n}				   \r\n',30,25,'					   ',0,'','',NULL),
 (5632,48,598,124,'		package xsh;\r\nimport java.util.*;\r\n\r\nclass Student{\r\n	private String name;\r\n	private String phone;\r\n	public Student(String name,String phone) \r\n	{ this.name=name;\r\n	this.phone=phone;\r\n	}\r\n	public String toString()\r\n	{return name+\":\"+phone;}\r\n}\r\n\r\npublic class xsh {\r\n	public static void main (String[] args){\r\n		Student a1=new Student(\"黄一\",\"1765832\"); \r\n		Student a2=new Student(\"王二\",\"1768946\");\r\n		Student a3=new Student(\"赵三\",\"1763045\"); \r\n		Student a4=new Student(\"台四\",\"1763454\");\r\n		Student a5=new Student(\"许五\",\"1764563\"); \r\n		List<Student>list=new ArrayList<Student>();\r\n		list.add(a1); list.add(a2);list.add(a3);list.add(a4);list.add(a5);\r\n		for(int i=0; i<list.size();i++)\r\n			System.out.println(list.get(i));\r\n	}\r\n\r\n}			   ',40,30,'					   ',85,'85','赵明辉',NULL),
 (5633,48,611,122,'package zmh;\r\nimport java.util.Calendar;\r\npublic class zmh {\r\n	public static void main(String[] args){\r\n	Calendar day=Calendar.getInstance();\r\n	day.add(Calendar.DAY_OF_YEAR,10);\r\n	String date=day.get(Calendar.YEAR)+\"年\"\r\n	+(day.get(Calendar.MONTH)+1)+\"月\"\r\n	+day.get(Calendar.DATE)+\"日\";\r\n	System.out.println(\"10天后的日期为:\"+date);\r\n}\r\n}\r\n				   \r\n					   ',30,20,'					   ',81,'81,81','徐百川,徐素皓',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5634,48,611,123,'package tra;\r\nimport java.util.*;\r\npublic class tra {\r\n	public static void main(String[] args){\r\n    String[] eng={\"Chinese\",\"Japan\",\"Egypt\",\"Austria\",\"Brazil\",\"Denmark\",\"Germany\",\"Canada\",\"Russia\",\"Pakistan\"};\r\n    String[] chi={\"中国\",\"日本\",\"埃及\",\"澳大利亚\",\"巴西\",\"丹麦\",\"德国\",\"加拿大\",\"俄罗斯\",\"巴基斯坦\"};	\r\n    Map<String,String>map=new HashMap<String,String>();\r\n    for(int i=0;i<eng.length;i++)\r\n    map.put(eng[i],chi[i]);\r\n    String english=\"Denmark\";\r\n    System.out.println(english+\"翻译:\"+map.get(english));	\r\n}\r\n}\r\n\r\n\r\n					   ',30,25,'					   ',0,'','',NULL),
 (5635,48,611,124,'package tongxun;\r\nimport java.util.*;\r\nclass Student{\r\n	private String name;\r\n	private String phone;\r\n	public Student (String name,String phone){\r\n		this.name=name;\r\n		this.phone=phone;\r\n	}\r\n  public String toString(){\r\n	  return name+\":\"+phone;\r\n  }\r\n}\r\npublic class tongxun{\r\n	public static void main(String[] args){\r\n		Student d1=new Student(\"zhangsan\",\"537\");\r\n		Student d2=new Student(\"lisi\",\"738\");\r\n		Student d3=new Student(\"wangwu\",\"873\");\r\n		Student d4=new Student(\"liangliu\",\"811\");\r\n		Student d5=new Student(\"xuyi\",\"963\");\r\n		List<Student>list=new ArrayList<Student>();\r\n		list.add(d1);list.add(d2);list.add(d3);list.add(d4);list.add(d5);\r\n		for(int i=0;i<list.size();i++)\r\n		System.out.println(list.get(i));\r\n}\r\n}\r\n					   ',40,30,'					   ',85,'80,85','徐百川,徐素皓',NULL),
 (5636,48,593,122,'import java.util.Calendar;\r\nimport java.Date;\r\n\r\n\r\n\r\n\r\npublic class time{\r\npublic static void main(String[] agrs){\r\nCalendar cal=Calendar.getInstance();\r\nSystem.out.println(\"当前的时间：\")；\r\nSystem.out.println(\"年_月_日\");\r\nSystem.out.println(cal.get(Calendar.YEAR)+\"-\");\r\nSystem.out.println(cal.get(Calendar.MONTH)+\"-\");\r\nSystem.out.println(cal.get(Calendar.DATE)+\"-\");\r\ncal.add(Calendar.DATE,10);\r\nSystem.out.print(\"10天后的日期为：\");\r\nSystem.out.println(cal.get(Calendar.DATE)+\"日\");\r\n}\r\n}					   \r\n					   ',30,30,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5637,48,593,123,'import java.util.*;\r\n\r\n\r\n\r\n\r\npublic class {\r\npublic static void main(String[] args){\r\nString[] english={\"one\",\"two\",\"three\",\"four\",\"five\"};\r\nString[] chines={\"一\",\"二\",\"三\",\"四\",\"五\"};\r\nMap<String,String>map=new HashMap<String,String>();\r\nmap.put(english[i],chines[i]);\r\nString test=\"one\";\r\nSystem.out.println(test+\"翻译:\"+map.get(test));\r\nmap.put(english[i],chines[i]);\r\nString test=\"two\";\r\nSystem.out.println(test+\"翻译:\"+map.get(test));\r\nmap.put(english[i],chines[i]);\r\nString test=\"three\";\r\nSystem.out.println(test+\"翻译:\"+map.get(test));\r\nmap.put(english[i],chines[i]);\r\nString test=\"four\";\r\nSystem.out.println(test+\"翻译:\"+map.get(test));\r\nmap.put(english[i],chines[i]);\r\nString test=\"five\";\r\nSystem.out.println(test+\"翻译:\"+map.get(test));\r\n}\r\n}					   \r\n					   ',30,25,'					   ',0,'','',NULL),
 (5638,48,593,124,'import java.util.*；\r\n\r\n\r\n\r\n\r\n\r\npublic class StudentInfornation{\r\npublic static void main(String[] args){\r\nStudent st1=new Student(\"joe\",\"4657\");\r\nStudent st2=new Student(\"jam\",\"4463\");\r\nStudent st3=new student(\"jack\",\"4566\");\r\nStudent st4=new student(\"kim\",\"5456\");\r\nstudent st5=new student(\"theshy\",\"4688\");\r\nList<Student>list=new ArrayList<Student>();\r\nlist.add(st1);list.add(st2);\r\nfor (int i+0;i<list.size;i++)\r\nSystem.out.println(list.get(i));\r\nclass Student{\r\nprivate String name;\r\nprivate String phone;\r\npublic Student(String name,String phone){\r\nthis.name=name;\r\nthis.phone=phone;\r\n}\r\npublic String toString(){\r\nreturn name+\":\"+phone;}\r\n}\r\n}\r\n}					   \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5639,48,606,122,'import java.util.Calendar;\r\n\r\npublic class Ex12 {\r\n\r\npublic static void main(String[] args) {\r\n\r\nCalendar cal=Calendar.getInstance();\r\n\r\ncal.add(Calendar.DAY_OF_YEAR,10);\r\n\r\nString strDate=cal.get(Calendar.YEAR)+”年“\r\n\r\n+(cal.get(Calendar.MONTH)+1)+”月“\r\n\r\n+cal.get(Calendar.DATE)+”日“;\r\n\r\nSystem.out.println(“10天后的日期为：“+strDate);\r\n\r\n}\r\n\r\n}\r\n					   ',30,20,'					   ',88,'88','徐百川',NULL),
 (5640,48,606,123,'	import java.util.*;\r\n\r\npublic class Ex22 {\r\n\r\npublic static void main(String[] args) {\r\n\r\nString[] eng={“Apple”,”Orange”,”Green”};\r\n\r\nString[] chs={“香蕉“,”桔子“,”绿色“};\r\n\r\nMap map=new HashMap();\r\n\r\nfor(int i=0;i<eng.length;i++)\r\n\r\nmap.put(eng[i],chs[i]);\r\n\r\nString test=”Orange”;\r\n\r\nSystem.out.println(test+”翻译：“+map.get(test));\r\n\r\n}\r\n\r\n}				   \r\n					   ',30,20,'					   ',0,'','',NULL),
 (5641,48,606,124,'		  import java.io.Serializable;\r\n\r\n\r\npublic class Student implements Serializable {\r\n	private String name;\r\n	private String contact;\r\n\r\n\r\n	public Student() {\r\n	}\r\n\r\n\r\n	// 构造器\r\n	public Student(String name, String contact) {\r\n		this.name = name;\r\n		this.gender =contact;\r\n	}\r\n\r\n\r\n	// 学生信息打印方法\r\n	public String printStudentInfo() {\r\n		return \"姓名:\" + this.name + \", 联系方式:\" + this.contact;\r\n	}\r\n\r\n\r\n\r\n	public String getName() {\r\n		return name;\r\n	}\r\n\r\n\r\n	public void setName(String name) {\r\n		this.name = name;\r\n	}\r\n\r\n      public String get cntact(){\r\nreturn contact;\r\n   public void set contact(String contact) {\r\n		this.contact= contact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n					   ',40,35,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5642,49,573,122,'import java.util.Calendar;\r\npublic class jjj{\r\n	 public static void main(String[] args){\r\n		 Calendar cal=Calendar.getInstance();\r\n		 cal.add(Calendar.DAY_OF_YEAR,10);\r\n		 String strDate=cal.get(Calendar.YEAR)+\"年\"\r\n	             +(cal.get(Calendar.MONTH)+1)+\"月\"\r\n	             +cal.get(Calendar.DATE)+\"日\";\r\n    System.out.println(\"10天后的日期为：\"+strDate);	 \r\n\r\n	}\r\n\r\n}			   ',30,20,'					   ',81,'85,82,83,81','徐百川,张凡,卢姿彤,王伟杰',NULL),
 (5643,49,573,123,'import java.util.*;\r\npublic class xxx{\r\n	public static void main(String[] args){\r\n		String[]eng={\"Adopt\",\"cheater\",\"assume\",\"save\",\"replace\",\"fill\",\"tire\",\"campus\",\"vehicle\",\"employer\"};\r\n		String[]chs={\"收养\",\"盗窃者\",\"假设\",\"节约\",\"代替\",\"充满\",\"工具\",\"校园\",\"工具\",\"雇佣者\"};\r\n		Map<String,String>map=new HashMap<String,String>();\r\n		for(int j=0;j<eng.length;j++)\r\n			map.put(eng[j],chs[j]);\r\n		String test=\"Adopt\";\r\n		System.out.println(test+\"翻译:\"+map.get(test));\r\n	}\r\n}	   ',30,25,'					   ',0,'','',NULL),
 (5644,49,573,124,'import java.util.*;\r\nclass Student{\r\n	private String name;\r\n	private String phone;\r\n	public Student(String name,String phone){\r\n		this.name=name;\r\n		this.phone=phone;\r\n	}\r\n	public String toString(){\r\n		return name+\":\"+phone;\r\n	}\r\n	public class lnn{\r\n		public static void main(String[]args){\r\n        Student st1=new Student(\"Jordan\",\"666888\");\r\n        Student st2=new Student(\"James\",\"957486\");\r\n        Student st3=new Student(\"Kobe\",\"540666\");\r\n        Student st4=new Student(\"Wade\",\"357159\");\r\n        Student st5=new Student(\"Fw\",\"135426\");\r\n        List<Student>list=new ArrayList<Student>();\r\n        list.add(st1);list.add(st2);list.add(st3);list.add(st4);list.add(st5);\r\n        for(int j=0;j<list.size();j++)\r\n        System.out.println(list.get(j));     \r\n		}\r\n	}\r\n}	   ',40,30,'					   ',81,'81','徐百川',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5645,50,582,73,'A\r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5646,50,582,74,'B\r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5647,50,582,67,'D\r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5648,50,582,105,'C\r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5649,50,582,108,'B\r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5650,50,582,121,'D   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5651,50,582,137,'one two default\r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5652,50,582,138,'Equal\r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5653,50,582,55,'Not equal! 10\r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5654,50,582,57,'17 9 17 9\r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5655,50,582,135,'package task3;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.FileInputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.util.Scanner;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.TreeMap;\r\n\r\npublic class task3 {\r\n	@SuppressWarnings(\"resource\")\r\n	public static void main(String[] args) throws Exception{\r\n		Scanner input=new Scanner(System.in);\r\n		System.out.println(\"Please input the path of the file: \");\r\n		String path=input.next();//文件所在路径\r\n		int charNum= 0 ;//字符数\r\n		int wordsNum= 0;//单词数\r\n		int lineNum = 0;//行数\r\n		InputStreamReader isr = new InputStreamReader(new FileInputStream(path));\r\n		BufferedReader br = new BufferedReader(isr);\r\n		while( br.read()!= -1){\r\n		String s = br.readLine();\r\n		charNum+=s.length();\r\n		wordsNum +=s.split(\" \").length;\r\n		lineNum ++;\r\n		}//循环计数\r\n		isr.close();//关闭\r\n		System.out.println(\"Count of characters: \"+charNum+\r\n				\"\\nCount of words: \"+wordsNum+\"\\nCount of lines: \"+lineNum);\r\n		}\r\n\r\n}\r\n\r\n					   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5656,50,582,136,'//module-info.java\r\nmodule task1 {\r\n	requires java.sql;\r\n}\r\n\r\n\r\n\r\n\r\n//Student.java\r\npackage task1;\r\n\r\npublic class Student {\r\n	private int id;\r\n\r\n	private String loginname;//登录名\r\n\r\n	private String password;//密码\r\n\r\n	private String username;//学生姓名\r\n\r\n	private int age;  //年龄\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//StudentDao.java\r\npackage task1;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement; \r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.*;\r\n\r\npublic class StudentDao {\r\n	private Connection connection;\r\n	private PreparedStatement UserQuery;\r\n	private ResultSet results;\r\n	public int searchByLoginnameAndPassword(String loginname,String password,String username,int age,int id) {\r\n		int result=0;\r\n		try {\r\n			connection=ConnectionManager.getConnction();\r\n			UserQuery=connection.\r\n					prepareStatement(\"SELECT*from userinfo where userid=? and password=?\");\r\n			UserQuery.setString(1,loginname);\r\n			UserQuery.setString(2,password);\r\n			UserQuery.setString(3,username);\r\n			UserQuery.setInt(4,age);\r\n			UserQuery.setInt(5,id);\r\n			ResultSet results=UserQuery.executeQuery();\r\n			if(results.next()){\r\n				result=1;\r\n			}\r\n		}\r\n		catch (SQLException exception) {//处理数据库异常\r\n			exception.printStackTrace();\r\n		}\r\n		//释放资源\r\n		finally {\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(UserQuery);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		return result;\r\n	}\r\n	@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\r\n	public List searchByUsername(String username) {\r\n		List UserList=new ArrayList();\r\n		try {\r\n			connection=ConnectionManager.getConnction();\r\n			UserQuery=connection\r\n					.prepareStatement(\"SELECT* FROM userinfo where username like\'%\"+username+\"%\'\");\r\n			ResultSet results=UserQuery.executeQuery();\r\n			//读取行数据\r\n			while(results.next()) {\r\n				Student userinfo=new Student();\r\n				//将数据表中的一条记录数据添加到封装类中\r\n				userinfo.setUserId(results.getInt(1));\r\n				userinfo.setLoginName(results.getString(2));\r\n				userinfo.setPassword(results.getString(3));\r\n				userinfo.setage(results.getInt(4));\r\n				userinfo.setid(results.getInt(5));\r\n				UserList.add(userinfo);\r\n			}\r\n		}\r\n		//处理数据库异常\r\n		catch(SQLException exception) {\r\n			exception.printStackTrace();\r\n		}\r\n		//释放资源\r\n		finally {\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(UserQuery);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		return UserList;\r\n	}\r\n\r\n}\r\n\r\n					   \r\n					   \r\n					   \r\n					   ',20,15,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5657,50,582,134,'package task2;\r\nimport java.util.*;\r\npublic class triangle {\r\n	public int a,b,c;//三边长a、b、c\r\n	public static void Triangle(int a,int b,int c) {\r\n		try {\r\n				if((a+b)>c && (a+c)>b && (b+c)>a) {\r\n					\r\n					System.out.println(a+\"  \"+b+\"  \"+c+\"  can form a triangle!\");\r\n					\r\n				}else {\r\n					throw new IllegalArgumentException(\"a,b,c cannot form a triangle!\");\r\n				}//判断三边长是否能组成三角形\r\n				\r\n			}catch (IllegalArgumentException e) {\r\n				System.out.println(e.getMessage());}\r\n		}\r\n	public double getArea(int a,int b,int c) {\r\n		double p=(a+b+c)/2;\r\n		double s=Math.sqrt(p*(p-a)*(p-b)*(p-c));//利用三边长求三角形面积\r\n		return s;\r\n	}\r\n		\r\n		\r\npublic static void main(String[] args) {\r\n			Scanner sc = new Scanner(System.in);\r\n			triangle tri=new triangle();\r\n			int a = sc.nextInt();\r\n			int b= sc.nextInt();\r\n			int c = sc.nextInt();\r\n			tri.Triangle(a, b, c);\r\n			System.out.println(\"Its area is \"+tri.getArea(a,b,c));//显示求得的面积\r\n		}\r\n}\r\n		\r\n\r\n\r\n\r\n					   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5658,51,602,67,'D',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5659,51,602,68,'C					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5660,51,602,106,'A					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5661,51,602,107,'C					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5662,51,602,108,'B					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5663,51,602,121,'D					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5664,51,602,63,'One					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5665,51,602,138,'Equal					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5666,51,602,55,'Not equal! 10					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5667,51,602,57,'17 9 17 9					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5668,51,602,135,'import java.io.BufferedReader;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\n\r\npublic class CntWord {\r\n    public static void main(String[] argv) throws IOException {\r\n        BufferedReader br = new BufferedReader(new FileReader(\"E:\\\\code\\\\Java\\\\Homework3\\\\Test.txt\"));\r\n        if(!br.ready()){\r\n            System.out.println(\"文本打开失败\");\r\n            return ;\r\n        }\r\n        int CntLine = 0;\r\n        int CntWord = 0;\r\n        String line; \r\n        while((line = br.readLine()) != null){\r\n            for(int i = 0; i < line.length(); ++i){\r\n                char ch = line.charAt(i);\r\n                if(ch == \' \'){\r\n                    ++CntWord;\r\n                }\r\n            }\r\n            ++CntWord;\r\n            ++CntLine;\r\n        }\r\n        System.out.println(\"单词数: \" + CntWord);\r\n        System.out.println(\"行数: \" + CntLine);\r\n        br.close();\r\n    }\r\n\r\n}					   ',20,20,'					   ',0,'','',NULL),
 (5669,51,602,136,'//ConnectionManager.java\r\nimport java.sql.*;\r\npublic class ConnectionManager{\r\n    private static final String DRIVER_CLASS=\"com.mysql.jdbc.Driver\";\r\n    private static final String DATABASE_URL=\"jdbc:mysql://localhost:3306/new_schema?serverTimezone=GMT%2B8\";\r\n    private static final String DATABASE_USER=\"root\";\r\n    private static final String DATABASE_PASSWORD=\"\";//密码\r\n    public static Connection getConnection(){\r\n        Connection dbConnection = null; \r\n        try{\r\n            Class.forName(DRIVER_CLASS);\r\n            dbConnection = DriverManager.getConnection(DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD);\r\n        }catch(Exception e){\r\n            e.printStackTrace();\r\n        }\r\n        return dbConnection;\r\n    } \r\n    public static void closeResultSet(ResultSet result){\r\n        try{\r\n            result.close();\r\n        }catch(SQLException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public static void closeStatement(PreparedStatement state){\r\n        try{\r\n            state.close();\r\n        }catch(SQLException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public static void closeConnection(Connection con){\r\n        try{\r\n            con.close();\r\n        }catch(SQLException e){\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n}					   \r\n//Student.java\r\n\r\npublic class Student {\r\n	private int id;\r\n	private String loginname;\r\n	private String password;\r\n	private String username;\r\n	private int age;\r\n	public void setid(int _id){\r\n		id = _id;\r\n	}\r\n	public int getid(){\r\n		return id;\r\n	}\r\n	public void setloginname(String _loginname){\r\n		loginname = _loginname;\r\n	}\r\n	public String getloginname(){\r\n		return loginname;\r\n	}\r\n	public void setpassword(String _password){\r\n		password = _password;\r\n	}\r\n	public String getpassword(){\r\n		return password;\r\n	}\r\n	public void setusername(String _username){\r\n		username = _username;\r\n	}\r\n	public String getname(){\r\n		return username;\r\n	}\r\n	public void setage(int _age){\r\n		age = _age;\r\n	}\r\n	public int getage(){\r\n		return age;\r\n	}\r\n}\r\n//StudentDuo.java\r\nimport java.util.*;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\npublic class StudentDao {\r\n	private Connection connection;\r\n	private PreparedStatement namesQuery;\r\n	private PreparedStatement loginnameAndPasswordQuery;\r\n	private ResultSet results;\r\n	public int searchByloginnameAndPassword(String loginname, String password){\r\n		int res = 0;\r\n		try{\r\n			connection = ConnectionManager.getConnection();\r\n			loginnameAndPasswordQuery = connection.prepareStatement(\"SELECT id, loginname, password, username, age \"\r\n					+ \"FROM students where loginname = \" + loginname\r\n					+ \" AND password = \" + password);\r\n			ResultSet results = loginnameAndPasswordQuery.executeQuery();\r\n			if(results.next()) res = 1;\r\n		}catch(SQLException exception){\r\n			exception.printStackTrace();\r\n		}finally{\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(loginnameAndPasswordQuery);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		return res;\r\n	}\r\n	public ArrayList<Student> searchByUsername(String username){\r\n		ArrayList<Student> namesList = new ArrayList<Student>();\r\n		try{\r\n			connection = ConnectionManager.getConnection();\r\n			namesQuery = connection.prepareStatement(\"SELECT id, loginname, password, username, age \"\r\n						+ \"FROM students where username = \" + username);\r\n			ResultSet results = namesQuery.executeQuery();\r\n			while(results.next()){\r\n				Student person = new Student();\r\n				person.setid(results.getInt(\"id\"));\r\n				person.setage(results.getInt(\"age\"));\r\n				person.setloginname(results.getString(\"loginname\"));\r\n				person.setpassword(results.getString(\"password\"));\r\n				person.setusername(results.getString(\"username\"));\r\n				namesList.add(person);\r\n			}\r\n		}catch(SQLException exception){\r\n			exception.printStackTrace();\r\n		}finally{\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(namesQuery);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		return namesList;\r\n    }\r\n    public static void main(String []argv){\r\n		StudentDao test = new StudentDao();\r\n		System.out.println(test.searchByloginnameAndPassword(\"Ttmq36\", \"123\"));\r\n    }\r\n}',20,15,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5670,51,602,134,'//CanMakeTriangle.java\r\npublic class CantMakeTriangle extends Exception{\r\n    CantMakeTriangle(){}\r\n    CantMakeTriangle(String word){\r\n        super(word);\r\n    }\r\n}\r\n//TooManyInputException.java\r\npublic class TooManyInputException extends Exception{\r\n    TooManyInputException(){}\r\n    TooManyInputException(String word){\r\n        super(word);\r\n    }\r\n}			   \r\n//test.java\r\n\r\nimport java.util.*;\r\npublic class test{\r\n    void triangle(int a, int b, int c)throws CantMakeTriangle{\r\n        if((a + b <= c) || (b + c <= a) || (a + c <= b)){\r\n            throw new CantMakeTriangle(\"三边无法构成三角形\");\r\n        }\r\n    }\r\n    double getArea(int a, int b, int c){\r\n        int p = (a + b + c) / 2;\r\n        return Math.sqrt((double)(p*(p-a)*(p-b)*(p-c)));\r\n    }\r\n    public static void main(final String[] argv) {\r\n        test tt = new test();\r\n        Scanner in = new Scanner(System.in); \r\n        try{\r\n            System.out.println(\"当输入-1时表示停止\");\r\n            int tmp;\r\n            int cnt = 0;\r\n            int []edge = new int[3];\r\n            while((tmp = in.nextInt()) != -1){\r\n                if(cnt < 3){\r\n                    edge[cnt] = tmp;\r\n                }\r\n                ++cnt;\r\n            }\r\n            if(cnt != 3)\r\n                throw new TooManyInputException(\"边数有问题\");\r\n            tt.triangle(edge[0], edge[1], edge[2]);\r\n            System.out.println(tt.getArea(edge[0], edge[1], edge[2]));\r\n        }catch (TooManyInputException e){\r\n            System.out.println(\"边数有问题\");\r\n        }catch(CantMakeTriangle e){\r\n            System.out.println(\"三边无法构成三角形\");\r\n        }catch(InputMismatchException e){\r\n            System.out.println(\"类型不匹配\");\r\n        }finally{\r\n            in.close();\r\n        }\r\n    }       \r\n}',20,20,'					   ',0,'','',NULL),
 (5671,50,569,73,'A				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5672,50,569,74,'B				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5673,50,569,67,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5674,50,569,105,'C				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5675,50,569,108,'B					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5676,50,569,121,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5677,50,569,137,'one  two  default				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5678,50,569,138,'Equal			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5679,50,569,55,'Not  equal!10					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5680,50,569,57,'17 9 17 9				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5681,50,569,135,'package zy_3;\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\npublic class SRSC \r\n{\r\n	int L = 0,W = 0;\r\n	SRSC(BufferedReader br) \r\n	{\r\n	       String A=br.readLine();\r\n	       char B;\r\n	       try \r\n	       {\r\n	            while (A!=null) \r\n	            {\r\n	                L++;\r\n	                boolean C = false;\r\n	                for (int i=0;i<A.length();i++) \r\n	                {\r\n	                    B = A.charAt(i);\r\n	                    if (B<\'A\'||((B>\'Z\')&&(B<\'a\'))||B>\'z\')\r\n	                    {\r\n	                       W++;\r\n	                       C=false;\r\n	                    }\r\n	                    else \r\n	                     {\r\n	                         C=true;\r\n	                     }\r\n	                }            \r\n	            }\r\n	        } \r\n	       catch (IOException e) \r\n	       {\r\n	            System.out.println(e);\r\n	        }\r\n	    }\r\n	 int GetL() \r\n	 {\r\n	      return L;\r\n	 }\r\n	 int GetW() \r\n	 {\r\n	      return W;\r\n	 }\r\n}\r\npackage zy_3;\r\nimport java.io.File;\r\nimport java.io.FileReader;\r\nimport java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\npublic class Test \r\n{\r\n	public static void main(String[] args)\r\n	{\r\n		  try \r\n		  {\r\n	            File f =new File(\"F:\\\\Java\\\\Workspace\\\\ZY2\\\\src\\\\zy_3\");\r\n	            FileReader fr = new FileReader(f);\r\n	            BufferedReader br = new BufferedReader(fr);\r\n	            SRSC srsc = new SRSC(br);\r\n	            System.out.print(\"文件中包含的单词个数为:\" + srsc.GetW());\r\n	            System.out.println(\",行数为:\" + srsc.GetL());\r\n	      } \r\n		  catch (FileNotFoundException e) \r\n		  {					   \r\n					   ',20,15,'					   ',0,'','',NULL),
 (5682,50,569,136,'package  ch10;\r\nimport java.sql.*;\r\nclass ConnectionManager {\r\nprivate static final String DRIVER_CLASS = \"com.mysql.jdbc.Driver\";\r\nprivate static final String DATABASE_URL = \"jdbc:mysql://localhost:3306/student?\";\r\nprivate static final String DATABASE_USER = \"root\";\r\nprivate static final String DATABASE_PASSWORD = \"11\";\r\npublic  static Connection getConnection() \r\n{\r\n        Connection dbconnection = null;\r\n        try \r\n       {\r\n            Class.forName(DRIVER_CLASS);\r\n            dbconnection = DriverManager.getConnection(DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD);\r\n        } \r\n        catch (Exception e) \r\n        {\r\n            e.printStackTrace();\r\n        }\r\n        return dbconnection;\r\n}\r\npackage  ch10;\r\npublic class Student \r\n{\r\n    private int id;\r\n    private String loginname;\r\n    private String password;\r\n    private String username;\r\n    private int age; \r\n    public void Setid(int id) \r\n    {\r\n        this.id=id;\r\n    }\r\n\r\n    public int Getid() \r\n   {\r\n        return id;\r\n    }\r\n\r\n    public void Setln(String loginname) \r\n   {\r\n        this.loginname=loginname;\r\n    }\r\n\r\n    public String Getln() \r\n   {\r\n        return loginName;\r\n    }\r\n\r\n    public void Setp(String password) \r\n   {\r\n        this.password = password;\r\n    }\r\n\r\n    public String Getp() \r\n   {\r\n        return password;\r\n    }\r\n\r\n    public void Setun(String username) \r\n   {\r\n        this.username = username;\r\n    }\r\n\r\n    public String Getun() \r\n   {\r\n        return username;\r\n    }\r\n\r\n    public void Setage(int age) {\r\n        this.age = age;\r\n    }\r\n\r\n    public int Getage() \r\n   {\r\n        return age;\r\n    }\r\n}\r\npackage  ch10;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.*;\r\npublic class StudentDao \r\n{\r\n    private Connection connection;\r\n    private PreparedStatement preparedStatement;\r\n    private ResultSet resultSet;\r\n    public int searchByLoginnameAndPassword(String loginname, String password) \r\n    {\r\n        int A=0;\r\n        try \r\n       {\r\n            connection = ConnectionManager.getConnection();\r\n            studentsQuery = connection.prepareStatement(\"SELECT loginname,password\"\r\n            +\"FROM loginname where  loginname like \'%\"+loginname+\"%\'ORDER BY loginname\"\r\n            +\"FROM password where  password like \'%\"+password+\"%\'ORDER BY password\");            \r\n            ResultSet results = studentsQuery.executeQuery();\r\n            if (results.next()) \r\n            {\r\n                A = 1;\r\n            }\r\n        } \r\n          catch (SQLException e) \r\n          {\r\n            e.printStackTrace();\r\n          } \r\n            finally \r\n          {\r\n            ConnectionManager.closeResultSet(results);\r\n            ConnectionManager.closeStatement(studentsQuery);\r\n            ConnectionManager.closeConnection(connection);\r\n           }\r\n      return  A;\r\n    }\r\n    public  Student searchByUsername(String username)\r\n   {\r\n       List  studentList=new ArrayList(); \r\n       try \r\n      {\r\n            connection = ConnectionManager.getConnection();\r\n            studentsQuery = connection.prepareStatement(\"SELECT username\"+\"FROM username where  username like \'%\"+username+\"%\'ORDER BY username\");\r\n            ResultSet results = studentsQuery.executeQuery();\r\n            while (results.next()) \r\n           {\r\n                Student student = new Student();\r\n                student.Setid(results.getInt(id));\r\n                student.Setln(results.getString(loginname));\r\n                student.Setp(results.getString(password));\r\n                student.Setun(results.getString(username));\r\n                student.Setage(results.getInt(age));\r\n                studentList.add(student);\r\n            }\r\n        } \r\n         catch (SQLException e) \r\n         {\r\n            e.printStackTrace();\r\n          } \r\n          finally \r\n         {\r\n            ConnectionManager.closeResultSet(results);\r\n            ConnectionManager.closeStatement(studentsQuery);\r\n            ConnectionManager.closeConnection(connection);\r\n        }\r\n        return studentList;\r\n     }\r\n}\r\npackage  ch10;\r\nimport  java.util.*;\r\npublic  class  TestStudentDao\r\n{\r\n  public  static  void  main(String[] args)\r\n  {\r\n   StudentDao  dao=new  StudentDao();\r\n   List  studentList=dao.searchByLoginnameAndPassword(\"loginname\",\"password\");\r\n   System.out.println(\"测试searchByLoginnameAndPassword方法\"\r\n   +dao.searchByLoginnameAndPassword());\r\n   student=dao.searchByUsername(\"username\");\r\n   System.out.println(\"测试searchByUsername方法\"\r\n   +dao.searchByUsername());\r\n  }\r\n}					   \r\n					   ',20,20,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5683,50,569,134,'import java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\npublic class YC \r\n{\r\n	public static double getArea(int a,int b,int c)\r\n	{\r\n		 int d=(a+b+c)/2;\r\n		 return Math.sqrt(d*(d-a)*(d-b)*(d-c));\r\n	}\r\n  public static void triangle(int a,int b,int c) \r\n{\r\n	  if(a>0&&b>0&&c>0)\r\n	  {\r\n		  if(a+b<=c||a+c<=b||b+c<=a)\r\n		  {\r\n			  throw new IllegalArgumentException();\r\n		  }	 \r\n	  } \r\n	  else throw new NumberFormatException();\r\n}\r\n  public static void main(String[] args) \r\n{\r\n	  int []A=new int[3];\r\n	  A[0]=A[1]=A[2]=0;\r\n	  Scanner in=new Scanner(System.in);\r\n	  try \r\n	  { \r\n		System.out.println(\"请输入三角形三边长:\");\r\n		A[0]=in.nextInt();\r\n		A[1]=in.nextInt();\r\n		A[2]=in.nextInt();\r\n		System.out.println(A[0]/A[1]/A[2]);\r\n		triangle(A[0],A[1],A[2]);  \r\n		getArea(A[0],A[1],A[2]);\r\n	  }\r\n	  catch(ArrayIndexOutOfBoundsException e1)\r\n	  {\r\n		  System.out.println(\"数据个数\");\r\n	  }\r\n	  catch(NumberFormatException e2) \r\n	  {\r\n		  System.out.println(\"a,b,c不能构成三角形!\");\r\n	  }\r\n	  catch(IllegalArgumentException e3)\r\n	  {\r\n		  System.out.println(\"三角形边长必须大于0!\");\r\n	  }  \r\n}\r\n}\r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5684,50,567,73,'A					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5685,50,567,74,'b					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5686,50,567,67,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5687,50,567,105,'D					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5688,50,567,108,'B				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5689,50,567,121,'C					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5690,50,567,137,'one two default					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5691,50,567,138,'Equal 					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5692,50,567,55,'Not Equal! 10					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5693,50,567,57,'17 9 17 9			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5694,50,567,135,'import java.io.*;\r\nimport java.util.Iterator;\r\nimport java.util.ArrayList;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class WordChar {\r\n    public static void main(String[] args){\r\n        File file=new File(\"D://Test//wb.txt\");\r\n        int wordNum=0;\r\n        if(file.exists()){\r\n            String path=file.getAbsolutePath();\r\n            try {\r\n                FileReader fr=new FileReader(path);\r\n                BufferedReader br=new BufferedReader(fr);\r\n                String str1;\r\n                int lineNum=0;\r\n                ArrayList array=new ArrayList();\r\n                while ((str1 = br.readLine()) != null) {\r\n                    String[] str2 = str1.split(\"\\\\s+\");\r\n                    array.add(str2);\r\n                    lineNum++;\r\n                }\r\n                fr.close();\r\n                br.close();\r\n                String regex = \".*[a-zA-Z]+.*\";\r\n                Pattern p = Pattern.compile(regex);\r\n                Iterator it = array.iterator();\r\n                while (it.hasNext()) {\r\n                    String[] str3 = (String[]) it.next();\r\n                    for (int a = 0; a < str3.length; a++) {\r\n                        Matcher m = p.matcher(str3[a]);\r\n                        if (m.matches()) {\r\n                            wordNum++;\r\n                        }\r\n                    }\r\n                }\r\n                System.out.println(\"文本文件的单词数量为：\" + wordNum);\r\n                System.out.println(\"文本文件的行数为：\"+lineNum);\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n}   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5695,50,567,136,'import java.sql.*;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.*;\r\nclass database {\r\n    private static final String DRIVER_CLASS = \"com.mysql.cj.jdbc.Driver\";\r\n    private static final String DATABASE_URL = \"jdbc:mysql://localhost:3306/student?\";\r\n    private static final String DATABASE_USER = \"root\";\r\n    private static final String DATABASE_PASSWORD = \"510520yc\";\r\n\r\n\r\n    static Connection getC(){\r\n         Connection c=null;\r\n         try {\r\n            c = DriverManager.getConnection(DATABASE_URL,DATABASE_USER,DATABASE_PASSWORD);\r\n             Class.forName(DRIVER_CLASS);\r\n         } catch (ClassNotFoundException | SQLException e) {\r\n             e.printStackTrace();\r\n         }\r\n          try {\r\n              if(c!=null)\r\n              c.close();\r\n          } catch (SQLException e) {\r\n              e.printStackTrace();\r\n          }\r\n          return c;\r\n      }\r\n    void closeR(ResultSet r){\r\n        try {\r\n            if(r!=null)\r\n                r.close();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n      void closeS(Statement s){\r\n            try {\r\n                if(s!=null)\r\n                s.close();\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n      }\r\n}\r\nclass Student {\r\n    private int id;\r\n    private String loginname;\r\n    private String password;\r\n    private String username;\r\n    private int age;\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getLoginname() {\r\n        return loginname;\r\n    }\r\n\r\n    public void setLoginname(String loginname) {\r\n        this.loginname = loginname;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public int getAge() {\r\n        return age;\r\n    }\r\n\r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n    public void disp(){\r\n        System.out.println(\"id为：\"+id);\r\n        System.out.println(\"用户名loginname为：\"+loginname);\r\n        System.out.println(\"密码password为：\"+password);\r\n        System.out.println(\"使用者姓名username为：\"+username);\r\n        System.out.println(\"年龄age为：\"+age);\r\n    }\r\n}\r\nclass StudentDao {\r\n    Connection c;\r\n    PreparedStatement p;\r\n    ResultSet r;\r\n    public int searchByLoginnameAndPassword(int loginname,String password){\r\n        try {\r\n            c=database.getC();\r\n            p=c.prepareStatement(\"select * from students where loginname=? and password=?\")\r\n            p.setInt(1,loginname);\r\n            p.setString(2,password);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public static Student searchByUsername(String username){\r\n        List student=new ArrayList();\r\n        username= String.valueOf(database.getC());\r\n        return username;\r\n    }\r\n}\r\npublic class mainMethod {\r\n    public static void main(String[] args){\r\n        StudentDao sd=new StudentDao();\r\n        Student student;\r\n        student=StudentDao.searchByUsername(\"XINGYUNCHENLIN\");\r\n        System.out.println(StudentDao.searchByUsername(\"XINGYUNCHENLIN\",\"510520YC\");\r\n    }\r\n}					   \r\n					   ',20,20,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5696,50,567,134,'import java.lang.Math;\r\nimport java.util.Scanner;\r\nimport java.lang.Exception;\r\nimport java.util.InputMismatchException;\r\nclass throwException {\r\n    public int[] x=new  int[3];\r\n    int area;\r\n    Scanner input =new Scanner(System.in);\r\n    void triangle(){\r\n        System.out.println(\"请输入三角形的三边长:\");\r\n        this.x[0]=input.nextInt();\r\n        this.x[1]=input.nextInt();\r\n        this.x[2]=input.nextInt();\r\n    }\r\n    void getArea(int a,int b,int c){\r\n        double p=(a+b+c)/2.0;\r\n        area= (int) Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n        System.out.println(\"三角形的面积为：\"+area);\r\n    }\r\n}\r\npublic class mainMethod {\r\n    public static void main(String[] args) {\r\n        try\r\n        {\r\n            throwException t = new throwException();\r\n            t.triangle();\r\n            if (t.x[0] + t.x[1] <= t.x[2] || t.x[0] + t.x[2] <= t.x[1] || t.x[1] + t.x[2] <= t.x[0])\r\n                throw new IllegalArgumentException();\r\n            if (t.x[0] <= 0 || t.x[1] <= 0 || t.x[2] <= 0)\r\n                throw new InputMismatchException();\r\n            int x=t.x[0]/t.x[1];\r\n            int y=t.x[0]/t.x[2];\r\n            int z=t.x[1]/t.x[0];\r\n        }catch (InputMismatchException e1){\r\n            System.out.println(\"边长长度输入与类型不匹配！\");\r\n        } catch (ArithmeticException e2) {\r\n            System.out.println(\"不能构成三角形！\");\r\n        }catch(Exception e3){\r\n            System.out.println(\"程序运行错误！\");\r\n        }finally{\r\n            System.out.println(\"程序运行完毕！\");\r\n        }\r\n    }\r\n}\r\n\r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5697,50,562,73,'A	   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5698,50,562,74,'B			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5699,50,562,67,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5700,50,562,105,'C                                                                                                                                                                                               					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5701,50,562,108,'B					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5702,50,562,121,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5703,50,562,137,'one two default				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5704,50,562,138,'Equal					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5705,50,562,55,'Not equal!10					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5706,50,562,57,'17 9 17 9					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5707,50,562,135,'import java.io.*;\r\npublic class test12 {\r\n\r\n	public static void main(String[] args) {\r\n		try {\r\n			String line;\r\n			int word;\r\n			int lineSum=0;\r\n			int wordSum=0;\r\n			//创建文本文件“t12.txt”抽象路径\r\n			String filename=\"D:\\\\study\\\\java\\\\test12\\\\t12.txt\";\r\n			File w1=new File(filename);\r\n			//创建输入流文件\r\n			BufferedReader tReader1=new BufferedReader(new FileReader(\"t12.txt\"));\r\n			BufferedReader tReader2=new BufferedReader(new FileReader(\"t12.txt\"));\r\n			//统计\r\n			line=null;//确保第一个数正常输出\r\n			while((line=tReader1.readLine())!=null) {\r\n				\r\n				System.out.println(line);\r\n				lineSum++;\r\n			}\r\n			System.out.println(\"行数：\"+lineSum);\r\n			while((word=tReader2.read())!=-1) {\r\n				if(word!=\' \'&&word!=\'\\r\'&&word!=\'\\n\') {\r\n					wordSum++;\r\n				}\r\n			}\r\n			System.out.println(\"个数：\"+wordSum);\r\n			tReader1.close();\r\n			tReader2.close();\r\n		}catch(Exception e){\r\n			e.getStackTrace();\r\n		}\r\n		\r\n	}\r\n\r\n}\r\n\r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5708,50,562,136,'import java.sql.*;\r\n\r\npublic class ConnectionManager {\r\n	\r\n	private static final String DRIVER_CLASS=\"com.mysql.jdbc.Driver\";//定义的数据库驱动字符串\r\n	private static final String DATEBASE_URL=\"jdbc:mysql://locaohost:3306/student\";//定义数据库连接字符串\r\n	private static final String DATEBASE_USER=\"root\";\r\n	private static final String DATEBASE_PASSWORD=\"001107\";	\r\n	public static Connection getConnection() {\r\n		Connection dbConnection=null;\r\n		try {\r\n			Class.forName(DRIVER_CLASS);\r\n			dbConnection=DriverManager.getConnection(DATEBASE_URL, DATEBASE_USER, DATEBASE_PASSWORD);\r\n		}catch(Exception e){\r\n			e.printStackTrace();\r\n		}\r\n		return dbConnection;\r\n	}\r\n	\r\n		\r\n}\r\n\r\npublic class Student {\r\n		private int id;\r\n		private String loginname;//登录名\r\n		private String password;//密码\r\n		private String username;//学生姓名\r\n		private int age;  //年龄\r\n	//相应的set和get\r\n		public int getId() {\r\n			return id;\r\n		}\r\n		public void setId(int id) {\r\n			this.id = id;\r\n		}\r\n		public String getLoginname() {\r\n			return loginname;\r\n		}\r\n		public void setLoginname(String string) {\r\n			this.loginname = string;\r\n		}\r\n		public String getPassword() {\r\n			return password;\r\n		}\r\n		public void setPassword(String password) {\r\n			this.password = password;\r\n		}\r\n		public String getUsername() {\r\n			return username;\r\n		}\r\n		public void setUsername(String username) {\r\n			this.username = username;\r\n		}\r\n		public int getAge() {\r\n			return age;\r\n		}\r\n		public void setAge(int age) {\r\n			this.age = age;\r\n		}\r\n		\r\n		\r\n	}\r\n\r\npublic class StudentDao {\r\n	private Connection connection;\r\n	private PreparedStatement studentQuery;\r\n	private ResultSet result;\r\n	private int re;\r\n	//根据登录名和密码查询用户信息，如果找到满足条件用户则返回1，否则返回0\r\n	public int searchByLoginnameAndPassword(String loginname,String password) {\r\n		try {\r\n			\r\n			connection=ConnectionManager.getConnection();\r\n			String sql=\"selcet loginname, password from students\";\r\n			result=studentQuery.executeQuery(sql);\r\n			\r\n			while(result.next()) {\r\n				Student kid=new Student();\r\n				kid.setLoginname(result.getString(\"loginname\"));\r\n				kid.setPassword(result.getString(\"password\"));\r\n				if(kid.getLoginname()==loginname&&kid.getPassword()==password) re= 1;\r\n				else re= 0;\r\n			}\r\n		}catch(SQLException dbe) {\r\n			dbe.printStackTrace();\r\n		}\r\n		return re;\r\n	}\r\n	//根据用户名进行模糊查询，返回值为一个List类型的实例，数组实例中存放的是Student类的对象。\r\n	public List<Student> searchByUsername(String username) {\r\n		List<Student> studentList=new ArrayList<Student>();//获取学生列表\r\n		try {\r\n			connection=ConnectionManager.getConnection();\r\n			studentQuery=connection.prepareStatement(\"根据用户名\"+username+\"从students中查找用户\");\r\n			result=studentQuery.executeQuery();\r\n			\r\n			while(result.next()) {\r\n				Student kid=new Student();\r\n				kid.setId(result.getInt(\"id\"));\r\n				kid.setLoginname(result.getString(\"loginname\"));\r\n				kid.setPassword(result.getString(\"password\"));\r\n				kid.setUsername(result.getString(\"username\"));\r\n				kid.setAge(result.getInt(\"age\"));\r\n				studentList.add(kid);\r\n			}\r\n		}catch(SQLException dbe) {\r\n			dbe.printStackTrace();\r\n		}\r\n		return studentList;\r\n	}\r\n}\r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5709,50,562,134,'import java.lang.Math;\r\nimport java.util.InputMismatchException;\r\nimport java.lang.*;\r\nimport java.util.Scanner;\r\nimport java.lang.ArrayIndexOutOfBoundsException;\r\nimport java.util.Scanner;\r\n\r\npublic class Area {\r\n	\r\n	\r\n	public void triangle(int a, int b, int c) throws Exception  {\r\n		double p=(a+b+c)/2;\r\n		double s=Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n		if(a*b*c==0)throw new Exception(\"数据个数不满足要求！\");\r\n		else 	if((a+b<=c)||(a+c<=b)||(b+c<=a))throw new IllegalArgumentException(\"三条边的值不能构成三角形！\");\r\n		else System.out.println(\"三角形的面积是：\"+s);\r\n	}\r\n}\r\n\r\n\r\npublic class test11 {\r\n\r\n	public static void main(String[] args) {\r\n		Area get=new Area();\r\n		int[] length=new int[3];\r\n		Scanner in=new Scanner(System.in);\r\n		System.out.print(\"请输入三角形边长度输入-9结束：\");\r\n		int[] s=new int[100];\r\n		try {\r\n				for(int i=0; i<100; i++) {\r\n				s[i]=in.nextInt();\r\n				if(s[i]==-9)break;\r\n				 length[i]=s[i];\r\n			}\r\n				\r\n			get.triangle(length[0],length[1], length[2]);	\r\n			}catch(InputMismatchException e1) {\r\n				System.out.println(\"异常：数据类型不匹配！\");	\r\n			}catch(ArrayIndexOutOfBoundsException e2) {\r\n				System.out.println(\"异常1：数据个数不满足要求！\");		\r\n			}catch(IllegalArgumentException e3) {\r\n				System.out.println(\"异常：\"+e3.getMessage());	\r\n			}catch(Exception e4) {\r\n				System.out.println(\"异常2：\"+e4.getMessage());\r\n			}\r\n\r\n	}\r\n}\r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5710,50,571,73,'A\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5711,50,571,74,'B\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5712,50,571,67,'D\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5713,50,571,105,'C\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5714,50,571,108,'B\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5715,50,571,121,'D\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5716,50,571,137,'one two default\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5717,50,571,138,'Not Equal\r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5718,50,571,55,'Not equal! 10\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5719,50,571,57,'17 9 17 9\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5720,50,571,135,'import java.io.BufferedReader;\r\nimport java.io.IOException;\r\n\r\nclass File_Stream_Statistics {\r\n    private int LineNum = 0,\r\n            WordNum = 0;\r\n\r\n    File_Stream_Statistics(BufferedReader bufferedReader) {\r\n        String line;\r\n        char letter;\r\n        try {\r\n            while ((line = bufferedReader.readLine()) != null) {\r\n                LineNum++;\r\n                boolean wordFlag = false;\r\n                for (int i = 0; i < line.length(); i++) {\r\n                    letter = line.charAt(i);\r\n                    if (((letter >= \'A\' && letter <= \'Z\') || (letter >= \'a\' && letter <= \'z\')))\r\n                        wordFlag=true;\r\n                    else\r\n                        if(wordFlag){\r\n                            WordNum++;\r\n                            wordFlag=false;\r\n                        }\r\n                }\r\n                if(wordFlag) {\r\n                    WordNum++;\r\n                    wordFlag = false;\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            System.out.println(e);\r\n        }\r\n    }\r\n\r\n    int GetLineNum() {\r\n        return LineNum;\r\n    }\r\n\r\n    int GetWordNum() {\r\n        return WordNum;\r\n    }\r\n}\r\n\r\nimport java.io.*;\r\n\r\npublic class File_Stream_Statistics_TestDrive {\r\n    public static void main(String[] args) {\r\n        try {\r\n            File file =new File(\"W:\\\\IDEA_JAVA\\\\JavaHomeWork\\\\src\\\\The_sixth_homework\\\\File_Stream_Statistics\\\\testFile\");\r\n            FileReader fileReader = new FileReader(file);\r\n            BufferedReader bufferedReader = new BufferedReader(fileReader);\r\n            File_Stream_Statistics file_stream_statistics = new File_Stream_Statistics(bufferedReader);\r\n            System.out.println(\"文件中的单词数为 \" + file_stream_statistics.GetWordNum() + \" 个\");\r\n            System.out.println(\"文件中的行数为 \" + file_stream_statistics.GetLineNum() + \" 行\");\r\n            bufferedReader.close();\r\n            fileReader.close();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n					   ',20,15,'					   ',0,'','',NULL),
 (5721,50,571,136,'import java.sql.*;\r\n\r\nclass ConnectionManager {\r\n    private static final String DRIVER_CLASS = \"com.mysql.cj.jdbc.Driver\";\r\n    private static final String DATABASE_URL = \"jdbc:mysql://localhost:3306/student?\";\r\n    private static final String DATABASE_USER = \"root\";\r\n    private static final String DATABASE_PASSWORD = \"laowei\";\r\n\r\n    static Connection getConnection() {\r\n        Connection connection = null;\r\n        try {\r\n            Class.forName(DRIVER_CLASS);\r\n            connection = DriverManager.getConnection(DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return connection;\r\n    }\r\n\r\n    static void closeConnection(Connection connection) {\r\n        try {\r\n            if (connection != null)\r\n                connection.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    static void closeStatement(Statement statement) {\r\n        try {\r\n            if (statement != null)\r\n                statement.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    static void closeResultSet(ResultSet resultSet) {\r\n        try {\r\n            if (resultSet != null)\r\n                resultSet.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n}\r\n\r\npublic class Student {\r\n    private int ID;\r\n    private String loginName;\r\n    private String password;\r\n    private String username;\r\n    private int age;\r\n\r\n    public void SetID(int ID_) {\r\n        ID = ID_;\r\n    }\r\n\r\n    public int GetID() {\r\n        return ID;\r\n    }\r\n\r\n    public void SetLoginName(String loginName_) {\r\n        loginName = loginName_;\r\n    }\r\n\r\n    public String GetLoginName() {\r\n        return loginName;\r\n    }\r\n\r\n    public void SetPassword(String password_) {\r\n        password = password_;\r\n    }\r\n\r\n    public String GetPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void SetUserName(String username_) {\r\n        username = username_;\r\n    }\r\n\r\n    public String GetUserName() {\r\n        return username;\r\n    }\r\n\r\n    public void SetAge(int age_) {\r\n        age = age_;\r\n    }\r\n\r\n    public int GetAge() {\r\n        return age;\r\n    }\r\n\r\n    public void printAll() {\r\n        System.out.println(\"ID ： \" + ID);\r\n        System.out.println(\"loginName : \" + loginName);\r\n        System.out.println(\"password : \" + password);\r\n        System.out.println(\"username : \" + username);\r\n        System.out.println(\"age : \" + age);\r\n    }\r\n}\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.sql.*;\r\nimport java.util.*;\r\n\r\npublic class StudentDao {\r\n    private Connection connection;\r\n    private PreparedStatement preparedStatement;\r\n    private ResultSet resultSet;\r\n\r\n    public int searchByLoginNameAndPassword(String loginName, String password) {\r\n        int result = 0;\r\n        try {\r\n            connection = ConnectionManager.getConnection();\r\n            preparedStatement = connection.prepareStatement(\"select * from students where loginName=? and password=?\");\r\n            preparedStatement.setString(1, loginName);\r\n            preparedStatement.setString(2, password);\r\n            ResultSet resultSet = preparedStatement.executeQuery();\r\n            if (resultSet.next()) {\r\n                result = 1;\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            ConnectionManager.closeResultSet(resultSet);\r\n            ConnectionManager.closeStatement(preparedStatement);\r\n            ConnectionManager.closeConnection(connection);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public List<Student> searchByUsername(String username) {\r\n        List<Student> studentList = new ArrayList<Student>();\r\n\r\n        try {\r\n            connection = ConnectionManager.getConnection();\r\n            preparedStatement = connection.prepareStatement(\"select * from students where username like \'%\" + username + \"%\'\");\r\n            ResultSet resultSet = preparedStatement.executeQuery();\r\n            while (resultSet.next()) {\r\n                Student student = new Student();\r\n                student.SetID(resultSet.getInt(1));\r\n                student.SetLoginName(resultSet.getString(2));\r\n                student.SetPassword(resultSet.getString(3));\r\n                student.SetUserName(resultSet.getString(4));\r\n                student.SetAge(resultSet.getInt(5));\r\n                studentList.add(student);\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            ConnectionManager.closeResultSet(resultSet);\r\n            ConnectionManager.closeStatement(preparedStatement);\r\n            ConnectionManager.closeConnection(connection);\r\n        }\r\n        return studentList;\r\n    }\r\n}\r\n\r\nimport java.util.*;\r\n\r\npublic class StudentDao_TestDrive {\r\n    public static void main(String[] args) {\r\n        List<Student> studentList;\r\n        StudentDao studentDao = new StudentDao();\r\n        studentList = studentDao.searchByUsername(\"WEST\");\r\n        for (Student e : studentList) {\r\n            e.printAll();\r\n        }\r\n        System.out.println(studentDao.searchByLoginNameAndPassword(\"WEST\", \"west\"));\r\n    }\r\n}\r\n					   ',20,20,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5722,50,571,134,'class Triangle {\r\n    private double a, b, c;\r\n    Triangle(double a_, double b_, double c_) {\r\n        double min = Math.min(Math.min(a_, b_), c_);\r\n        try {\r\n            if (min <= 0) {\r\n                throw new IllegalArgumentException(\"数据中包含负数\");\r\n            }\r\n            double max = Math.max(Math.max(a_, b_), c_);\r\n            double mid = Math.max(Math.min(a_, b_), Math.min(b_, c_));\r\n            if (max <= (mid + min)) {\r\n                a = a_;\r\n                b = b_;\r\n                c = c_;\r\n            } else {\r\n                throw new IllegalArgumentException(\"输入的数据不能构成三角形\");\r\n            }\r\n        } catch (IllegalArgumentException e) {\r\n            System.out.println(e);\r\n        }\r\n    }\r\n\r\n    double getArea() {\r\n        double p = (a + b + c) / 2;\r\n        return Math.pow(p * (p - a) * (p - b) * (p - c), 0.5);\r\n    }\r\n}\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\n\r\nclass CollectData {\r\n    private int date_n;\r\n\r\n    CollectData(int n) {\r\n        date_n = n;\r\n    }\r\n\r\n    void collect(ArrayList<Double> Double_array) {\r\n        double data_input;\r\n        Scanner input = new Scanner(System.in);\r\n        System.out.println(\"Now input your Triangle date:\");\r\n        try {\r\n            for (int i = 0; i < date_n; i++) {\r\n                if (input.hasNext()) {\r\n                    data_input = input.nextDouble();\r\n                    Double_array.add(data_input);\r\n                }\r\n            }\r\n        } catch (InputMismatchException e) {\r\n            System.out.println(\"输入数据包含非数值元素 \" + e);\r\n        }\r\n        input.close();\r\n    }\r\n}\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Triangle_TestDrive {\r\n    public static void main(String[] args) {\r\n        ArrayList<Double> list=new ArrayList<Double>();\r\n        CollectData collectData =new CollectData(3);\r\n        collectData.collect(list);\r\n        try{\r\n            if(list.size()<3) throw new IllegalArgumentException();\r\n            Triangle triangle = new Triangle(list.get(0),list.get(1),list.get(2));\r\n            System.out.println(\"三角形面积为 \" + triangle.getArea());\r\n\r\n        } catch(IllegalArgumentException e){\r\n            System.out.println(\"数据个数不符\");\r\n        }\r\n    }\r\n}\r\n\r\n\r\n					   ',20,20,'					   ',0,'','',NULL),
 (5723,50,570,73,'A					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5724,50,570,74,'B					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5725,50,570,67,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5726,50,570,105,'D					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5727,50,570,108,'B					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5728,50,570,121,'C					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5729,50,570,137,'one\r\ntwo\r\ndefault					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5730,50,570,138,'Equal				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5731,50,570,55,'Not equal! 10					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5732,50,570,57,'17\r\n9\r\n17\r\n9					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5733,50,570,135,'import java.io.*;\r\n\r\npublic class BufRead {\r\n    private int line=0;\r\n    private int word=0;\r\n\r\n    BufRead(){\r\n        BufReadInit();\r\n    }\r\n\r\n    void BufReadInit(){\r\n        try{\r\n            File f1=new File(\"R:\\\\java\\\\6\\\\test.txt\");\r\n            FileReader FR1=new FileReader(f1);\r\n            BufferedReader BR1=new BufferedReader(FR1);\r\n            getWordAndLineN(BR1);\r\n            BR1.close();\r\n            FR1.close();\r\n        }catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    void getWordAndLineN(BufferedReader BR1){\r\n        String li;\r\n        try{\r\n            while ((li=BR1.readLine())!=null){\r\n                char le;\r\n                line++;\r\n                boolean f=false;\r\n                for(int k=0;k<li.length();k++){\r\n                    le=li.charAt(k);\r\n                    if (((le >= \'A\' && le <= \'Z\') || (le >= \'a\' && le <= \'z\')))\r\n                        f=true;\r\n                    else if(f){\r\n                        word++;\r\n                        f=false;\r\n                    }\r\n                }\r\n                if(f) {\r\n                    word++;\r\n                    f = false;\r\n                }\r\n            }\r\n        }catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public int getWord() {\r\n        return word;\r\n    }\r\n\r\n    public int getLine() {\r\n        return line;\r\n    }\r\n}\r\npublic class BufReadTest {\r\n    public static void main(String[] args) {\r\n        BufRead bufRead=new BufRead();\r\n        System.out.println(\"单词数为 \" + bufRead.getWord());\r\n        System.out.println(\"行数为 \" + bufRead.getLine());\r\n    }\r\n}					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5734,50,570,136,'public class student {\r\n    private int id;\r\n    private String loginname;\r\n    private String password;\r\n    private String username;\r\n    private int age;\r\n\r\n    student(int id, String loginname, String password, String username, int age) {\r\n        this.id = id;\r\n        this.loginname = loginname;\r\n        this.password = password;\r\n        this.username = username;\r\n        this.age = age;\r\n    }\r\n\r\n    public void print() {\r\n        System.out.println(\"id为：\" + id);\r\n        System.out.println(\"用户名loginname为：\" + loginname);\r\n        System.out.println(\"密码password为：\" + password);\r\n        System.out.println(\"使用者姓名username为：\" + username);\r\n        System.out.println(\"年龄age为：\" + age);\r\n    }\r\n}\r\npublic class studentdao{\r\n\r\n    public int searchByLoginnameAndPassword(student s, int loginname, String password) {\r\n        if (loginname == s.loginname() && password == s.password())\r\n            s.print();\r\n        return 0;\r\n    }\r\n\r\n    public student searchByUsername(student s, String username) {\r\n        if (username = s.username())\r\n            s.print();\r\n        return s;\r\n    }\r\n}\r\n\r\n\r\n					   \r\n					   ',20,10,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5735,50,570,134,'import java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\n\r\nclass Triangle {\r\n    private double a, b, c;\r\n\r\n    Triangle() {\r\n        double[] sjx = new double[3];\r\n        try (Scanner scan = new Scanner(System.in)) {\r\n\r\n            System.out.println(\"输入三角形数据\");\r\n            for (int i = 0; i < 3; i++) {\r\n                if (scan.hasNextDouble()) {\r\n                    sjx[i] = scan.nextDouble();\r\n                }\r\n            }\r\n        } catch (InputMismatchException e) {\r\n            e.printStackTrace();\r\n        }\r\n        try {\r\n            if (sjx[0] >= (sjx[1] + sjx[2]) || sjx[1] >= (sjx[0] + sjx[2]) || sjx[2] >= (sjx[1] + sjx[0]))\r\n                throw new IllegalArgumentException();\r\n            a = sjx[0];\r\n            b = sjx[1];\r\n            c = sjx[2];\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    double getArea() {\r\n        double q = (a + b + c) / 2;\r\n        return Math.pow(q * (q - a) * (q - b) * (q - c), 0.5);\r\n    }\r\n}\r\npublic class TriangleTest {\r\n    public static void main(String[] args) {\r\n        Triangle triangle=new Triangle();\r\n        System.out.println(\"面积为 \"+triangle.getArea());\r\n    }\r\n}					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5736,50,565,73,'A				   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5737,50,565,74,'B				   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5738,50,565,67,'D			   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5739,50,565,105,'C				   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5740,50,565,108,'B					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5741,50,565,121,'D					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5742,50,565,137,'one two default			   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5743,50,565,138,'Equal					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5744,50,565,55,'Not equal!10					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5745,50,565,57,'17 9 17 9					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5746,50,565,135,'import java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        try {\r\n            BufferedReader br = new BufferedReader(new FileReader(\"E:\\\\1.txt\"));\r\n            String str = \"\";\r\n            int m=0;\r\n            int lines=0;\r\n                while ((str = br.readLine()) != null) {\r\n                    m += str.split(\"[ \\n]\").length;\r\n                    lines++;\r\n        }\r\n           System.out.println(\"文件行数: \" + lines);\r\n            System.out.println(\"单词个数：\"+m);\r\n        } catch (FileNotFoundException e1) {\r\n            e1.printStackTrace();\r\n        } catch (IOException e2) {\r\n            e2.printStackTrace();\r\n        }\r\n    }\r\n}\r\n\r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5747,50,565,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic class StudentDao {\r\n    private Connection connection;\r\n    private PreparedStatement StudentQuery;\r\n    private ResultSet results;\r\n    public int searchByLoginnameAndPassword(int loginname,String password);\r\n    {\r\n        int result=0;\r\n        try{\r\n            connection=ConnectionManger.getConnection();\r\n            StudentQuery=connection.prepareStatement(\"SELECT * from student where id=? and password=? \");\r\n            StudentQuery.setString(1,loginname);\r\n            StudentQuery.setString(2,password);\r\n            ResultSet results=StudentQuery.executeQuery();\r\n            if(result.next()){\r\n                result=1;\r\n            }\r\n        }\r\n        catch(SQLException exception){\r\n            exception.printStackTrace();\r\n        }\r\n        finally {\r\n            ConnectionManager.closeResultSet(results);\r\n            ConnectionManager.closeStatement(StudentQuery);\r\n            ConnectionManager.closeConnection(connection);\r\n        }\r\n        return result;\r\n    }\r\n    public Student searchByUsername(String username)\r\n    {\r\n        List StudentList(String username){\r\n            List StudentList=new ArrayList();\r\n            try{\r\n                connection=ConnectionManager.getConnection();\r\n                StudentQuery=connection.prepareStatement(\"SELECT*FROM student where username like \'%\'\'+username+\'\'%\'\");\r\n                ResultSet results=StudentQuery.executeQuery();\r\n                while(results.next()){\r\n                    Student student=new Student();\r\n                    student.setId(results.getInt(\"id\"));\r\n                    student.setLoginName(results.getString(\"loginname\"));\r\n                    student.setPassword(results.getString(\"password\"));\r\n                    student.setAge(results.getInt(\"age\"));\r\n                    StudentList.add(student);\r\n                }\r\n            }\r\n            catch(SQLException exception){\r\n                exception.printStackTrace();\r\n            }\r\n            finally{\r\n                ConnectionManager.closeResultSet(results);\r\n                ConnectionManager.closeStatement(StudentQuery);\r\n                ConnectionManager.closeConnection(connection);\r\n            }\r\n            return StudentList;\r\n    }\r\n    }\r\n}\r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',20,10,'					   ',80,'80','陈嘉懿',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5748,50,565,134,'import java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\npublic class main{\r\n    public static void triangle(){\r\n        Scanner in=new Scanner(System.in);\r\n        System.out.println(\"请输入你要输入的边数\");\r\n        int n=in.nextInt();\r\n        int [] A=new int [n];\r\n        System.out.println(\"请输入三角形的边：\");\r\n        int k=0;\r\n        for( int i=0;i<n;i++){\r\n             A[i]=in.nextInt();\r\n             k++;\r\n        }\r\n        int a=A[0];int b=A[1];int c=A[2];\r\n        int p=(a+b+c)/2;\r\n        double s=Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n        System.out.println(\"面积为：\"+s);\r\n        if(k!=3)\r\n            throw new NullPointerException(\"输入的数据个数不满足要求\");\r\n           else\r\n                System.out.println();\r\n        if((a+b<=c)||(a+c<=b)||(b+c<=a))\r\n            throw new IllegalArgumentException(\"三边的值不能构成三角形！\");\r\n        else\r\n            System.out.println(\"三边长为：\"+a+\" \"+b+\" \"+c);\r\n    }\r\n    public static void main(String[] args){\r\n        try{\r\n            triangle();\r\n        }catch (InputMismatchException e1){\r\n            System.out.println(\"异常：输入的数据类型不匹配！\");\r\n        }\r\n        catch (NullPointerException e2){\r\n            System.out.println(\"异常：\"+e2.getMessage());\r\n        }\r\n        catch (IllegalArgumentException e3){\r\n            System.out.println(\"异常：\"+e3.getMessage());\r\n        }\r\n        finally{\r\n            System.out.println(\"程序结束！\");\r\n        }\r\n    }\r\n}					   \r\n					   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5749,50,579,73,'A				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5750,50,579,74,'B			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5751,50,579,67,'D				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5752,50,579,105,'C				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5753,50,579,108,'B				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5754,50,579,121,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5755,50,579,137,'one two default		   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5756,50,579,138,'Equal				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5757,50,579,55,'Not equal! 10		   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5758,50,579,57,'17  9  17  9				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5759,50,579,135,'import java.io.BufferedReader;\r\nimport java.io.FileInputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.io.IOException;\r\n    public class Test3 {\r\n\r\n    		public static void main(String[] args) throws IOException {\r\n    			FileInputStream fis = new FileInputStream(\"src/day08/BRDemo.java\");\r\n    			InputStreamReader isr = new InputStreamReader(fis);\r\n    			BufferedReader br = new BufferedReader(isr);\r\n    			 int words= 0;\r\n    			  int lines = 0;\r\n    			  {\r\n    				  String s = br.readLine();\r\n    				  words += s.split(\" \").length;\r\n    				  lines++;\r\n    				  }\r\n    				  isr.close();\r\n    				  fis.close();\r\n    				  System.out.println(\"一共有的单词数是 ：\"+words );\r\n    				  System.out.println(\"一共有的行数是： \"+lines);\r\n    		}\r\n    }\r\n					   ',20,20,'					   ',0,'','',NULL),
 (5760,50,579,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class StudentDao{\r\n   private Connection connection;\r\n   private PreparedStatement LoginQuery;\r\n   private ResultSet rusults;\r\n   public int searchByLoginnameAndPassword(String loginname,String password){\r\n         int result=0;\r\n         try{\r\n              connection=ConnectionManager.getConnection;\r\n              LoginQuery=connection;\r\n                   prepareStatement(\"SELECT * from student where userid=? and password=?\");\r\n              LoginQuery.setString(1,loginname);\r\n              LoginQuery.setString(2,password);\r\n              ResultSet results=LoginQuery.executeQuery();\r\n              if(results.next()){\r\n                   result=1;\r\n              }\r\n         }\r\n         catch (SQLException exception){//处理数据库异常\r\n               exception.printStackTrace();\r\n         }\r\n         //释放资源\r\n         finally{\r\n              ConnectionManager.closeResultSet(results);\r\n              ConnectionManager.closeStatment(LoginQuery);\r\n              ConnectionManager.closeConnection(connection);\r\n                  }\r\n                  return result;\r\n         }\r\n         public  Student searchByUsername(String username){\r\n              Student UsernameList=new ArrayList();\r\n              try{\r\n                   connection=ConnectionManager.getConnection();\r\n                   LoginQuery=connection.prepareStatement(\"SELECT * FROM student where username like \'%\"+username+\"%\'\");\r\n                   ResultSet results=LoginQuery.executeQuery();//读取行数据\r\n                   while (result.next()){\r\n                         Student student=new Student();//将数据表中的一条记录数据添加到封装类中\r\n                         student.setId(results.getInt(1));\r\n                         student.setLoginName(results.getString(2));\r\n                         student.setPassword(results.getString(3));\r\n                         StudentnameList.add(student);\r\n                   }\r\n         }\r\n         //处理数据库异常\r\n         catch (SQLException exception){  \r\n               exception.printStackTrace();\r\n         }\r\n         //释放资源\r\n         finally{\r\n              ConnectionManager.closeResultSet(results);\r\n              ConnectionManager.closeStatment(LoginQuery);\r\n              ConnectionManager.closeConnection(connection);\r\n           }       \r\n           return UsernameList;\r\n       }\r\n}      \r\n				   \r\n					   ',20,5,'					   ',80,'80','赵颖钏',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5761,50,579,134,'import java.util.*;\r\npublic class triangle{\r\n     public int a,b,c;\r\n     public void triangle(int a,int b,int c){\r\n         if((a+b)<=c||(a+c)<=b||(b+c)<=a)\r\n            {throw new IllegalArgumentException(\"a,b,c不能构成三角形\");}\r\n            this.a=a;\r\n            this.b=b;\r\n            this.c=c;\r\n            }\r\n      public double getArea(int a,int b,int c){\r\n            double area,p;\r\n            p=(a+b+c)*1.0/2;\r\n            area=Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n            return area;\r\n          }\r\n    }\r\npublic class test2 {\r\n	public static void main(String args[]){\r\n		triangle t=new triangle();\r\n        Scanner in=new Scanner (System.in);\r\n        try{\r\n             int a=in.nextInt();\r\n             int b=in.nextInt();\r\n             int c=in.nextInt();\r\n             t.triangle(a,b,c);\r\n             System.out.println(\"三角形面积为：\"+t.getArea(a,b,c));\r\n         }catch(IllegalArgumentException e){System.out.println(\"a,b,c不能构成三角形\");}\r\n          catch(InputMismatchException e){System.out.println(\"输入的三条边的格式不对\");}\r\n          catch(Exception e){System.out.println(\"输入的数据个数不够\");}    \r\n  }\r\n}\r\n			   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5762,51,611,67,'D				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5763,51,611,68,'C				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5764,51,611,106,'A					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5765,51,611,107,'C					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5766,51,611,108,'A					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5767,51,611,121,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5768,51,611,63,'one					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5769,51,611,138,'Equal			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5770,51,611,55,'Not equal!10					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5771,51,611,57,'17 9 17 9				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5772,51,611,135,'package ng.bq.springboot.student;\r\nimport java.io.BufferedReader;\r\nimport java.io.BufferedWriter;\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\nimport java.util.HashMap;\r\n\r\npublic class BufferedReaderTest {\r\n\r\n    public static void main(String[] args) throws Exception{\r\n        BufferedReader br = new BufferedReader(new FileReader(\"E:/test.txt\"));\r\n        int charStr;\r\n        HashMap<Character, Integer> map = new HashMap<>();\r\n        while( (charStr = br.read()) != -1) {\r\n            char str = (char)charStr;\r\n            if (!map.containsKey(str)) {\r\n                map.put(str, 1);\r\n            }else {\r\n                map.put(str, map.get(str)+1);\r\n            }\r\n        }\r\n        BufferedWriter bw = new BufferedWriter(new FileWriter(\"number.txt\"));\r\n        for(Character key : map.keySet()) {\r\n            bw.write(key + \"=\"+ map.get(key));\r\n            bw.newLine();\r\n        }\r\n        bw.close();\r\n        br.close();\r\n    }\r\n\r\n}			   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5773,51,611,136,'package ng.bq.springboot.student;\r\n\r\nimport java.io.Serializable;\r\n\r\npublic class Student implements Serializable {\r\n    private int id;\r\n    private String loginname;//登录名\r\n    private String password;//密码\r\n    private String username;//学生姓名\r\n    private int age;  //年龄\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getLoginname() {\r\n        return loginname;\r\n    }\r\n\r\n    public void setLoginname(String loginname) {\r\n        this.loginname = loginname;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public int getAge() {\r\n        return age;\r\n    }\r\n\r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\n\r\n\r\npackage ng.bq.springboot.student;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class StudentDao {\r\n\r\n    public int searchByLoginnameAndPassword(String loginname,String password) throws Exception{\r\n        Class.forName(\"com.mysql.jdbc.Driver\");\r\n        String url = \"jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=gbk\";\r\n        String user = \"root\";\r\n        String pwd = \"root\";\r\n        String sql = \"select count(*) as count from student where loginname = ? and password = ?\";\r\n        Connection conn = DriverManager.getConnection(url,user , pwd);\r\n        PreparedStatement preparedStatement = conn.prepareStatement(sql);\r\n        preparedStatement.setString(1, loginname);\r\n        preparedStatement.setString(2, password);\r\n        ResultSet rs = preparedStatement.executeQuery();\r\n        rs.next();\r\n        return rs.getInt(\"count\");\r\n    }\r\n\r\n    public List<Student> searchByUsername(String username) throws Exception{\r\n        Class.forName(\"com.mysql.jdbc.Driver\");\r\n        String url = \"jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=gbk\";\r\n        String user = \"root\";\r\n        String pwd = \"root\";\r\n        String sql = \"select * from student where username like ? \";\r\n        Connection  conn = DriverManager.getConnection(url,user , pwd);\r\n        PreparedStatement preparedStatement = conn.prepareStatement(sql);\r\n        preparedStatement.setString(1, \"%\"+username+\"%\");\r\n        ResultSet rs = preparedStatement.executeQuery();\r\n        ArrayList<Student> studentList=new ArrayList<Student>();\r\n        while (rs.next()){\r\n            Student student = new Student();\r\n            student.setLoginname(rs.getString(\"loginname\"));\r\n            student.setPassword(rs.getString(\"password\"));\r\n            student.setAge(rs.getInt(\"age\"));\r\n            student.setId(rs.getInt(\"id\"));\r\n            student.setUsername(rs.getString(\"username\"));\r\n            studentList.add(student);\r\n        }\r\n        return studentList;\r\n    }\r\n}\r\n			   \r\n					   ',20,10,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5774,51,611,134,'package ng.bq.springboot.student;\r\n\r\npublic class Triangle {\r\n      public void triangle(int a, int b, int c) throws IllegalArgumentException {\r\n        if (a + b <= c || a + c <= b||b+c<=a){\r\n            throw new IllegalArgumentException(\"不能构成三角形\");\r\n        }\r\n        else{\r\n            System.out.println(a + \",\" + b + \",\" + c);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\npackage ng.bq.springboot.student;\r\nimport java.util.Arrays;\r\nimport java.util.Scanner;\r\n\r\npublic class AreaTest {\r\n\r\n\r\n public static void main(String srgs[]) {\r\n        int arr[] = new int[3];\r\n        Scanner input = new Scanner(System.in);\r\n        System.out.println(\"请输入三角形三条边：\");\r\n        try {\r\n            for (int i = 0; i < arr.length; i++) {\r\n                arr[i] = Integer.parseInt(input.next());\r\n            }\r\n        }catch (IllegalArgumentException e){\r\n            throw new IllegalArgumentException(\"输入类型不正确\");\r\n        }\r\n        try {\r\n            Arrays.sort(arr);\r\n            Triangle triangle = new Triangle();\r\n            triangle.triangle(arr[0], arr[1], arr[2]);\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n}					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5775,50,578,73,'A					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5776,50,578,74,'B					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5777,50,578,67,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5778,50,578,105,'C					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5779,50,578,108,'B					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5780,50,578,121,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5781,50,578,137,'one two default					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5782,50,578,138,'Equal					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5783,50,578,55,'Not equal! 10					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5784,50,578,57,'17 9 17 9					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5785,50,578,135,'import java.io.*;\r\n\r\nclass wordcount{\r\npublic static void printByFileReader(String filePath) throws IOException\r\n{\r\n    BufferedReader reader=new BufferedReader(\r\n            new FileReader(filePath)\r\n            );\r\n    if(!reader.ready())\r\n    {\r\n        System.out.println(\"文件流暂时无法读取\");\r\n        return;\r\n    }\r\n    int word=1;\r\n    char t=\\t;\r\n    while(t=reader.read())\r\n    {\r\n        word++;\r\n     }\r\n        \r\n    int line=1;\r\n    char n=\\n;\r\n    while(n=reader.read())\r\n    {\r\n     word++;\r\n     line++;\r\n     }\r\n     System.out.print(\"单词的个数是\"+word);\r\n     System.out.print(\"行数是\"+line);\r\n    \r\n    reader.close();\r\n}\r\n}\r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5786,50,578,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class StudentDao{\r\n private Connection connection;\r\n private PreparedStatement UserQuery;\r\n private ResultSet results;\r\n public int searchByLoginnameAndPassword(String loginname,String password){\r\n  int result=0;\r\n  try{\r\n        connection=ConnectionManager.getConnection();\r\n        UserQuery=connection.prepareStatement(\"SELECT*from student where loginname=?and password=?\");\r\n        UserQuery.setString(1,loginname);\r\n        UserQuery.setString(2,password);\r\n        ResultSet results=UserQuery.executeQuery();\r\n        if(results.next()){\r\n          result=1;}\r\n       }    \r\ncatch (SQLException exception){\r\n exception.printStackTrace();\r\n} \r\nfinally{\r\n ConnectionManager.closeResultSet(results);\r\n ConnectionManager.closeStatement(UserQuery);\r\n ConnectionManager.closeConnection(connection);\r\n}\r\nreturn result;\r\n}\r\npublic  Student searchByUsername(String username){\r\n List UserList=new ArrayList();\r\n try{\r\n      connection=ConnectionManager.getConnection;\r\n      UserQuery=connection.prepareStatement(\"SELECT*FROM student where username like \'%\"+username+\"%\'\");\r\n      ResultSet results=UserQuery.executeQuery();\r\n      while(results.next()){\r\n       Student student=new Student();\r\n       student.setUserId(results.getInt(1));\r\n       student.setLogiName(results.getString(2));\r\n       student.setPassword(results.getString(3));\r\n       UserList.add(student);}\r\n}\r\ncatch (SQLException exception){\r\n exception.printStackTrace();\r\n} \r\nfinally{\r\n ConnectionManager.closeResultSet(results);\r\n ConnectionManager.closeStatement(UserQuery);\r\n ConnectionManager.closeConnection(connection);\r\n}\r\nreturn UserList;\r\n}\r\n}\r\n					   \r\n					   ',20,5,'					   ',83,'80,83,81,80','翁佳琦,张颖,周璇,徐素皓',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5787,50,578,134,'public class EX2{ \r\nint a,b,c;\r\nvoid triangle(int a,int b,int c)\r\nthrows Exception{\r\nthis.a=a;		\r\nthis.b=b;		\r\nthis.c=c;		\r\nif(a+b>c||c-b<a){			\r\nSystem.out.println(\"构成三角形的三条边为：\"+this.a+\",\"+this.b+\",\"+this.c);}\r\nelse{			\r\nthrow new IllegalArgumentException();\r\n		}	\r\n}\r\npublic float getArea(int a,int b,int c) {          \r\nScanner scan =new Scanner(System.in);        \r\nSystem.out.println(\"输入三角形的三边\");        \r\nint a = scan.nextByte();        \r\nint b = scan.nextByte();        \r\nint c = scan.nextByte();        \r\nfloat s =(a+b+c)/2f;        \r\nfloat S = (float) Math.sqrt(s*(s-a)*(s-b)*(s-c));\r\nSystem.out.println(\"三角形的面积是\"+S);\r\n     }\r\n}\r\npublic class Test {	\r\npublic static void main(String[] args) {	\r\nEX2 E=new EX2();\r\nE.getArea();	\r\ntry {			\r\nfor(int i=0;i<s.length;i++){				\r\nif(in.hasNextInt())					\r\ns[i]=in.nextInt();				\r\nelse					\r\n{throw new InputMismatchException();}			\r\n}			\r\nArrays.sort(s);\r\nEX2 t=new EX2();			\r\nt.triangle(s[0], s[1], s[2]);	\r\n}\r\ncatch(IllegalArgumentException e) {\r\nSystem.out.println(s[0]+\",\"+s[1]+\",\"+s[2]+\",不能构成三角形\");\r\n}\r\ncatch(InputMismatchException e) {\r\nSystem.out.println(\"请输入整数作为三角形的边长！\");				\r\n}\r\ncatch (ArrayIndexOutOfBoundException e) {			\r\nSystem.out.println(\"数据个数不满足要求!\");	\r\n}	\r\n}\r\n}					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5788,50,566,73,'A',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5789,50,566,74,'B	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5790,50,566,67,'D',4,4,'					   ',0,NULL,NULL,NULL),
 (5791,50,566,105,'C',4,4,'					   ',0,NULL,NULL,NULL),
 (5792,50,566,108,'B		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5793,50,566,121,'D		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5794,50,566,137,'one\r\ntwo\r\ndefault		   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5795,50,566,138,'Equal   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5796,50,566,55,'Not equal! 10		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5797,50,566,57,'17\r\n9\r\n17\r\n9',4,0,'					   ',0,NULL,NULL,NULL),
 (5798,50,566,135,'import java.io.*;\r\n\r\npublic class zifuliu {\r\n    private int hangshu = 0, dancishu = 0;\r\n\r\n    public void danci() {\r\n        dancishu++;\r\n    }\r\n\r\n    public void hang() {\r\n        hangshu++;\r\n    }\r\n\r\n    public int getHangshu() {\r\n        return hangshu;\r\n    }\r\n\r\n    public int getDancishu() {\r\n        return dancishu;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        zifuliu zifu = new zifuliu();\r\n        try {\r\n            File f1 = new File(\"D:\\\\JAVA\\\\test.txt\");\r\n            FileReader fR1 = new FileReader(f1);\r\n            BufferedReader bF1 = new BufferedReader(fR1);\r\n            String l;\r\n            char a;\r\n            while ((l = bF1.readLine()) != null) {\r\n                boolean b = false;\r\n                for (int j = 0; j <= l.length(); j++) {\r\n                    a = l.charAt(j);\r\n                    if (((a >= \'A\' && a <= \'Z\') || (a >= \'a\' && a <= \'z\')))\r\n                        b = true;\r\n                    else if (b) {\r\n                        zifu.danci();\r\n                        b = false;\r\n                    }\r\n                }\r\n                if (b) {\r\n                    zifu.danci();\r\n                    b = false;\r\n                }\r\n                zifu.hang();\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        System.out.println(\"行数为 \" + zifu.getHangshu());\r\n        System.out.println(\"单词数 \" + zifu.getDancishu());\r\n    }\r\n}\r\n					   ',20,20,'					   ',0,'','',NULL),
 (5799,50,566,136,'import java.util.*;\r\n\r\npublic class studentdao {\r\n\r\n    private int id;\r\n    private String loginname;\r\n    private String password;\r\n    private String username;\r\n    private int age;\r\n\r\n    studentdao(int id, String loginname,String password,String username,int age){\r\n        this.id=id;\r\n        this.loginname=loginname;\r\n        this.password=password;\r\n        this.username=username;\r\n        this.age=age;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getLoginname() {\r\n        return loginname;\r\n    }\r\n\r\n    public void setLoginname(String loginname) {\r\n        this.loginname = loginname;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public int getAge() {\r\n        return age;\r\n    }\r\n\r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n\r\n    public void xianshi(){\r\n        System.out.println(\"id为：\"+id);\r\n        System.out.println(\"用户名loginname为：\"+loginname);\r\n        System.out.println(\"密码password为：\"+password);\r\n        System.out.println(\"使用者姓名username为：\"+username);\r\n        System.out.println(\"年龄age为：\"+age);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        List<studentdao> students = new ArrayList<studentdao>();\r\n        students.add(new studentdao(10,\"a\",\"123\",\"a\",1));\r\n        students.add(new studentdao(11,\"b\",\"123\",\"a\",2));\r\n        students.add(new studentdao(12,\"c\",\"132\",\"a\",3));\r\n        students.add(new studentdao(13,\"d\",\"123\",\"a\",4));\r\n        students.add(new studentdao(14,\"e\",\"132\",\"a\",5));\r\n        String loginname_=\"a\";\r\n        String password_=\"123\";\r\n        for(studentdao e:students){\r\n            if(e.loginname==loginname_&&e.password==password_)\r\n                e.xianshi();\r\n        }\r\n    }\r\n\r\n}\r\n					   ',20,15,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5800,50,566,134,'import java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\n\r\npublic class sanjiaoxing {\r\n\r\n    private double a, b, c;\r\n\r\n    private sanjiaoxing(double a_, double b_, double c_) {\r\n        try {\r\n            if (a_ >= (b_ + c_)||b_ >= (a_ + c_)||c_ >= (b_ + a_)) throw new IllegalArgumentException();\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n        a = a_;\r\n        b = b_;\r\n        c = c_;\r\n    }\r\n\r\n    private double getArea() {\r\n        double p = (a + b + c) / 2;\r\n        return Math.pow(p * (p - a) * (p - b) * (p - c), 0.5);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        double[] sanjiao = new double[3];\r\n        try {\r\n            System.out.println(\"输入三角形数据\");\r\n            for (int i = 0; i < 3; i++) {\r\n                if (in.hasNextDouble()) {\r\n                    sanjiao[i] = in.nextDouble();\r\n                }\r\n            }\r\n        } catch (InputMismatchException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            in.close();\r\n        }\r\n        try {\r\n            if (sanjiao[2] == 0) {\r\n                throw new IllegalArgumentException();\r\n            }\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        sanjiaoxing sjx = new sanjiaoxing(sanjiao[0], sanjiao[1], sanjiao[2]);\r\n\r\n        System.out.println(\"三角形面积为 \" + sjx.getArea());\r\n\r\n    }\r\n}\r\n					   ',20,20,'					   ',0,'','',NULL),
 (5801,50,568,73,'A		   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5802,50,568,74,'B				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5803,50,568,67,'D		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5804,50,568,105,'C',4,4,'					   ',0,NULL,NULL,NULL),
 (5805,50,568,108,'B			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5806,50,568,121,'D			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5807,50,568,137,'one two default  ',4,4,'					   ',0,NULL,NULL,NULL),
 (5808,50,568,138,'Not Equal ',4,0,'					   ',0,NULL,NULL,NULL),
 (5809,50,568,55,'Not equal! 10			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5810,50,568,57,'17 9 17 9',4,4,'					   ',0,NULL,NULL,NULL),
 (5811,50,568,135,'import java.io.BufferedReader;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\n\r\npublic class mm {\r\n	public static void main(String[] args) {\r\n		try {\r\n		File  file = new  File(\"D:\\\\JAVA\\\\java.txt\");\r\n		int wordnum=0;\r\n		int linenum=0;\r\n		FileReader FR = new FileReader(file);\r\n		BufferedReader BR = new BufferedReader(FR);\r\n		String line;\r\n		line=BR.readLine();\r\n		while (line != null) {\r\n            linenum++;\r\n            boolean wordFlag = false;\r\n            char[] word= line.toCharArray();\r\n            for (int i = 0; i < word.length; i++) {\r\n                if (((word[i]>= \'A\' && word[i] <= \'Z\') || (word[i] >= \'a\' && word[i] <= \'z\')))\r\n                    wordFlag=true;\r\n                else\r\n                    if(wordFlag){\r\n                        wordnum++;\r\n                        wordFlag=false;\r\n                    }\r\n            }\r\n            if(wordFlag) {\r\n                wordnum++;\r\n                wordFlag = false;\r\n            }\r\n        }\r\n		System.out.print (\"单词数目:\"+wordnum);\r\n	    System.out. print (\"行数:\"+linenum);\r\n	    BR.close();\r\n	    FR.close();\r\n		}catch(FileNotFoundException e){\r\n			e.printStackTrace();\r\n        }catch (IOException e){\r\n        	e.printStackTrace();\r\n        }\r\n	}\r\n\r\n}			   ',20,20,'					   ',0,'','',NULL),
 (5812,50,568,136,'import java.sql.*;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.util.*;\r\npublic class Student {\r\n	private int id;\r\n	private String loginname;//登录名\r\n	private String password;//密码\r\n	private String username;//学生姓名\r\n	private int age;  //年龄\r\n}\r\n\r\npublic class ConnectionManager{\r\n	//定义数据库驱动字符串\r\n	private static final String DRIVER_CLASS=\"com.mysql.jdbc.Driver\";\r\n	//定义数据库连接的字符串\r\n	private static final String DATABASE_URL=\"jdbc:mysql://localhost:3306/book?\";\r\n	//登录数据库用户名\r\n	private static final String DATABASE_USRE=\"root\";\r\n	//登录数据库密码\r\n	private static final String DATABASE_PASSWORD=\"11\";\r\n	public static Connection getConnction() {\r\n		Connection dbConnection=null;\r\n		try {\r\n			Class.forName(DRIVER_CLASS);\r\n			dbConnection=DriverManager.getConnection(DATABASE_URL,DATABASE_USRE,DATABASE_PASSWORD);\r\n		}catch(Exception e){\r\n			e.printStackTrace();\r\n		}return dbConnection;\r\n	}\r\n}\r\n\r\npublic interface StudentDao{\r\n	public int searchByLoginnameAndPassword(int Loginname,String Password);\r\n	public List SearchByUsername(String Username);\r\n}\r\n\r\npublic class student  implements StudentDao{\r\n		private Connection con;\r\n		private PreparedStatement user;\r\n		private ResultSet results;\r\n		public int searchByLoginnameAndPassword(int loginname,String password);{\r\n		con=ConnectionManager.getConnction();\r\n		//得到数据库连接\r\n		int result;\r\n		try {\r\n			user=con.prepareStatement(\"SELECT loginname,password\"+\"id,user,age\"+\"FROM student where loginname\"+\"FROM student where password+password\");\r\n			ResultSet results=user.executeQuery();\r\n			//执行结果返回集\r\n			if(results.next()) {result=1;}\r\n			else result=0;\r\n		}catch(SQLException e) {\r\n			e.printStackTrace();\r\n		}\r\n		return result;\r\n	}\r\n		public List SearchByUsername(String username);{\r\n			List student=new ArrayList();\r\n			try {\r\n				con=ConnectionManager.getConnction();\r\n				user=con.prepareStatement(\"SELECT id,username\"+\"age,loginname,password\"+\"FROM student where username like\'%\"+username+\"\'ORDER BY username\");\r\n				ResultSet results=user.executeQuery();\r\n				while(result.next()) {\r\n					Student student=new Student();\r\n					student.SetId(results.getInt(\"id\"));\r\n					student.SetLoginname(results.getString(\"loginname\"));\r\n					student.SetPassword(results.getString(\"password\"));\r\n					student.SetUsername(results.getString(\"username\"));\r\n					student.SetAge(results.getInt(\"age\"));\r\n				}\r\n			}catch(SQLException exception) {\r\n				exception.printStackTrace();\r\n			}\r\n			finally {\r\n				ConnectionManager.closeResultSet(results);\r\n				ConnectionManager.closeStatement(user);\r\n				ConnectionManager.closeConnection(con);\r\n			}\r\n			return student List;\r\n		}\r\n\r\n}\r\n',20,20,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5813,50,568,134,'import java.lang.Math;\r\nimport java.util.*;\r\n\r\nclass Triangle {\r\n		double a,b,c;\r\n		void triangle(double a,double b,double c){\r\n			this.a=a;this.b=b;this.c=c;	\r\n		}\r\n		double getArea(){\r\n			double p=(a+b+c)/2;\r\n			double area;\r\n			area=Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n			return area;\r\n		}\r\n\r\n}\r\npublic class ss{\r\n	public static void main(String[] args) {\r\n		try {\r\n			double x;\r\n			Triangle t=new Triangle();\r\n			System.out.println(\"请输入三角形三边a,b,c\");\r\n			Scanner in=new Scanner(System.in);\r\n			t.a=in.nextInt();\r\n			t.b=in.nextInt();\r\n			t.c=in.nextInt();\r\n			x=t.getArea();\r\n			List list=new ArrayList();\r\n			list.add(t.a);list.add(t.b);list.add(t.c);\r\n			if(list.size()<3) {\r\n				throw new IllegalArgumentException(\"数据个数不满足要求\");\r\n			}\r\n			if(t.a<=0||t.b<=0||t.c<=0) {\r\n				throw new IllegalArgumentException(\"三角形的边不能小于等于0\");\r\n			}\r\n			else if(t.a+t.b<=t.c||t.a+t.c<=t.b||t.b+t.c<=t.a)\r\n				throw new IllegalArgumentException(\"三边不能构成三角形\");\r\n			else\r\n				System.out.println(\"三角形面积为\"+x);		\r\n		}catch(IllegalArgumentException e) {\r\n			System.out.println(e.getMessage());\r\n		}\r\n	}\r\n}			   ',20,20,'					   ',0,'','',NULL),
 (5814,50,581,73,'A				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5815,50,581,74,'B			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5816,50,581,67,'D			   \r\nD					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5817,50,581,105,'D				   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5818,50,581,108,'B				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5819,50,581,121,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5820,50,581,137,'one two default					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5821,50,581,138,'Equal			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5822,50,581,55,'Not equal! 10			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5823,50,581,57,'17 9 17 9					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5824,50,581,135,'import java.io.*;\r\npublic class Test3 {\r\n public static void main(String[]args){\r\n	    int wordsNum=0;\r\n	    int lineNum=0;\r\n	 try{\r\n		 FileReader f1=new FileReader(\"D:/MyEclipse 6.5/workspace/project2/src/file1.txt\");\r\n		 BufferedReader buffile1=new BufferedReader(f1);\r\n		 while(buffile1.read()!= -1){\r\n			 String s = buffile1.readLine();\r\n			 wordsNum +=s.split(\" \").length;\r\n			 lineNum ++; 	 \r\n			 }\r\n		 System.out.println(\"单词数：\"+wordsNum+\" 行数：\"+lineNum);\r\n		 f1.close();\r\n	 }catch(IOException e){e.printStackTrace();}\r\n	 \r\n }\r\n}		   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5825,50,581,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic  class StudentDao {\r\n	private Connection con;\r\n	private PreparedStatement StudentQuery;\r\n	private ResultSet results;\r\n	public int searchByLoginnameAndPassword(String loginname,String password)\r\n	{\r\n		int  x=0;\r\n		try{\r\n			con=ConnectionManager.getConnection();\r\n			StudentQuery=con\r\n			    .prepareStatement(\"SELECT*from Student where loginname=? and password=?\");\r\n			StudentQuery.setString(1,loginname);\r\n			StudentQuery.setString(2,password);\r\n			ResultSet results=StudentQuery.executeQuery();		\r\n			if(results.next()){\r\n				x=1;\r\n			}\r\n		}catch(SQLException exception){\r\n			exception.printStackTrace();\r\n		}\r\n		finally{\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(StudentQuery);\r\n			ConnectionManager.closeConnection(con);\r\n		}\r\n		return x;	\r\n	}\r\n	public  List searchByUsername(String username)\r\n	{\r\n		List studentList=new ArrayList();\r\n		try{\r\n			con=ConnectionManager.getConnection();\r\n			StudentQuery=con.prepareStatement(\"SELECT*FROM Student where username like \'%\"+username+\"%\'\");\r\n		    ResultSet results=StudentQuery.executeQuery();\r\n		    while(results.next()){\r\n		    	Student s1=new Student();\r\n		    	s1.setid(results.getInt(1));\r\n		    	s1.setloginname(results.getString(2));\r\n		    	s1.setpassword(results.getString(3));\r\n		    	s1.setusername(results.getString(4));\r\n		    	s1.setage(results.getInt(5));\r\n		        studentList.add(s1);   	\r\n		    }\r\n		}catch(SQLException exception){\r\n			exception.printStackTrace();\r\n		}\r\n		finally{\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(StudentQuery);\r\n			ConnectionManager.closeConnection(con);\r\n		}\r\n		return studentList;\r\n	}\r\n\r\n}\r\n					   \r\n					   ',20,10,'					   ',94,'82,94','翁佳琦,华启磊',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5826,50,581,134,'			import java.util.*;\r\npublic class triangle {\r\n    public int a;\r\n    public int b;\r\n    public int c;\r\n    public void triangle(int a,int b,int c){	\r\n    	if((a+b)<=c||(a+c)<=b||(b+c)<=a)\r\n    		throw new IllegalArgumentException(\"不能组成三角形！\");\r\n    	this.a=a;this.b=b;this.c=c;\r\n    }\r\n    public static double getArea(int a,int b,int c){\r\n    	double p=(a+b+c)/2;\r\n    	return (double)Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n    } \r\n    public static void main(String[]args){\r\n    	triangle t1=new triangle();\r\n    	int a=0,b=0,c=0;\r\n    	double area;\r\n    	Scanner in=new Scanner(System.in);\r\n    	try{	\r\n    		System.out.println(\"请输入三角形的三边长:\");\r\n    		a=in.nextInt();\r\n    		b=in.nextInt();\r\n    		c=in.nextInt();\r\n    		   if(a*b*c==0)throw new Exception(\"数据个数不满足！\");\r\n    		   t1.triangle(a,b,c);		   \r\n    	}catch(InputMismatchException e1){System.out.println(\"数据类型不匹配！\");\r\n    	}catch(IllegalArgumentException e2){System.out.println(e2.getMessage());\r\n    	}catch(Exception e3){System.out.println(e3.getMessage());}\r\n    	area=getArea(a,b,c);\r\n    	System.out.println(\"面积为：\"+area);\r\n    }\r\n}		   \r\n					   ',20,10,'					   ',92,'92','华启磊',NULL),
 (5827,51,586,67,'D					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5828,51,586,68,'C					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5829,51,586,106,'A					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5830,51,586,107,'C					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5831,51,586,108,'B					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5832,51,586,121,'D				   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5833,51,586,63,'one					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5834,51,586,138,'Equal					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5835,51,586,55,'Not equal! 10					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5836,51,586,57,'17 9 17 9					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5837,51,586,135,'import java.io.*;\r\npublic class wyy11 {\r\n	public static void main(String[] args) {\r\n		int word=0;\r\n		int line=0;\r\n		try {\r\n			File f=new File(\"java1.txt\");//放在源程序目录下\r\n			BufferedReader br1=new BufferedReader(new FileReader(f));\r\n			while(br1.readLine()!=null) line++;\r\n			br1.close();\r\n			\r\n			BufferedReader br2=new BufferedReader(new FileReader(f));\r\n			int ch;\r\n			while((ch=br2.read())!=-1) {\r\n				if(ch==\' \')word++;\r\n			}\r\n			word+=line;//因为每行最后一个单词后面没有空格，所以加上行数\r\n			br2.close();\r\n			System.out.println(\"单词个数：\"+word+ \",行数 \"+line);\r\n		}catch(FileNotFoundException e) {\r\n			e.printStackTrace();\r\n		}catch(IOException e) {\r\n			e.printStackTrace();\r\n		}\r\n\r\n	}\r\n}\r\n					   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (5838,51,586,136,'import java.sql.*;\r\nimport java.util.*;\r\npublic class StudentDao {\r\n	private Connection connection;\r\n	private PreparedStatement stuQuery;\r\n	private ResultSet results;\r\n	public int searchByLoginnameAndPassword(String loginname,String password){\r\n		int flag=0;\r\n		 try {\r\n			 connection = ConnectionManger.getConnection();\r\n			 stuQuery=connection.prepareStatement(\"SELECT FROM students where loginname=? and password=?\");\r\n			 stuQuery.setString(1, loginname);\r\n			 stuQuery.setString(2, password);\r\n			 results=stuQuery.executeQuery();\r\n			 if(results.next()){\r\n				 flag=1;\r\n			 }\r\n		} catch (SQLException e) {\r\n			e.printStackTrace();\r\n		}finally{\r\n			ConnectionManger.closeResultSet(results);\r\n			ConnectionManger.closeStatement(stuQuery);\r\n			ConnectionManger.closeConnection(connection);\r\n		}\r\n		return flag;\r\n	}\r\n	\r\n	public Student searchByUsername(String username){\r\n		ArrayList<Student>stulist=new ArrayList<Student>();\r\n		connection = ConnectionManger.getConnection();\r\n		 try {\r\n			stuQuery=connection.prepareStatement(\"SELECT FROM students where username like \'%\"+username+\"%\'\");\r\n			 results=stuQuery.executeQuery();\r\n			 while(results.next()){\r\n				 Student stu=new Student();\r\n				 stu.setId(results.getInt(\"id\"));\r\n				 stu.setLoginname(results.getString(\"loginname\"));\r\n				 stu.setPassword(results.getString(\"password\"));\r\n				 stu.setUsername(results.getString(\"username\"));\r\n				 stu.setAge(results.getInt(\"age\"));\r\n				 stulist.add(stu);\r\n			 }\r\n		} catch (SQLException e) {\r\n			e.printStackTrace();\r\n		}finally{\r\n			ConnectionManger.closeResultSet(results);\r\n			ConnectionManger.closeStatement(stuQuery);\r\n			ConnectionManger.closeConnection(connection);\r\n		}\r\n		return stulist.get(0);\r\n	}\r\n}\r\n					   ',20,15,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5839,51,586,134,'import java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\npublic class wyy11 {\r\n	public static void triangle(int a,int b,int c) {\r\n		if ((a+b<=c)||(b+c<=a)||(a+c<=b))\r\n			throw new IllegalArgumentException();\r\n	}\r\n	public static double getArea(int a,int b,int c) {\r\n		double s =(a+b+c)/2.0;\r\n                double S = (double)Math.sqrt(s*(s-a)*(s-b)*(s-c));\r\n                 return S;\r\n	}\r\n	public static void main(String[] args) {\r\n		Scanner cin=new Scanner(System.in);\r\n		int[] t= new int[3];\r\n		try{\r\n			for(int i=0;i<3;i++){\r\n				t[i]=cin.nextInt();\r\n			}\r\n			triangle(t[0],t[1],t[2]);\r\n			System.out.println(\"三角形的面积为：\"+getArea(t[0],t[1],t[2]));\r\n		}catch (InputMismatchException e) {\r\n			System.out.println(\"异常：数据类型不匹配，请输入整数\");\r\n		}catch (ArrayIndexOutOfBoundsException e) {\r\n			System.out.println(\"异常：数据个数不满足要求，请输入3个整数\");\r\n		}catch (IllegalArgumentException e) {\r\n			System.out.println(\"异常：三条边的值不能构成三角形\");\r\n		}finally{\r\n			System.out.println(\"程序执行结束\");\r\n		}\r\n	}\r\n}\r\n					   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (5840,50,572,73,'		A			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5841,50,572,74,'		B			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5842,50,572,67,'			D		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5843,50,572,105,'			C		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5844,50,572,108,'			B		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5845,50,572,121,'			C		   ',4,0,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5846,50,572,137,'one\r\ntwo	   ',4,0,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5847,50,572,138,'Equal			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5848,50,572,55,'Not equal!10			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5849,50,572,57,'17\r\n9\r\n17\r\n9				   ',4,0,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5850,50,572,135,'\r\nimport java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\n\r\nclass InFile{\r\n	private int LineNum=0;\r\n	private int WordsNum=0;\r\n	private String src;\r\n	InFile() throws FileNotFoundException{\r\n		@SuppressWarnings(\"resource\")\r\n		Scanner input=new Scanner(System.in);\r\n		System.out.println(\"请输入文件位置\");\r\n		src=input.next();\r\n	}\r\n	public void statis() throws IOException {//统计文件行数，字数\r\n		String line;\r\n		@SuppressWarnings(\"resource\")\r\n		BufferedReader file=new BufferedReader(new FileReader(src));\r\n		while((line = file.readLine()) != null) {\r\n			WordsNum +=line.split(\" \").length;\r\n			LineNum++;\r\n		}\r\n		file.close();\r\n	}\r\n	public void display() {\r\n		System.out.println(\"这个txt文件中共有:\");\r\n		System.out.print(LineNum+\"行，\"+WordsNum+\"个字\");\r\n	}\r\n}\r\npublic class Iotest {\r\n	public static void main(String [] args) {\r\n	try {\r\n		InFile input=new InFile();\r\n		input.statis();\r\n		input.display();\r\n	}\r\n	catch(FileNotFoundException e) {\r\n		System.out.println(\"文件位置不当！\");\r\n    	e.printStackTrace();\r\n	}\r\n	catch(IOException e) {\r\n    	e.printStackTrace();\r\n	}\r\n	}				   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (5851,50,572,136,'studentTest.java\r\npackage test;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\nimport java.sql.ResultSetMetaData;\r\n\r\n\r\npublic class StudentTest{\r\n	\r\nprivate String name, sex;\r\nprivate int age;\r\nprivate String id;\r\nprivate String password;\r\n\r\npublic String getId() {\r\nreturn id;\r\n}\r\n\r\n\r\npublic void setId(String id) {\r\nthis.id = id;\r\n}\r\n\r\n\r\npublic String getName() {\r\nreturn name;\r\n}\r\n\r\n\r\npublic void setName(String name) {\r\nthis.name = name;\r\n}\r\n\r\n\r\npublic String getSex() {\r\nreturn sex;\r\n}\r\n\r\n\r\npublic void setSex(String sex) {\r\nthis.sex = sex;\r\n}\r\n\r\n\r\npublic String getpassword() {\r\nreturn password;\r\n}\r\n\r\npublic int getAge() {\r\nreturn age;\r\n}\r\n\r\n\r\npublic void setAge(int age) {\r\nthis.age = age;\r\n}\r\n\r\n\r\npublic void save(StudentTest student) throws ClassNotFoundException, SQLException {\r\n\r\n\r\n///Statement cp = student.getConn().createStatement();\r\nString sql1;\r\nsql1 = \"insert into student values(?,?,?,?,?)\";\r\nPreparedStatement ps = (PreparedStatement) student.getConn().prepareStatement(sql1);\r\nps.setString(1, id);\r\nps.setString(2, name);\r\nps.setString(3, sex);\r\nps.setInt(4, age);\r\nps.setString(5, password);\r\nps.executeUpdate();\r\nSystem.out.println(\"输入学生信息成功！\");\r\n\r\n\r\n}\r\n\r\n\r\npublic void delete(String name) throws ClassNotFoundException, SQLException {\r\nConnection connection = getConn();\r\nString sql2, sql;\r\n///Statement st = connection.createStatement();\r\nsql2 = \"delete from student where name = ? \";\r\nsql = \"select * from student where name = ?\";\r\nPreparedStatement ps = (PreparedStatement) connection.prepareStatement(sql2);\r\nps.setString(1, name);\r\nPreparedStatement pw = (PreparedStatement) connection.prepareStatement(sql);\r\npw.setString(1, name);\r\nif (pw.executeQuery().next()) {\r\n// pw.executeQuery().toString();\r\n\r\nps.executeUpdate();\r\nSystem.out.println(\"删除学生\"+name+\"成功\");\r\n}\r\nelse\r\n{\r\nSystem.out.println(\"你输入的学生姓名不存在\");\r\n}\r\n\r\n\r\n}\r\n\r\n\r\npublic void show(StudentTest student) throws ClassNotFoundException, SQLException {\r\n\r\n\r\nStatement cf = student.getConn().createStatement();\r\nResultSet rs = cf.executeQuery(\"select *from student\");\r\nResultSetMetaData data = rs.getMetaData();\r\nfor (int i = 1; i <= data.getColumnCount(); i++) {\r\nSystem.out.print(data.getColumnName(i) + \"\\t\");\r\n}\r\nSystem.out.println();\r\nwhile (rs.next()) {\r\nfor (int i = 1; i <= 5; i++) {\r\nSystem.out.print(rs.getString(i) + \"\\t\");\r\n}\r\nSystem.out.println();\r\n}\r\n\r\n\r\n}\r\n\r\n\r\npublic void export(String fileName) throws ClassNotFoundException, SQLException, IOException {\r\nConnection con = getConn();\r\nStatement cn = con.createStatement();\r\nResultSet cp = cn.executeQuery(\"select *from student\");\r\nFileWriter fw = new FileWriter(fileName);\r\nResultSetMetaData data = cp.getMetaData();\r\nfor (int i = 1; i <= data.getColumnCount(); i++) {\r\nfw.write(data.getColumnName(i) + \"\\t\");\r\n}\r\nwhile (cp.next()) {\r\n\r\n\r\nfw.write(\"\\r\\n\");\r\nfor (int i = 1; i <= 5; i++) {\r\n\r\n\r\nfw.write(cp.getString(i) + \"\\t\");\r\n}\r\n\r\n\r\n}\r\nfw.close();\r\n       System.out.println(\"文件导入成功\");\r\n}\r\n\r\n\r\npublic Connection getConn() throws ClassNotFoundException, SQLException {\r\nClass.forName(\"com.mysql.jdbc.Driver\");\r\n// 创建一个连接\r\n// DriverManaager为驱动程序\r\nConnection conn = DriverManager.getConnection(\"jdbc:mysql://localhost/student?useSSL=true\", \"root\", \"621366\");\r\n/// Statement st = conn.createStatement();\r\nreturn conn;\r\n\r\n\r\n}\r\n\r\n}\r\nMain.java\r\n\r\n\r\nimport java.io.IOException;\r\nimport java.sql.*;\r\nimport java.util.Scanner;\r\n\r\n\r\npublic class Main {\r\n\r\n\r\npublic static void main(String[] args) throws ClassNotFoundException, SQLException, IOException {\r\nStudentTest p = new StudentTest();\r\n        String name,sex,telephone,id;\r\n        int age;   \r\nShowMenu();\r\nScanner scan = new Scanner(System.in);\r\nint choice = scan.nextInt();\r\nwhile (choice!=5) {\r\nswitch (choice) {\r\ncase 1:\r\nScanner scan5 = new Scanner(System.in);\r\nSystem.out.println(\"请输入id\");\r\nid=  scan5.nextLine();\r\n                p.setId(id);\r\nScanner scan1 = new Scanner(System.in);\r\nSystem.out.println(\" (1)请输入姓名\");\r\nname = scan1.nextLine();\r\n             p.setName(name);\r\n\r\nScanner scan2 = new Scanner(System.in);\r\nSystem.out.println(\" (2)请输入性别\");\r\n        sex = scan2.nextLine();\r\n        p.setSex(sex);\r\n    \r\nScanner scan3 = new Scanner(System.in);\r\nSystem.out.println(\" (3)请输入年龄\");\r\nage=  scan3.nextInt();\r\np.setAge(age);\r\n    \r\nShowMenu();\r\nbreak;\r\ncase 2:\r\nSystem.out.println(\"请输入要删除的学生的姓名:\");\r\n   Scanner scan6 = new Scanner(System.in);\r\n   name = scan6.nextLine();\r\n    \r\n  p.delete(name);\r\n  \r\nShowMenu();\r\nbreak;\r\ncase 3:\r\np.show(p);\r\nShowMenu();\r\nbreak;\r\ncase 4:\r\n \r\np.export(\"d:\\\\data.txt\");\r\nShowMenu();\r\nbreak;\r\n default  :\r\n// System.out.println(\"再见！欢迎再次使用本系统。\");\r\nbreak;\r\n\r\n}\r\nchoice = scan.nextInt();\r\n}\r\n      if(choice==5)\r\n      {\r\n    System.out.println(\"再见！欢迎再次使用本系统。\");\r\n      }\r\n}\r\n\r\n\r\npublic static void ShowMenu() {\r\nSystem.out.println(\" **************************************\");\r\nSystem.out.println(\" * 欢迎使用学生信息管理系统V1.0   *\");\r\nSystem.out.println(\" *                                    *\");\r\nSystem.out.println(\" * 请选择你要执行的命令：                             *\");\r\nSystem.out.println(\" *                                    *\");\r\nSystem.out.println(\" * 1.输入学生信息  2.删除学生信息               *\");\r\nSystem.out.println(\" * 3.查询学生信息  4.导出学生信息               *\");\r\nSystem.out.println(\" * 5.退出系统                                                   *\");\r\nSystem.out.println(\" **************************************\");\r\nSystem.out.println(\" 请输入你的选择：                                              \");\r\n}\r\n\r\n\r\n}			   ',20,15,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5852,50,572,134,'import java.util.Scanner;\r\nimport java.util.InputMismatchException;\r\n\r\nclass triangle{//三角形类\r\n    private int a,b,c;\r\n    triangle()\r\n    {//构造方法\r\n        System.out.print(\"请输入三条边：\");\r\n        //从键盘输入三条int类型的边长\r\n		Scanner scan=new Scanner(System.in);\r\n        this.a=scan.nextInt();\r\n        this.b=scan.nextInt();\r\n        this.c=scan.nextInt();\r\n     }\r\n  \r\n    public float getArea()\r\n    {//计算三角形面积\r\n     float s =(float) ((a+b+c)/2f);\r\n     float Area = (float) Math.sqrt(s*(s-a)*(s-b)*(s-c));\r\n        return Area;\r\n    }\r\n    \r\n    public int oktriangle() \r\n    {//判断输入的三条边能否构成三角形\r\n        if((a+b<=c)||(a+c<=b)||(c+b<=a))\r\n        	throw new IllegalArgumentException();\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\npublic class GetArea {//检验类\r\n	public static void main(String [] args) {\r\n        try {\r\n        	triangle tri=new triangle();	\r\n        	if(tri.oktriangle()==1)\r\n        		System.out.println(\"三角形的面积是\"+tri.getArea()); 			\r\n       }\r\n       catch(IllegalArgumentException e){\r\n        	System.err.println(\"不能构成三角形\"); \r\n       }\r\n       catch(InputMismatchException e) {//当输入的边长不是int型时\r\n        	System.err.println(\"请输入整数作为三角形的边长！\");   \r\n        	e.printStackTrace();\r\n       }\r\n       catch (Exception e){   \r\n        	e.printStackTrace();  //打印异常函数\r\n       } \r\n    }\r\n}\r\n			   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (5853,50,577,73,'	A				   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5854,50,577,74,'		B			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5855,50,577,67,'			D		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5856,50,577,105,'		C			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5857,50,577,108,'		B			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5858,50,577,121,'		C			   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5859,50,577,137,'one\r\ntwo			   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5860,50,577,138,'		Equal			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5861,50,577,55,'			Not equal! 10			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5862,50,577,57,'17\r\n9\r\n17\r\n9				   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5863,50,577,135,'package test01;\r\nimport java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\n\r\npublic class FileRead {\r\n	\r\n		int WORD=0,LINE=0;\r\n		\r\n	void test(String where,int a,int b) throws FileNotFoundException{\r\n		BufferedReader OPEN = new BufferedReader(new FileReader(where));\r\n		try{    String line;\r\n	while ( (line = OPEN.readLine()) != null)\r\n	{\r\n		int c=line.split(\" \").length;\r\n		WORD +=c;\r\n		LINE ++;\r\n	}   \r\n	} \r\n	catch(IOException ioe)\r\n	{     System.out.println(\"出现问题-ioe-待解决\"); }\r\n		\r\n	}\r\n	\r\n	\r\n	public static void main(String[] args) throws Exception{\r\n		FileRead EX=new FileRead(); \r\n	    @SuppressWarnings(\"resource\")\r\n		Scanner getin=new Scanner(System.in);\r\n	    System.out.println(\"请在显示屏幕中写出你想要访问的文件名称 txt\"); \r\n	    String where=getin.next();\r\n	    EX.test(where,EX.WORD,EX.LINE);\r\n	    System.out.println(\"所访问文本的单词总数为:\"+EX.WORD+\"文本的行数为:\"+EX.LINE); \r\n    }\r\n}					   ',20,20,'					   ',0,'','',NULL),
 (5864,50,577,136,'		import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class TEST1{\r\nprivate PreparedStatement number;\r\nprivate Connection chatting;\r\npublic int searchByLoginnameAndPassword(String loginname,String password){\r\nint result=0;\r\ntry{\r\nchatting=CMM.getConnction();\r\nnumber=chatting.prepareStatement(\"SELECT*from userinfo where id=? and password=?\")\r\nnumber.setString(1,loginname);\r\nnumber.setString(2,password);\r\nResultSet results=number.executeQuery();\r\nif(results.next()){\r\nresult=1;\r\n         }\r\n}\r\ncatch(SQLException exception)\r\nsxception.printStackTrace();\r\n}\r\nfinally{\r\nCMM.closeResultSet(results);\r\nCMM.closeStatement(UQ);\r\nCMM.closeConnection(chattting);}\r\nreturn result;\r\n}\r\n\r\npublic List getByUser(String username){\r\nchatting=CMM.getConnection();\r\nList numberl=new ArrayList();\r\n\r\ntry{\r\nchatting=ConnnectionManager.getConnection();\r\nnumber=number.prepareStatement(\"SELECT*FROM userinfo where username like \'%\"+username+\"%\'\");\r\nResultSet results=number.executeQuery();\r\nif(results.next()){\r\nUserInfo userinfo=new UserInfo();\r\nuserinfo.setUserId(results.getInt(\"id\"));\r\nuserinfo.setLoginName(results.getString(\"loginname\"));\r\nuserinfo.setPassword(results.getString(\"password\"));\r\nuserinfo.setusername(results.getString(\"usernanme\"));\r\nuserinfo.add(userinfo);\r\n  }\r\n}\r\ncatch(SQLException e1){\r\ne1.printStackTrace();\r\n}\r\nfinally{\r\nConnectionManager.closeResultSet(results);\r\nConnectionManager.closeStatement(number);\r\nConnectionManager.closeConnection(chatting);\r\n    }\r\nreturn UserList;\r\n  }\r\n}\r\n\r\npublic static void main (String[] args){\r\nStudent stu1=new Student();\r\nList list=stu1.searchByLoginnameAndPassword(\"Web\");\r\nint n=list.size();\r\n\r\nSystem.out.println(\"测试searchByLoginnameAndPassword方法\");\r\nfor(int i=0;i<n;i++){\r\nstudent=(Student)list.get(i);\r\nSystem.out.println(student.getid()+\" \"+student.getloginname()+\" \"+student.getpassword()+\" \"+student.getusernanme()+\" \"+student.getage())\r\n}\r\nstudent=stu1.getloginname(\"珂爱小菠萝\");\r\nSystem.out.println(student.getStudent());\r\n\r\n}\r\n}			   ',20,5,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5865,50,577,134,'package test01;\r\nimport java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\nimport java.lang.Math;\r\n\r\npublic class Sanjiaoxing {\r\n    int length[]=new int[3];\r\n    void triangle(){\r\n        System.out.println(\"请用户在显示屏上填写三角形三条边的长度\");\r\n        @SuppressWarnings(\"resource\")\r\n		Scanner in =new Scanner(System.in);\r\n        this.length[0]=in.nextInt();\r\n        this.length[1]=in.nextInt();\r\n        this.length[2]=in.nextInt();\r\n    }\r\n\r\n    void getArea(int a,int b,int c){\r\n        double p=(a+b+c)/2.0;\r\n        double Area=Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n        System.out.println(Area);\r\n    }\r\n\r\n    public static void main(String[] args){\r\n            Sanjiaoxing san=new Sanjiaoxing() ;\r\n            san.triangle() ;\r\n            try{\r\n                if(san.length[0]+san.length[1]<=san.length[2]||san.length[0]+san.length[2]<=san.length[1]||\r\n                        san.length[1]+san.length[2]<=san.length[0])\r\n                    throw new IllegalArgumentException();\r\n            }catch(InputMismatchException e1){\r\n                System.out.println(\"输入的数据不是整型数据\");\r\n            }catch (IllegalArgumentException e2){\r\n                System.out.println(\"不满足两边之和大于第三边\");\r\n            }catch (Exception e3){\r\n                System.out.println(\"其他异常\");\r\n            }finally {\r\n                System.out.println(\"程序运行成功\");\r\n            }\r\n            san.getArea(san.length[0],san.length[1],san.length[2]);\r\n\r\n    }\r\n}					   ',20,20,'					   ',0,'','',NULL),
 (5866,51,589,67,'                 D \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5867,51,589,68,'		C			   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5868,51,589,106,'			A		   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5869,51,589,107,'		C			   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5870,51,589,108,'		B			   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5871,51,589,121,'	D				   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5872,51,589,63,'			one		   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5873,51,589,138,'			Equal		   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5874,51,589,55,'			Not equal!10		   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5875,51,589,57,'		17 9 17 9			   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5876,51,589,135,'				import java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\npublic class test {\r\n	public static void main(String[] args) {\r\n		BufferedReader b = null;\r\n		int line = 0;\r\n		String str = \" \";\r\n		StringBuffer sb  = new StringBuffer();\r\n		try {\r\n			b = new BufferedReader(new FileReader(\"c:\\\\wenjian.txt\"));\r\n			while ((str = b.readLine()) != null) {\r\n				sb.append(str);\r\n				++line;\r\n			}\r\n			System.out.println(\"\\n文件行数: \" + line);\r\n			System.out.println(\"\\n文件内容: \" + sb.toString());\r\n		} catch (FileNotFoundException e) {\r\n			e.printStackTrace();\r\n		} catch (IOException e) {\r\n			e.printStackTrace();\r\n		} finally {\r\n			if (b != null) {\r\n				try {\r\n					b.close();\r\n				} catch (IOException e) {\r\n					e.printStackTrace();\r\n				}\r\n			}\r\n		}\r\n	}\r\n}	   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5877,51,589,136,'			import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.*;\r\npublic class Student {\r\n    private int id;\r\n    private String loginname;\r\n    private String password;\r\n    private String username;\r\n    private int age; \r\n    }\r\npublic interface StudentDao{\r\n	public List getById(String id);\r\n	public List getByLoginname(String loginname);\r\n}\r\npublic class StudentDaoImpl implements StudentDao{\r\n	private Connection connection;\r\n	private PreparedStatement loginnamesQuery;\r\n	private ResultSet results;\r\n	public  List getByLoginname(String loginname){\r\n		List StudentList=new ArrayList();\r\n		try{\r\n			connection=ConnectionStudent.getConnection();\r\n			loginnamesQuery=connection\r\n			.preparedStatement(\"id,loginname,password,username,age\");\r\n			ResuleSet results=loginnamesQuery();\r\n			while(results.next()){\r\n				Student student=new Student();\r\n				student.setId(results.getInt(\"id\"));\r\n				student.setLoginname(results.getString(\"loginname\"));\r\n				student.setPassword(results.getString(\"password\"));\r\n				student.setUsername(results.getString(\"username\"));\r\n				student.setAge(results.getInt(\"age\"));\r\n				LoginnamesList.add(student);\r\n			}\r\n		}\r\n	catch (SQLException exception){\r\n		exception.printStackTrace();\r\n		}\r\n	finally{\r\n		ConnectionStudent.closeResultSet(results);\r\n		ConnectionStudent.closeStatement(loginnamesQuery);\r\n		ConnectionStudent.closeConnection(connection);\r\n		}\r\n	return StudentList;\r\n	}\r\n	public  Loginnames getById(String id){\r\n		connection=ConnectionStudent.getConnection();\r\n		Loginnames student=null;\r\n		try{\r\n			LoginnamesQuery=connection\r\n			.preparedStatement(\"id,loginname,password,username,age\");\r\n			ResultSet results=loginnamesQuery.executeQuery();\r\n			if(results.next()){\r\n				student=new Student();\r\n				student.setId(results.getInt(\"id\"));\r\n				student.setLoginname(results.getString(\"loginname\"));\r\n				student.setPassword(results.getString(\"password\"));\r\n				student.setUsername(results.getString(\"username\"));\r\n				student.setAge(results.getInt(\"age\"));\r\n		}\r\n	}catch (SQLException e){\r\n		//TODO Auto-generated catch block\r\n		e.printStackTrace();\r\n		}\r\n	return student;\r\n	}\r\n}		   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',20,15,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5878,51,589,134,'import java.util.IllegalArgumentException;\r\nimport java.util.Scanner;\r\npublic class yichang {\r\npublic static void main (String[] args) {\r\n	int a,b,c;\r\n	Scanner in=new Scanner(System.in);\r\n	try {\r\n		System.out.println(\"请输入第一条边：\");\r\n		a=in.nextInt();\r\n		System.out.println(\"请输入第二条边：\");\r\n		b=in.nextInt();\r\n		System.out.println(\"请输入第三条边：\");\r\n		c=in.nextInt();\r\n	} catch (IllegalArgumentException e) {\r\n		System.out.println(\"异常：\"+e.getMessage());\r\n		e.printStackTrace();\r\n	}catch (Exception e) {\r\n		e.printStackTrace();\r\n	}finally {\r\n		Scanner input;\r\n		input.close();\r\n	}\r\n	}\r\n	public static void triangle(int a,int b,int c)throws Exception{\r\n		if((a+b>c)&&(a-b<c))\r\n			System.out.println(\"三条边可以构成三角形\");\r\n		else\r\n			throw new IllegalArgumentException(\"三条边不能构成三角形\");\r\n	}\r\n}				   \r\n					   \r\n					   \r\n					   \r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5879,51,587,67,'D',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5880,51,587,68,'C',4,4,'					   ',0,NULL,NULL,NULL),
 (5881,51,587,106,'A   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5882,51,587,107,'C	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5883,51,587,108,'B',4,4,'					   ',0,NULL,NULL,NULL),
 (5884,51,587,121,'C		   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5885,51,587,63,'one				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5886,51,587,138,'Equal',4,4,'					   ',0,NULL,NULL,NULL),
 (5887,51,587,55,'Not equal! 10',4,4,'					   ',0,NULL,NULL,NULL),
 (5888,51,587,57,'17\r\n9\r\n17\r\n9',4,0,'					   ',0,NULL,NULL,NULL),
 (5889,51,587,135,'import java.io.*;\r\npublic class FileNumberTest {\r\n	public static void main(String[]args){\r\n		try{\r\n			File file=new File(\"File.txt\");\r\n			if(file.exists())\r\n			{\r\n				FileReader fileread1=new FileReader(file);\r\n				FileReader fileread2=new FileReader(file);\r\n				BufferedReader bufferedreader1=new BufferedReader(fileread1);\r\n				BufferedReader bufferedreader2=new BufferedReader(fileread2);\r\n				int number=0;\r\n				while(bufferedreader1.read()!=-1)\r\n				{   \r\n					number++;\r\n					}\r\n				System.out.println(\"文件的字数为\"+number);\r\n				int linenumber=0;\r\n				while(bufferedreader2.readLine()!=null)\r\n				{\r\n					linenumber++;\r\n				}\r\n				System.out.println(\"文件的总行数为\"+linenumber);\r\n				bufferedreader1.close();\r\n				bufferedreader2.close();\r\n				}\r\n			else System.out.println(\"文件不存在!\");\r\n		}\r\n		catch(IOException e){\r\n			e.printStackTrace();\r\n		}\r\n		}\r\n}\r\n   ',20,20,'					   ',0,'','',NULL),
 (5890,51,587,136,'public class Student {\r\n	private int id;\r\n	private String loginname;\r\n	private String password;\r\n	private String username;\r\n	private int age;\r\n	public int getId() {\r\n		return id;\r\n	}\r\n	public void setId(int id) {\r\n		this.id = id;\r\n	}\r\n	public String getLoginname() {\r\n		return loginname;\r\n	}\r\n	public void setLoginname(String loginname) {\r\n		this.loginname = loginname;\r\n	}\r\n	public String getPassword() {\r\n		return password;\r\n	}\r\n	public void setPassword(String password) {\r\n		this.password = password;\r\n	}\r\n	public String getUsername() {\r\n		return username;\r\n	}\r\n	public void setUsername(String username) {\r\n		this.username = username;\r\n	}\r\n	public int getAge() {\r\n		return age;\r\n	}\r\n	public void setAge(int age) {\r\n		this.age = age;\r\n	}\r\n}\r\n\r\nimport java.sql.*;\r\npublic class ConnectionManager {\r\n	private static final String DRIVER_CLASS=\"com.mysql.jdbc.Driver\";\r\n	private static final String DATABASE_URL=\"jdbc:mysql://localhost:3306/Student?\";\r\n	private static final String DATABASE_USER=\"ROOT\";\r\n	private static final String DATABASE_PASSWORD=\"001029\";\r\n	public static Connection getConnection(){\r\n		Connection dbConnection=null;\r\n		try{\r\n			Class.forName(DRIVER_CLASS);\r\n			dbConnection=DriverManager.getConnection(DATABASE_URL,DATABASE_USER,DATABASE_PASSWORD);\r\n		}\r\n		catch(Exception e){\r\n			e.printStackTrace();\r\n		}\r\n		return dbConnection;\r\n	}\r\n	public static void ConnectionClose(Connection connection){\r\n		try {\r\n			if(connection!= null)\r\n				connection.close();\r\n	}\r\n		catch (Exception e) {\r\n			e.printStackTrace();\r\n		}\r\n	}\r\n	public static void PreparedStatementClose(PreparedStatement preparedStatement){	\r\n		try {\r\n			if (preparedStatement != null)\r\n				preparedStatement.close();\r\n		}\r\n		catch (Exception e) {\r\n			e.printStackTrace();\r\n		}\r\n	}\r\n	public static void ResultSetClose(ResultSet resultSet){	\r\n		try {\r\n			if (resultSet != null)\r\n				resultSet.close();\r\n		}  \r\n		catch (Exception e) {\r\n			e.printStackTrace();\r\n		}\r\n	}\r\n}\r\n\r\nimport java.sql.*;\r\nimport java.util.*;\r\npublic class StudentDao {\r\n	private Connection connection;\r\n	private PreparedStatement StudentQuery;\r\n	private ResultSet results;\r\n	public int searchByLoginnameAndPassword(String loginname,String password){\r\n		try{\r\n			connection=ConnectionManager.getConnection();\r\n			StudentQuery=connection.prepareStatement(\"SELECT *FROM Student where loginname=\'\"+loginname+\"\'and password=\'\"+password+\"\'\");\r\n			ResultSet results=StudentQuery.executeQuery();\r\n			if(results.next()){\r\n				return 1;\r\n			}\r\n			else return 0;\r\n		}\r\n		catch(SQLException e){\r\n			e.printStackTrace();\r\n		}\r\n		finally{\r\n			ConnectionManager.ResultSetClose(results);\r\n			ConnectionManager.PreparedStatementClose(StudentQuery);\r\n			ConnectionManager.ConnectionClose(connection);}\r\n		return 0;\r\n	}\r\n\r\n	public List searchByUsername(String username){\r\n		List studentList=new ArrayList();\r\n		try{\r\n			connection=ConnectionManager.getConnection();\r\n			StudentQuery=connection.prepareStatement(\"SELECT * FROM Student where username like \'%\"+username+\"%\' ORDER BY username\");\r\n			ResultSet results=StudentQuery.executeQuery();\r\n			while(results.next()){\r\n			Student student=new Student();\r\n			student.setId(results.getInt(\"id\"));\r\n			student.setLoginname(results.getString(\"loginname\"));\r\n			student.setPassword(results.getString(\"password\"));\r\n			student.setUsername(results.getString(\"username\"));\r\n			student.setAge(results.getInt(\"age\"));\r\n			studentList.add(student);\r\n		}\r\n	}\r\n	catch(SQLException e){\r\n		e.printStackTrace();\r\n	}\r\n	finally{\r\n		ConnectionManager.ResultSetClose(results);\r\n		ConnectionManager.PreparedStatementClose(StudentQuery);\r\n		ConnectionManager.ConnectionClose(connection);}\r\n	return studentList;\r\n	}\r\n}\r\n\r\nimport java.util.*;\r\npublic class StudentTest {\r\n	public static void main(String[]args){\r\n		StudentDao studentdao=new StudentDao();\r\n		List studentlist=studentdao.searchByUsername(\"zhangsan\");\r\n		int student=studentdao.searchByLoginnameAndPassword(\"lisi\",\"123456\");\r\n	}\r\n}\r\n',20,20,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5891,51,587,134,'package triangle;\r\nimport java.util.*;\r\npublic class Triangle {\r\n	 int a;int b;int c;\r\n	 void triangle(int a,int b,int c){\r\n		 this.a=a;\r\n		 this.b=b;\r\n		 this.c=c;	 \r\n	 }\r\n public static void main(String[]args){\r\n	 int []A=new int [3];\r\n	 try{\r\n	     Scanner in=new Scanner(System.in);\r\n	     System.out.println(\"请输入三角形的三条边：\");\r\n			 {for(int i=0;i<3;i++)\r\n				 A[i]=in.nextInt();\r\n			 }\r\n		 Triangle tri=new Triangle();\r\n		 tri.triangle(A[0],A[1],A[2]);\r\n	 }\r\n	 catch(ArrayIndexOutOfBoundsException e1)\r\n	 {System.out.println(\"输入的数据个数有误\");}\r\n	 catch(Exception e4)\r\n	 {System.out.println(e4.getMessage());}\r\n	 \r\n	 }\r\n}\r\n\r\n\r\n\r\n   ',20,10,'					   ',0,'','',NULL),
 (5892,50,557,73,'	A				   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5893,50,557,74,'					   B',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5894,50,557,67,'			D		   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5895,50,557,105,'		C			   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5896,50,557,108,'			B		   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5897,50,557,121,'		D		   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5898,50,557,137,'			one two default		   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5899,50,557,138,'			Equal		   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5900,50,557,55,'		Not equal!10			   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5901,50,557,57,'	17 9 17 9				   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5902,50,557,135,'					   package homework.ch06;\r\n\r\n\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\n\r\npublic class BufferReaderTest {\r\n    public static void main(String[] args) throws IOException {\r\n        FileReader f;\r\n        BufferedReader reader = null;\r\n        int worldcount,linecount,result;\r\n        worldcount=0;\r\n        linecount=0;\r\n        result=0;\r\n        String line;\r\n\r\n        try {\r\n             f = new FileReader(\"E:\\\\1.txt\");\r\n             reader = new BufferedReader(f);\r\n\r\n            if (!reader.ready()) {\r\n                System.out.println(\"无法读取文件\");\r\n\r\n            }\r\n\r\n\r\n\r\n           while ((result=reader.read()) != -1) {\r\n               if((char)result!=\' \'){\r\n\r\n\r\n                worldcount++;\r\n\r\n            }\r\n           }\r\n\r\n            reader.close();//关闭后重新读取\r\n\r\n            f = new FileReader(\"E:\\\\1.txt\");\r\n            reader = new BufferedReader(f);\r\n            while ((line=reader.readLine())!=null){\r\n                System.out.print(line);\r\n                linecount++;\r\n            }\r\n            reader.close();\r\n\r\n            System.out.println(\"单词个数\"+worldcount);\r\n            System.out.println(\"行数\"+linecount);\r\n\r\n\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n',20,18,'					   \r\n					   \r\n					   ',0,'','',NULL),
 (5903,50,557,136,'			package ntu;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.SQLException;\r\n\r\nimport com.mysql.jdbc.ResultSet;\r\nimport com.mysql.jdbc.Statement;\r\n\r\npublic class ConnectionManger {\r\n   private static final String DRIVER_CLASS=\"com.mysql.jdbc.Driver\";\r\n   private static final String DATABASE_URL=\"jdbc:mysql://localhost:3306/student?useUnicode=true&characterEncoding=utf8\";\r\n   private static final String DATABASE_USER=\"root\";\r\n   private static final String DATABASE_PASSWORD=\"123\";\r\n   \r\n   public static Connection getConnection(){\r\n	   Connection dbConnection=null;\r\n	   try {\r\n		Class.forName(DRIVER_CLASS);\r\n		dbConnection=DriverManager.getConnection(DATABASE_URL,DATABASE_USER,DATABASE_PASSWORD);\r\n		\r\n	} catch (Exception e) {\r\n		// TODO Auto-generated catch block\r\n		e.printStackTrace();\r\n	}\r\n	   return dbConnection;\r\n	   \r\n   }\r\n   \r\n   public static void closeResultSet(ResultSet resultset)\r\n   {\r\n	   try {\r\n		resultset.close();\r\n	} catch (SQLException e) {\r\n		// TODO Auto-generated catch block\r\n		e.printStackTrace();\r\n	}\r\n   }\r\n   \r\n   public static void closeStatement(Statement statement)\r\n   {\r\n	   try {\r\n		statement.close();\r\n	} catch (SQLException e) {\r\n		// TODO Auto-generated catch block\r\n		e.printStackTrace();\r\n	}\r\n   }\r\n   \r\n   public static void closeConnection(Connection con)\r\n   {\r\n	   try {\r\n		con.close();\r\n	} catch (SQLException e) {\r\n		// TODO Auto-generated catch block\r\n		e.printStackTrace();\r\n	}\r\n   }\r\n   \r\n}\r\n\r\npackage ntu;\r\n\r\npublic class Student {\r\n	private int id;\r\n\r\n	private String loginname;//登录名\r\n\r\n	private String password;//密码\r\n\r\n	private String username;//学生姓名\r\n\r\n	private int age;  //年龄\r\n\r\n	public int getId() {\r\n		return id;\r\n	}\r\n\r\n	public void setId(int id) {\r\n		this.id = id;\r\n	}\r\n\r\n	public String getLoginname() {\r\n		return loginname;\r\n	}\r\n\r\n	public void setLoginname(String loginname) {\r\n		this.loginname = loginname;\r\n	}\r\n\r\n	public String getPassword() {\r\n		return password;\r\n	}\r\n\r\n	public void setPassword(String password) {\r\n		this.password = password;\r\n	}\r\n\r\n	public String getUsername() {\r\n		return username;\r\n	}\r\n\r\n	public void setUsername(String username) {\r\n		this.username = username;\r\n	}\r\n\r\n	public int getAge() {\r\n		return age;\r\n	}\r\n\r\n	public void setAge(int age) {\r\n		this.age = age;\r\n	}\r\n    \r\n}\r\n\r\npackage ntu;\r\n\r\nimport java.awt.List;\r\nimport java.sql.Connection;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\n\r\nimport com.mysql.jdbc.PreparedStatement;\r\nimport com.mysql.jdbc.ResultSet;\r\nimport com.mysql.jdbc.Statement;\r\n\r\npublic class StudentDao {\r\n	private Connection connection;\r\n	private PreparedStatement studentQuery;\r\n	private ResultSet results;\r\n	public int searchByLoginnameAndPassword(String loginname,String password){\r\n		\r\n		 try {\r\n			 connection = ConnectionManger.getConnection();\r\n			 String sql=\"select * from studentinformation where loginname=? and password=?\";\r\n			 studentQuery=(PreparedStatement) connection.prepareStatement(sql);\r\n			 studentQuery.setString(1, loginname);\r\n			 studentQuery.setString(2, password);\r\n			 results=(ResultSet) studentQuery.executeQuery();\r\n			 if(results.next()){\r\n				 return 1;\r\n			 }else{\r\n				 return 2;\r\n			 }\r\n		} catch (SQLException e) {\r\n			// TODO Auto-generated catch block\r\n			e.printStackTrace();\r\n		}finally{\r\n			ConnectionManger.closeResultSet(results);\r\n			ConnectionManger.closeStatement(studentQuery);\r\n			ConnectionManger.closeConnection(connection);\r\n		}\r\n		return 0;\r\n	}\r\n	\r\n	public  ArrayList<Student> searchByUsername(String username){\r\n		ArrayList<Student> list=new ArrayList<Student>();\r\n		\r\n		 try {\r\n			 connection = ConnectionManger.getConnection();\r\n			 String sql=\"select * from studentinformation where username like \'%\"+username+\"%\'\";\r\n			studentQuery=(PreparedStatement) connection.prepareStatement(sql);\r\n			\r\n			 results=(ResultSet) studentQuery.executeQuery();\r\n			 while(results.next()){\r\n				 Student stu=new Student();\r\n				 stu.setId(results.getInt(\"id\"));\r\n				 stu.setLoginname(results.getString(\"loginname\"));\r\n				 stu.setPassword(results.getString(\"password\"));\r\n				 stu.setUsername(results.getString(\"username\"));\r\n				 stu.setAge(results.getInt(\"age\"));\r\n				 list.add(stu);\r\n			 }\r\n		} catch (SQLException e) {\r\n			// TODO Auto-generated catch block\r\n			e.printStackTrace();\r\n		}finally{\r\n			ConnectionManger.closeResultSet(results);\r\n			ConnectionManger.closeStatement(studentQuery);\r\n			ConnectionManger.closeConnection(connection);\r\n		}\r\n		 \r\n		return list;\r\n	}\r\n}\r\n\r\npackage ntu;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\n\r\npublic class StudentTest {\r\n	public static void showmenu()\r\n	{\r\n		System.out.println(\"1.按loginname和passWord查询\");\r\n		System.out.println(\"2.按username查询\");\r\n		System.out.println(\"3.退出\");\r\n	}\r\npublic static void main(String[] args) {\r\n	StudentDao dao=new StudentDao();\r\n	int a;\r\n	String login=null;\r\n	String passworld=null;\r\n	String username=null;\r\n	Scanner in=new Scanner(System.in);\r\n	\r\n	while(true){\r\n		showmenu();\r\n		a=in.nextInt();\r\n		if(a==3) \r\n			break;\r\n		switch(a){\r\n		case 1:\r\n			System.out.println(\"输入login 和 password\");\r\n		    login=in.next();\r\n		    passworld=in.next();\r\n		    System.out.println(dao.searchByLoginnameAndPassword(login, passworld));\r\n		    break;\r\n		case 2:\r\n			System.out.println(\"请输入模糊username\");\r\n			username=in.next();\r\n			ArrayList<Student> studentlist=new ArrayList<Student>();\r\n			studentlist=dao.searchByUsername(username);\r\n			\r\n			for(Student stu:studentlist)\r\n			{\r\n				\r\n				System.out.println(stu.getLoginname()+\" \"\r\n				+stu.getId()+\" \"+stu.getAge()+\" \"+\r\n						stu.getPassword()+\" \"+stu.getUsername());\r\n			}\r\n		}\r\n		\r\n		\r\n		\r\n	}\r\n	\r\n	\r\n	\r\n}\r\n}\r\n		   ',20,18,'					   \r\n					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5904,50,557,134,'			package homework.ch06;\r\n\r\npublic class IllegalArgumentException extends Exception {\r\n    private String myString;\r\n    public IllegalArgumentException(String myString){\r\n        this.myString=myString;\r\n    }\r\n    public String getMyString(){\r\n        return myString;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return myString;\r\n    }\r\n}\r\n\r\n\r\npackage homework.ch06;\r\n\r\npublic class NumberException extends Exception {\r\n    private String myString;\r\n    public NumberException(String myString){\r\n        this.myString=myString;\r\n    }\r\n    public String getMyString(){\r\n        return myString;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return myString;\r\n    }\r\n}\r\n\r\n\r\npackage homework.ch06;\r\n\r\nimport java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\n\r\n\r\n\r\npublic class TriangelTest {\r\n     static   void triangle(int a,int b,int c){\r\n        try {\r\n            if ((a+b)<=c || (a+c)<=b || (b+c)<=a){\r\n\r\n                throw new IllegalArgumentException(\"不能构成三角形\");\r\n\r\n            }\r\n            if (a==0 || b==0|| c==0){\r\n                throw new NumberException(\"边数错误\");\r\n            }\r\n        }catch (NumberException e){\r\n            System.out.println(e);\r\n        } catch (IllegalArgumentException e) {\r\n            System.out.println(e);\r\n        }\r\n\r\n     }\r\n\r\n    public static void main(String[] args) {\r\n         int[] a=new int[3];\r\n        Scanner in=new Scanner(System.in);\r\n        System.out.println(\"请输入三条边的值\");\r\n        try {\r\n            a[0]=in.nextInt();\r\n            a[1]=in.nextInt();\r\n            a[2]=in.nextInt();\r\n            triangle(a[0],a[1],a[2]);\r\n\r\n        }catch (InputMismatchException e){\r\n            System.out.println(\"输入的不是数字\");\r\n        }finally {\r\n            System.out.println(\"结束\");\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n		   ',20,18,'					   \r\n					   \r\n					   ',0,'','',NULL),
 (5905,50,559,73,'	A				   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5906,50,559,74,'		B			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5907,50,559,67,'			D		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5908,50,559,105,'		C			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5909,50,559,108,'			B		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5910,50,559,121,'			A B D		   ',4,0,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5911,50,559,137,'			one		   ',4,0,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5912,50,559,138,'			Equal		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5913,50,559,55,'			Not equal!10		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5914,50,559,57,'	17 9 17 9				   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5915,50,559,135,'		\r\nimport java.io.*;\r\n\r\npublic class wordcount{\r\n	public static void main(String[]args){ \r\ntry{\r\nFile  file = new  File(\"C:\\\\Download\\\\work-4\\\\src\\\\java.txt\");\r\n\r\nif(file.exists()) {\r\n	int num=0;\r\n	int hang=0;\r\nFileReader f = new FileReader(file);\r\nBufferedReader fr=new BufferedReader(f);		\r\nString  len = fr.readLine();\r\n\r\nif(len!= null)\r\n{\r\n	hang++;\r\n	 char [] character = len.toCharArray();\r\n     for(int i = 0 ; i < character.length ; i++){\r\n         if(character[i]==\' \') {\r\n             num++;}\r\n     }\r\n     len = fr.readLine();\r\n  }\r\n    	System.out.print (\"单词数目:\"+num);\r\n	    System.out. print (\"行数:\"+hang);\r\n	 fr.close();\r\n     f.close();\r\n} else{\r\n    System.out.println(\"文件不能存在！\");\r\n}\r\n} catch(FileNotFoundException e){e.printStackTrace();\r\n}catch (IOException e){e.printStackTrace();\r\n}\r\n	}\r\n}			   ',20,18,'					   \r\n					   ',0,'','',NULL),
 (5916,50,559,136,'				\r\nimport java.sql.*;\r\nimport java.util.*;\r\n\r\npublic class StudentDao{\r\nprivate Connection connection;\r\nprivate PreparedStatement UserQuery;\r\nprivate ResultSet results;\r\n//实体类Student\r\npublic class Student {            \r\n	private int id;//\r\n	private String loginname;//登录名\r\n	private String password;//密码\r\n	private String username;//学生姓名\r\n	private int age;  //年龄\r\n   }\r\n//根据登录名和密码查询用户信息\r\npublic int searchByLoginnameAndPassword(String loginname,String password){\r\n     int result=0;\r\ntry{\r\n    connection=ConnectionManager.getConnction();\r\n    UserQuery=connection.\r\n    prepareStatement(\"SELECT * from student where loginname＝？\"\r\n    	+ \" and password＝？\");\r\n    UserQuery. setString(1,loginname);\r\n    UserQuery. setString(2,password);\r\n    ResultSet results=UserQuery. executeQuery();\r\nif(results.next()){\r\n   result=1;\r\n   }\r\n    }catch(SQLException exception){exception.\r\n    	printStackTrace();}//处理数据库异常\r\n\r\nfinally{//释放资源\r\n    ConnectionManager. closeResultset(results);\r\n    ConnectionManager. closeStatement(UserQuery);\r\n    ConnectionManager. closeConnection(connection);\r\n       }return result;\r\n   }\r\n\r\n//根据用户名进行模糊查询\r\npublic  List searchByUsername(String username){\r\n        List StudentList=new ArrayList();\r\ntry{\r\n    connection=ConnectionManager. getConnction();\r\n    UserQuery=connection.prepareStatement(\"SELECT*FROM student where\"\r\n    		+ \" username like \'%\"+username+\"%\'\");\r\n    ResultSet results=UserQuery.executeQuery();\r\n//读取行数据\r\nwhile(results.next()){\r\n    Student  student=new Student();\r\n//将数据表中的一条记录数据添加到封装类中\r\n    student. setId(results. getInt(\"id\"));\r\n    student. setLoginName (results. getString(\"loginName\"));\r\n    student. setPassword (results. getString(\"password\"));\r\n    student. setUsername(results. getString(\"username\"));\r\n    student. setAge (results. getInt(\"age\"));\r\n    StudentList.add(student);\r\n  }\r\n}catch (SQLException exception){exception. printStackTrace();\r\n}//处理数据库异常\r\n\r\nfinally{//释放资源\r\n    ConnectionManager. closeResultSe (results);\r\n    ConnectionManager. closeStatement(UserQuery);\r\n    ConnectionManager. closeConnection(connection);\r\n    }\r\nreturn StudentList;\r\n    }\r\n}\r\n	   ',20,18,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5917,50,559,134,'			import java.util.*;\r\npublic class triangle {\r\n  static  Scanner input = new Scanner(System.in);\r\n  public int a;\r\n  public int b;\r\n  public int c;\r\n void triangle(int a,int b,int c){\r\n  this.a=a;\r\n  this.b=b;\r\n  this.c=c;}\r\n \r\n      static  void getArea(int [] a){\r\n        double  p=(a[0]+a[1]+a[2])/2 ;\r\n        double area = (double)Math.sqrt(p*(p-a[0] )*p*(p-a[1])*(p-a[2]));\r\n          System.out.println(\"三角形的面积是：\" + area);\r\n      }\r\n      \r\n      static void  inputs(int z[],int n){ //输入三角形的三条边\r\n    		 System.out.println(\"请输入三条边a，b，c:\");\r\n    		 Scanner input=new Scanner(System.in);\r\n    		 for(int i=0;i<n;i++)\r\n    		 {  z[i]=input.nextInt(); \r\n    		 }\r\n    	 }\r\n      \r\n      static void triangele(int [] a)\r\n      {\r\n          if(a.length != 3)\r\n              throw  new   IllegalArgumentException(\"任意两边之和不大于第三边\");\r\n      }\r\n\r\n    public static void  main(String [] args){\r\n             System.out.println(\"请输入边数！\");\r\n             int ArcNum = input.nextInt();\r\n                 int [] a = new int[ArcNum];\r\n                 try {\r\n                	 triangele(a);\r\n                	 \r\n                	 inputs(a,a.length);\r\n                     \r\n                     if((a[0]+a[1]) <= a[2] || (a[0]+a[2]) <= a[1] || (a[1]+a[2]) <= a[0])\r\n                         throw new IllegalArgumentException(\"任意两边之和不大于第三边\");\r\n                     else\r\n                    \r\n                     getArea(a);\r\n                 }\r\n                 catch(InputMismatchException e1){\r\n                     System.out.println(\"输入的不是整数，数据类型不匹配！\");\r\n               }\r\n                 catch(IllegalArgumentException e2){\r\n                     System.out.println(e2);\r\n                 }\r\n\r\n                 finally{\r\n                     System.out.println(\"程序执行完成！\");\r\n                     }\r\n    }\r\n}\r\n\r\n 		   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (5918,50,576,73,'A					   \r\n					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5919,50,576,74,'B					   \r\n					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5920,50,576,67,'D					   \r\n					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5921,50,576,105,'C					   \r\n					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5922,50,576,108,'B					   \r\n					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5923,50,576,121,'D		   \r\n					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5924,50,576,137,'one two default			   \r\n					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5925,50,576,138,'Equal					   \r\n					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5926,50,576,55,'Not equal!10				   \r\n					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5927,50,576,57,'17 9 17 9					   \r\n					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5928,50,576,135,'import java.io.*;\r\npublic class reader{\r\n	public reader(){\r\n		File file = new File(\"content.txt\");\r\n		try{\r\n			FileReader fr = new FileReader(file);\r\n			BufferedReader bufr = new BufferedReader(fr);\r\n			String s = null;\r\n			int i = 0;\r\n			int word = 0;\r\n			while((s = bufr.readLine())!=null){\r\n				i++;\r\n				for(String sa : s.split(\" \")){\r\n					word++;\r\n				}\r\n			}\r\n			System.out.println(\"行数为  :\" + i);\r\n			System.out.println(\"单词数为:\" + word);\r\n			bufr.close();\r\n			fr.close();\r\n		}catch(Exception e){\r\n			e.printStackTrace();\r\n		}\r\n\r\n	}\r\n\r\n\r\n	public static void main(String[] args) {\r\n		reader rea = new reader();\r\n	}\r\n\r\n}				   \r\n					   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (5929,50,576,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class student{\r\n	private int id;\r\n	private String loginname;\r\n	private String password;\r\n	private String username;\r\n	private int age;\r\n	\r\n	static Connection con;\r\n	static Statement sql;\r\n	static ResultSet res;\r\n	\r\n	public static Connection getc() {\r\n		Connection con = null;\r\n		try {\r\n			Class.forName(\"com.mysql.cj.jdbc.Driver\");\r\n			System.out.println(\"数据库加载成功!\");\r\n		}catch(Exception e) {\r\n			e.printStackTrace();\r\n		}\r\n		\r\n		try {\r\n			con = DriverManager.getConnection(\"jdbc:mysql:\"+\"//127.0.0.1:3306/student?serverTimezone=UTC&characterEncoding=utf-8\",\"root\",\"abc\");\r\n			System.out.println(\"数据库连接成功!\");\r\n			\r\n		}catch(Exception e) {\r\n			e.printStackTrace();\r\n		}\r\n		return con;\r\n	}\r\n	\r\n	public static void main(String[] args) throws SQLException {\r\n		con = getc();\r\n		student st = new student();\r\n		StudentDao sd = st.new StudentDao();\r\n		System.out.println(\"当前是否存在该用户:\" +\r\n				sd.searchByLoginnameAndPassword(\"a\",\"123\"));\r\n		sd.searchByUsername(\"t2\");\r\n	}\r\n	\r\n\r\n	class StudentDao{\r\n		\r\n			public int searchByLoginnameAndPassword(String loginname,String password) throws SQLException{\r\n				\r\n				sql = con.createStatement();\r\n				res = sql.executeQuery(\"select *from student\");\r\n				while(res.next()) {\r\n					String log = res.getString(\"loginname\");\r\n					String pas = res.getString(\"password\");\r\n					\r\n					if(log.equals(loginname) && pas.equals(password)) {\r\n						return 1;\r\n					}\r\n				}\r\n				\r\n				return 0;\r\n			}\r\n		\r\n			public List searchByUsername(String username) throws SQLException{\r\n				List<student> li = new ArrayList<student>();\r\n				\r\n				sql = con.createStatement();\r\n				res = sql.executeQuery(\"select *from student\");\r\n				while(res.next()) {\r\n					student st = new student();\r\n					st.id = res.getInt(1);\r\n					st.loginname = res.getString(\"loginname\");\r\n					st.password = res.getString(\"password\");\r\n					st.username = res.getString(\"username\");\r\n					st.age = res.getInt(5);\r\n					\r\n					if(st.username.equals(\"username\")) {\r\n						li.add(st);\r\n					}\r\n				}\r\n				\r\n				return li;\r\n			}\r\n		\r\n	}\r\n	\r\n}			   \r\n					   ',20,10,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5930,50,576,134,'import java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\n\r\npublic class Area{\r\n    void triangle(int a,int b,int c) throws AreaException{//自动抛出数据类型不匹配\r\n        if(a+b<=c || a+c<=b || b+c <= a){				//抛出三角形异常\r\n            throw new AreaException(\"不能构成三角形!\");\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args){\r\n        Area area = new Area();\r\n        int[] str = new int[3];\r\n        Scanner t = new Scanner(System.in);\r\n\r\n        try{\r\n            System.out.print(\"输入边:\");\r\n            for(int i=0;i<3;i++){\r\n                str[i] = t.nextInt();\r\n            }\r\n            area.triangle(str[0],str[1],str[2]);\r\n\r\n        }catch(AreaException e){//自动抛出个数不匹配\r\n            System.out.println(e);\r\n        }catch (InputMismatchException e){\r\n            System.out.println(\"输入的不是数字\");\r\n        }\r\n\r\n    }\r\n}\r\n					   \r\n					   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (5931,50,580,73,'A					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5932,50,580,74,'B					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5933,50,580,67,'D					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5934,50,580,105,'C					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5935,50,580,108,'B					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5936,50,580,121,'D					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5937,50,580,137,'one two default					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5938,50,580,138,'Equal					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5939,50,580,55,'Not equal! 10					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5940,50,580,57,'17 9 17 9\r\n				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5941,50,580,135,'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class EX{\r\npublic static void main(String[] args) throws Exception {\r\n	 Scanner in = new Scanner(System.in);\r\n	  System.out.println(\"请输入文件路径：\");\r\n	  String path = in.next();\r\nint wordnumber = 0;\r\nint linenumber = 0;\r\nInputStreamReader sr = new InputStreamReader(new FileInputStream(path));\r\nBufferedReader br = new BufferedReader(sr);\r\nwhile(br.read()!=-1)\r\n {\r\n   String s = br.readLine();\r\nwordnumber += s.split(\"\").length;//单词个数\r\nlinenumber++;//行的数目\r\n  }\r\nsr.close();//关闭文件\r\n  System.out.println(\"单词个数： \"+wordnumber );\r\n  System.out.println(\"行数： \"+linenumber); \r\n  }\r\n}\r\n					   ',20,4,'					   ',0,'','',NULL),
 (5942,50,580,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic class StudentDao{\r\n	private Connectionconnection;\r\n	private PreparedStatementStudentQuery;\r\n	private ResultSetresults;\r\n	public int searchByLoginnameAndPassword(String loginname,String password) {\r\n		int result=0;\r\n		try {\r\n			connection=ConnectionManager.getConnection();\r\n			StudentQuery=connection.\r\n		        prepareStatement(\"SELECT*from student where loginname=?and password=?\");\r\n			StudentQuery.setString(1,loginname);\r\n			StudentQuery.setString(2,password);\r\n		ResultSet results=StudentQuery.executeQuery();\r\n		if(results.next()) {\r\n			result=1;\r\n			}\r\n		}\r\n		catch (SQLException exception) {//处理数据库异常\r\n			exception.printStackTrace();\r\n		}\r\n	finally {\r\n		ConnectionManager.closeResultSet(results);\r\n		ConnectionManager.closeStatement(StudentQuery);\r\n		ConnectionManager.closeConnection(connection);\r\n		}\r\n		return result;\r\n	}\r\n	public List searchByLoginname(String loginname) {\r\n		List StdudentList=new ArrayList();\r\n		try {\r\n			connection=ConnectionManager.getConnection();\r\n			StudentQuery=connection.prepareStatement(\"SELECT*FROM student where loginname like\'%\"+loginname+\"%\'\");\r\n			ResultSet results=StudentQuery.executeQuery();\r\n//读取行数据。\r\n			while(results.next()) {\r\n				Studentstudent=newStudent();\r\n				student.setId(results.getInt(1));\r\n				student.setLoginName(results.getString(2));\r\n				student.setPassword(results.getString(3));\r\n				StudenListt.add(student);		\r\n			}\r\n		}\r\n		catch (SQLException exception) {\r\n			exception.printStackTrace();\r\n		}\r\n		finally {\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(StudentQuery);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		return StudentList;\r\n	}\r\n}\r\n					   ',20,15,'					   ',84,'80,82,82,84,84,83','韦慧卿,张钰成,马芸芸,周璇,华启磊,许舒源',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5943,50,580,134,'import java.util.Scanner;\r\nimport java.util.Arrays;\r\nimport java.util.InputMismatchException;\r\nclass tri{\r\n	int a,b,c;\r\n	tri(int a,int b,int c)\r\n	{\r\n		this.a=a;this.b=b;this.c=c;\r\n	}\r\n	public double area() {\r\n		double p=(a+b+c)*1.0/2;\r\n	return Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n	}\r\n}\r\npublic class Triangle { 	\r\npublic static int[] len;	\r\npublic static void main(String[] args) {		\r\nlen=new int[3];	\r\nScanner in=new Scanner(System.in);	\r\ntry {\r\n	check();\r\n}\r\ncatch(Exception e) {\r\n	System.out.println(\"异常：\"+e.getMessage());\r\n}\r\ntry {\r\n	System.out.println(\"请输入三角形的边长：\");\r\nlen[0]=in.nextInt();			\r\nlen[1]=in.nextInt();			\r\nlen[2]=in.nextInt();			\r\nArrays.sort(len);			\r\ntriangle(len[0],len[1],len[2]);\r\ntri t=new tri(len[0],len[1],len[2]);\r\nSystem.out.println(\"三角形面积为：\"+t.area());\r\n	} \r\ncatch(InputMismatchException e) {			\r\nSystem.out.println(\"请输入整数作为三角形的边长！\");}\r\ncatch (IllegalArgumentException e) {		\r\ne.getMessage();			\r\ne.printStackTrace();		\r\n}\r\ncatch (Exception e) {			\r\ne.printStackTrace();		\r\n}\r\nfinally {			\r\nin.close();		\r\n}	\r\n}	\r\npublic static void check() {\r\n	Scanner input=new Scanner(System.in);\r\n	System.out.println(\"请输入数据个数：\");\r\n	int num=input.nextInt();\r\n	if(num!=3)\r\n		throw new NumberFormatException(\"报错：数据个数不为3！\");\r\n}\r\npublic static void triangle(int a,int b,int c)throws Exception{		\r\nif((a+b>c)&&(a-b<c))			 \r\nSystem.out.println(\"可以构成三角形\");\r\nelse throw new IllegalArgumentException(\"三条边不可以构成三角形！\");	\r\n}\r\n}\r\n					   ',20,20,'					   ',0,'','',NULL),
 (5944,51,595,67,'D			   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5945,51,595,68,'C				   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5946,51,595,106,'C				   \r\n					   \r\n					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5947,51,595,107,'C				   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5948,51,595,108,'B				   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5949,51,595,121,'D			   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5950,51,595,63,'one				   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5951,51,595,138,'Equal				   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5952,51,595,55,'Not equal! 10				   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5953,51,595,57,'	17 9 17 9				   \r\n					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5954,51,595,135,'package ch3\r\nimport java.io.File;\r\nimport java.io.Filereder;\r\nimport java.until.Scanner;\r\nimport Java.java.io.BufferedReader\r\npublic class ex3{\r\npublic static void main(string args[]){\r\n     \r\n    File a=new File(\"D:/test.txt\");//在D盘新建一个文本文档\r\n    FileReader a1=new FileReader(a);\r\n    BufferedReader a2=new BufferedReader;\r\n\r\n\r\n}\r\n\r\n//读取单词的个数\r\npublic static int wordNum(String test) throws IOException {\r\n         File file = new File(test);\r\n         int num = 0;\r\n         if (file.exists()) {\r\n             String path = file.getAbsolutePath();\r\n       FileReaderfr = newFileReader(path);\r\n           BufferedReaderbr = newBufferedReader(fr);\r\n            String str;\r\n       int line = 0;\r\n        ArrayList array = newArrayList();\r\n       while ((str = a.readLine()) != null) {\r\n                 str = str.replaceAll(\",\", \" \"); // 去除空格\r\n                 String[] str1 = str.split(\"\\\\s+\"); // 按空格分割\r\n                 array.add(str1); \r\n                 line++;\r\n             }\r\n          a.close();\r\n           \r\n             String regex = \".*[a-zA-Z]+.*\"; \r\n             Pattern pa = Pattern.compile(regex);\r\n             Iterator it = array.iterator();\r\n          while (it.hasNext()) {		\r\n                 String[] string = (String[]) it.next();\r\n             for (int y = 0; y <= string.length - 1; y++) {\r\n                     Matcher m = pa.matcher(string[y]);\r\n         if (m.matches()) {\r\n                         num++; // 每存在一个num加1\r\n                     }\r\n                 }\r\n             }\r\n           System.out.println(\"单词数：\" + total);\r\n      writeResult(\"单词数：\" + num + \"\\r\\n\");\r\n    if (!(num != 0)) {\r\n                 num = num + 1;\r\n             }\r\n         }\r\n\r\nreturn num;\r\n }\r\n\r\n\r\n// 读取文本的行数\r\n      public  static   int lineNum2(String test) throwsIOException {\r\n         File file = new File(fileName);\r\n   int lin = 0;\r\n    if (file.exists()) {\r\n             String path = new File(text).getAbsolutePath();// 得到exe的文件路径\r\n      FileReaderfr = newFileReader(path);\r\nBufferedReaderbr = newBufferedReader(a);\r\nwhile (b.readLine() != null) { // 按行读取，每存在一行lin+1\r\n                 l++;\r\n             }\r\n        a.close();\r\n        b.close();\r\n       System.out.println(\"行数:\" + lin);\r\n    writeResult(\"行数:\" + lin + \"\\r\\n\");\r\n  if (!(lin != 0)) {\r\n                 lin = lin+ 1;\r\n             }\r\n         }\r\n\r\n   return lin;\r\n				   \r\n}					   \r\n					   \r\n					   ',20,5,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5955,51,595,136,'					   \r\npackage ch6;\r\n\r\nimportjava.sql.Connection;\r\nimportjava.sql.PreparedStatement;\r\nimportjava.sql.ResultSet;\r\nimportjava.sql.SQLException;\r\nimportjava.util.*;\r\n\r\npublicclassStudentDao{\r\n	\r\n		publicclass Student {\r\n\r\n		private int id;//用户账号\r\n\r\n		private String loginname;//用户登录名\r\n\r\n		private String password;//设置密码\r\n\r\n		private String username;//学生的姓名\r\n\r\n		privateintage;  //学生年龄\r\n	}\r\n	\r\n\r\n\r\n      //按照用户登录名和密码搜索\r\n		public int searchByLoginnameAndPassword(intloginname,Stringpassword) {\r\n		private Connection connection;\r\n		privatePreparedPreparedStatementloginnameQuery;\r\n		privateResultSetresults;\r\n		publiclistgetByLoginnameAndPassword(intloginname,Stringpassword) {\r\n		List loginnamelist=newArryLIst();\r\n		List passwordlist=newArryLIst();\r\n		try {\r\n			connection=ConnectionManager.getConnection();\r\n			loginnameQuery=connection.prepareStatement(SELECT id,loginname，password\"+\"username，age\"+\"FROM titles where loginname=\"+loginname)\r\n		passwordQuery=connection.prepareStatement(SELECT id,loginname，password\"+\"username，age\"+\"FROM titles where password=\"+password)\r\n					ResultSet results=loginnameQuery();\r\n			while(results.next()) {\r\n				Loginname student=newloginname();\r\n				Password student=new password();\r\n				student.setId(results.getString(\"id\"));\r\n				student.setloginname(results.getString(\"loginname\"));\r\n				student.setPassword(results.getString(\"password\"));\r\n				student.setUername(results.getString(\"username\"));\r\n				student.setUerAge(results.getString(\"age\"));\r\n				loginnamelist.add(student);\r\n			}\r\n		}\r\n		catch(SQLException exception){		\r\n			exception.printStackTrace();\r\n		}\r\n		finally {\r\n			ConnectionManager.closeResultsSet(results);\r\n			ConnectionManager.closeStatement(loginname);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		returnloginnamelist;\r\n		}\r\n	}\r\n\r\n           \r\n         //按照学生姓名搜索\r\n		public  Student searchByUsername(String username) {\r\n			connection=ConnectionManager.getConnection();\r\n		Titles student=null;\r\n			try {\r\n				titlesQuery=connection.prepareStatement(\"SELECT id,loginname，password\"+\"username，age\"+\"FROM titles where username=\"+username)\r\n						ResultSetresults=titlesQuery.executeQuery;\r\n				\r\n				if(results.next()) {\r\n					student=new Titles();\r\n				\r\n					Loginnamestudent=newloginname();\r\n					student.setId(results.getString(\"id\"));\r\n					student.setloginname(results.getString(\"loginname\"));\r\n					student.setPassword(results.getString(\"password\"));\r\n					student.setUername(results.getString(\"username\"));\r\n					student.setUerAge(results.getString(\"age\"));\r\n			}\r\n			\r\n				catch(SQLException a) {\r\n					a.printStackTrace();\r\n				}\r\n			return student;\r\n		\r\n	\r\n}\r\n					   \r\n					   \r\n					   ',20,5,'					   ',0,'','',NULL),
 (5956,51,595,134,'					   \r\n	package ex2;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\npublic class Triangle {\r\n\r\n	public static int[] arr;\r\n	publicstaticvoid main(String[] args) {\r\n		int [] arr=new int[3];\r\n		inta; intb; intc;\r\n		Scanner input=new Scanner(System.in);	\r\n		System.out.println(\"请输入三角形的三条边\");\r\n		arr[0]=input.nextInt();\r\n		arr[1]=input.nextInt();\r\n		arr[2]=input.nextInt();\r\n		arr[0]=a;arr[1]=b;arr[2]=c;\r\n		floats =(a+b+c)/2f;//计算三角形面积\r\n		try {\r\n			Arrays.sort(arr);\r\n			triangle(arr[0],arr[1],arr[2]);\r\n		} catch (IllegalArgumentExceptione) {\r\n			e.getMessage();\r\n			e.printStackTrace();\r\n		}catch (Exception e) {\r\n			e.printStackTrace();\r\n		}finally {\r\n			input.close();\r\n		}\r\n	}\r\n	\r\n	public static void triangle(inta,intb,intc)throws Exception{\r\n		if((a+b>c)&&(a-b<c))\r\n			System.out.println(\"可以构成三角形\");\r\n		else\r\n			throw newIllegalArgumentException(\"这三条边不能构成三角形\");\r\n          if（！a&&b&&c）\r\n         System.out.println(\"边数不够\")\r\n}\r\n				   \r\n					   \r\n					   ',20,15,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5957,50,564,73,'A					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5958,50,564,74,'B					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5959,50,564,67,'D					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5960,50,564,105,'C					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5961,50,564,108,'B					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5962,50,564,121,'D				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5963,50,564,137,'one					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5964,50,564,138,'Equal					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5965,50,564,55,'Not equal!10\r\nNot equal				   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5966,50,564,57,'17  9  17  9					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5967,50,564,135,'import java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\npublic class test {\r\n	public static void main(String[] args) throws IOException {\r\n		// TODO Auto-generated method stub\r\n    File stream=new File(\"d:/test.txt\");\r\n    int line=0;\r\n    int space=0;\r\n    BufferedReader reader=new BufferedReader(new FileReader(stream));\r\n    String str=null;\r\n    while((str=reader.readLine())!=null){\r\n		System.out.println(str);\r\n		line++;\r\n		space+=countspace(str);\r\n	}\r\n    int letter=line+space;\r\n    System.out.println(\"字母个数为:\"+letter);\r\n    System.out.println(\"行数为：\"+line);\r\n    reader.close();\r\n}\r\n	private static int countspace(String str) {\r\n		int space = 0;\r\n	    Pattern pattern = Pattern.compile(\"\\\\s\");\r\n		Matcher matcher = pattern.matcher(str);\r\n		while(matcher.find()){\r\n				space++;\r\n			}\r\n			return space;\r\n		}\r\n}					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5968,50,564,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic class test {\r\n    private Connection connection;\r\n    private ReparedStatement StudentQuery;\r\n    private ResultSet results;\r\n    public int searchByLoginnameAndPassword(int loginname,String password) {\r\n    	int result=0;\r\n    	try {\r\n    		connection=ConnectionManager.getConnction();\r\n    		UserQuery=connection.\r\n    				prepareStatement(\"SELECT*from student where id=? and password=?\");\r\n    		UserQuery.setString(1,username);\r\n    		UserQuery.setString(2.password);\r\n    		ResultSet results=UserQuery.executeQuery;\r\n    		if(results.next()) {\r\n    			result=1;\r\n    		}\r\n    	}\r\n    	catch(SQLException exception) {\r\n    		exception.printSStackTrace();\r\n    	}\r\n    	finally {\r\n    		ConnectionManager.closeResultSet(results);\r\n    		ConnectionManager.closeStatement(UserQuery);\r\n    		ConnectionManager.closeConnection(connection);\r\n    	}\r\n    	return result;\r\n    }\r\n    public  Student searchByUsername(String username) {\r\n    	List UserList=new ArrayList();\r\n    	try {\r\n    		connection=ConnectionManager.getConnection();\r\n    		.prepareStatement(\"SELECT*FROM student where username like\'%\"+username+\"%\'\");\r\n    				ResultSet results=UserQuery.executeQuery();\r\n    		while(results.next()){\r\n    			Student student=new Student();\r\n    			student.setid(results.getInt(1));\r\n    			student.setloginname(results.getString(2));\r\n    			student.setpassword(results.getString(3));\r\n    			UserList.add(student);\r\n    		}\r\n    	}\r\n    	catch(SQLExeption exception) {\r\n         exception.printStackTrace();\r\n    	}\r\n    	finally {\r\n    		ConnectionManager.closeResultSet(results);\r\n    		ConnectionManager.closeStatemnet(UserQuery);\r\n    		ConnectionManager.closeConnection(connection);\r\n    	}\r\n    	return UserList;\r\n    }\r\n}					   \r\n					   ',20,10,'					   ',80,'83,80','韦慧卿,周璇',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5969,50,564,134,'import java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\nclass triangle{\r\n	int a;\r\n	int b;\r\n	int c;\r\n	public static double getArea(int a,int b,int c) {\r\n	 float p=(a+b+c)/2;\r\n	 float s=(float) Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n	 return s;\r\n }\r\n}\r\npublic class test {\r\n	public static void main(String[] args) {\r\n		// TODO Auto-generated method stub\r\n    try {\r\n    	 int ARRAYLENGTH = 10; \r\n         int X[] = new int[ARRAYLENGTH];\r\n         Scanner sc = new Scanner(System.in);\r\n         System.out.println(\"请输入3个有效数据，以输入-1表示输入结束并点击回车键：\");\r\n         for(int i = 0; i < X.length; i++){\r\n            X[i] = sc.nextInt();\r\n            if(X[i]==-1) break;\r\n         }\r\n\r\n    	int a=X[0];\r\n    	int b=X[1];\r\n    	int c=X[2];\r\n    	if(c!=-1)\r\n    	{if(a+b<=c||a+c<=b||b+c<=a)\r\n    		throw new IllegalArgumentException();}\r\n    	if(X[3]!=-1)\r\n    		throw new Exception();\r\n    	float area=(float) triangle.getArea(a,b,c);\r\n        System.out.println(\"三角形面积为:\"+area);\r\n    }catch(InputMismatchException e) {\r\n    	System.out.println(\"异常：数据类型不匹配！\");\r\n    }catch(IllegalArgumentException e) {\r\n        System.out.println(\"异常：三条边的值无法构成三角形！\");\r\n	}catch(Exception e) {\r\n		System.out.println(\"异常：数据个数不满足3个！\");\r\n	}\r\n}\r\n}					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (5970,50,560,73,'A					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5971,50,560,74,'B				   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5972,50,560,67,'D					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5973,50,560,105,'C                                                                                                                                              					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5974,50,560,108,'B					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5975,50,560,121,'D					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5976,50,560,137,'one					   ',4,0,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5977,50,560,138,'Equal					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5978,50,560,55,'Not equal! 10					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5979,50,560,57,'17 9 17 9					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (5980,50,560,135,'import java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.util.Scanner; \r\npublic class Test {\r\n	public static void main(String[] args) throws Exception{\r\n	Scanner input=new Scanner(System.in);\r\n	System.out.println(\"请输入路径\");\r\n	String path=input.next();\r\n	int wordsNum= 0;\r\n	int lineNum = 0;\r\n	BufferedReader isr = new BufferedReader(FileBufferedReader(path));\r\n	BufferedReader br = new BufferedReader(isr);\r\n	while( br.read()!= -1){\r\n	String s = br.readLine();\r\n	wordsNum +=s.split(\" \").length;\r\n	lineNum ++;\r\n	}\r\n	isr.close();\r\n	System.out.println(\"单词数:\"+wordsNum+\"行 数:\"+lineNum);\r\n	}\r\n	}					   ',20,15,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5981,50,560,136,'import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n	public class StudentDao {\r\n		private Connection connection;\r\n		private PreparedStatement studentQuery;\r\n		private ResultSet results;\r\n		public List getByStudent(String studentname,String password){\r\n			int result=0;\r\n			try{\r\n				connection=ConnectionManager.getConnction();\r\n				studentQuery=connection.prepareStatement(\"SELECT*from student where id=? and password=?\");\r\n				studentQuery.setString(1, studentname);\r\n			studentQuery.setString(2, password);\r\n				ResultSet results=studentQuery.executeQuery();\r\n				if(results.next()){\r\n					result=1;\r\n				}\r\n			}\r\n			catch(SQLException exception){\r\n				exception.printStackTrace();\r\n			}\r\n			finally{\r\n				ConnectionManager.closeresultSet(results);\r\n				ConnectionManager.closeStatement(studentQuery);\r\n				ConnectionManager.closeConnection(connection);\r\n				}\r\n			return result;\r\n		}\r\n		\r\n		public List getByStd(String studentname){\r\n			List StudentList=new ArrayList();\r\n			try{\r\n				connection=ConnectionManager.getConnction();\r\n			studentQuery=connection.prepareStatement(\"SELECT*FROM userinfo where username like \'%\"+studentname+\"%\'\");\r\n				ResultSet results=studentQuery.executeQuery();\r\n				while (results.next()){\r\n					Student=new  Student();\r\n					student.setstudentId(results.getInt(1));\r\n					student.setloginName(results.getString(2));\r\n					student.setPassword(results.getString(3));\r\n				StudentList.add(student);\r\n				}\r\n			}\r\n			catch (SQLException exception){\r\n				exception.printStackTrace();\r\n			}\r\n			finally{\r\n				ConnectionManager.closeresultSet(results);\r\n				ConnectionManager.closeStatement(studentQuery);\r\n				ConnectionManager.closeConnection(connection);	\r\n			}\r\n			return StudentList;\r\n		}\r\n	}\r\n					   ',20,15,'					   \r\n					   ',82,'82,82','翁佳琦,许舒源',NULL),
 (5982,50,560,134,'import java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\nimport java.io.IOException;\r\npublic class Triangle(){\r\n	public static void triangle(){\r\n		String[] nums=null;\r\n		Scanner in=new Scanner(System.in);\r\n	   System.out.println(\"请输入一组整数，以空格分隔：\");	\r\n		int num=in.nextInt();\r\n		if (num!=3)\r\n		    throw new NumberFormatException();\r\n		else\r\n			System.out.println(\"输入三角形三边为：\");\r\n		int a=in.nextInt();\r\n		int b=in.nextInt();\r\n		int c=in.nextInt();\r\n		if((a>=b+c)||(b>=a+c)||(c>=b+a))\r\n			throw  new  IllegalArgumentException();\r\n		}\r\n		public static void main(String[] args){\r\n			public void area(){\r\n				float s =(a+b+c)/2f;\r\n			    float S = (float) Math.sqrt(s*(s-a)*(s-b)*(s-c));\r\n			    System.out.println(\"三角形面积为：\"+S);\r\n			try{\r\n				triangle();\r\n			}\r\n			catch (NumberFormatException e){\r\n				System.out.println(\"输入数字个数不符！\");\r\n			}catch ( IllegalArgumentException e){\r\n				System.out.println(\"无法组成三角形\");\r\n			} catch ( InputMismatchException e){\r\n				System.out.println(\"输入的不是数字\");\r\n			} \r\n		}\r\n		\r\n		}			   ',20,20,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5983,50,583,73,'					A   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5984,50,583,74,'					 B  \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5985,50,583,67,'					   D\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5986,50,583,105,'			D\r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (5987,50,583,108,'					   B\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5988,50,583,121,'				D	   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5989,50,583,137,'					 one  two  default\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5990,50,583,138,'					   Equal\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5991,50,583,55,'				Not equal! 10	   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5992,50,583,57,'					   17 9 17 9\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (5993,50,583,135,'					   public static void printByFileReader(String filePath) throws IOException\r\n{\r\n    BufferedReader reader=new BufferedReader(new FileReader(\"file.exe\"));\r\n    if(!reader.ready())\r\n    {\r\n        System.out.println(\"文件流暂时无法读取\");\r\n        return;\r\n    }\r\n    int word=0;int line=0;\r\n     while(reader.read()!= -1){\r\n			 String a= reader.readLine();\r\n			 word=a.split(\" \").length+word;\r\n			 line++; 	 \r\n			 }\r\n    reader.close();\r\nSystem.out.println(\"单词个数：\"+word+\" 行数：\"+line);\r\n}\r\n\r\n					   ',20,20,'					   ',0,'','',NULL),
 (5994,50,583,136,'					   import java.sql.*;\r\nimport java.util.ArrayList\r\nimport java.util.List\r\n\r\npublic class StudentDao{\r\n    private Connection connection;\r\n    private PreparedStatementUserQuery;\r\n    private ResultSet results;\r\n    public int searchByLoginnameAndPassword(int loginname,String password){\r\n        int result=0;\r\n        try {\r\n            connection=ConnectionManager.getConnection();\r\n            UserQuery=connection.\r\n                prepareStatement(\"SELECT*from userinfo where id=?\r\n                and password=?\");\r\n            UserQuery.setString(1,loginname);\r\n            UserQuery.setString(2,password);\r\n            ResultSet results=UserQuery.executeQuery();\r\n            if(results.next()){\r\n                        result=1;\r\n                }\r\n            }\r\n            catch (SQLException exception){\r\n                        exception.printStackTrace();\r\n            }\r\n            finally{\r\n                        ConnectionManager.closeResultSet(results);\r\n                        ConnectionManager.closeStatement(UserQuery);\r\n                        ConnectionManager.closeConnection(connection);\r\n                        }\r\n                        return result;\r\n             }\r\n            public  Student searchByUsername(String username){\r\n                        List UserList=new ArrlyayList();\r\n                        try{\r\n                                    connection=ConnectionManager.getConnection();\r\n                                    UserQuery=connection\r\n                                                .prepareStatement(\"SELECT*FROM userinfo where username like\'%\'\'+username+\'\'%\'\");\r\n                                    ResultSet results=UserQuery.executeQuery();\r\n                                    while(result.next())}\r\n                                                UserInfo userinfo=new Userinfo();\r\n                                                userinfo.setId(results.getInt(1));\r\n                                                userinfo.setLoginName(results.getString(2));\r\n                                                userinfo.setPassword(results.getString(3));\r\n                                                userinfo.setUserName(results.getInt(4));\r\n                                                UserList.add(userinfo);\r\n                              }\r\n                          }\r\n                          catch(SQLException exception){\r\n                                  exception.printStackTrace();\r\n                          }\r\n                          finally{\r\n                                ConnectionManager.closeResultSet(results);\r\n                                ConnectionManager.closeSttement(UserQuery);\r\n                                ConnectionManager.closeConnecction(connection);\r\n                          }\r\n                          return UserList;\r\n             }\r\n}\r\n       \r\n					   ',20,15,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5995,50,583,134,'					   import java.util.Arrays;\r\nimport java.util.Scanner;\r\n\r\npublic class triangle{\r\nint a,b,c;\r\nvoid triangle(int a,int b,int c)\r\nthrows Exception{\r\nthis.a=a;		\r\nthis.b=b;		\r\nthis.c=c;		\r\nif（(a+b>c)&&(a-b<c)）\r\n{System.out.println(\"构成三角形的三条边为：\"+this.a+\",\"+this.b+\",\"+this.c);}\r\nelse{throw new IllegalArgumentException();}	\r\n}\r\npublic double getArea(int a,int b,int c){\r\ndouble p=(a+b+c)/2;\r\nreturn Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n}\r\n}\r\n\r\npublic class Test {	\r\npublic static void main(String[] args) {				\r\nint []s=new int[3];		\r\nSystem.out.println(\"请输入三条边：\");		\r\nScanner in=new Scanner(System.in);		\r\ntry {			\r\nfor(int i=0;i<s.length;i++)\r\n{				\r\nif(in.hasNextInt())					\r\ns[i]=in.nextInt();				\r\nelse					\r\nthrow new InputMismatchException();			\r\n}			\r\nArrays.sort(s);\r\nsjx t=new sjx();			\r\nt.triangle(s[0], s[1], s[2]);		\r\n}catch(IllegalArgumentException e) {			\r\n System.err.println(s[0]+\",\"+s[1]+\",\"+s[2]+\",不能构成三角形\");		\r\n}\r\ncatch(InputMismatchException e) {			\r\nSystem.err.println(\"请输入整数作为三角形的边长！\");			\r\ne.printStackTrace();		\r\n}catch (Exception e) {			\r\ne.printStackTrace();		\r\n}	\r\n}\r\n}\r\n					   ',20,20,'					   ',0,'','',NULL),
 (5996,50,558,73,'		A			   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (5997,50,558,74,'		B			   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5998,50,558,67,'		D			   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (5999,50,558,105,'			C		   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (6000,50,558,108,'			B		   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (6001,50,558,121,'				ABD	   ',4,0,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (6002,50,558,137,'				one	   ',4,0,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (6003,50,558,138,'				Equal	   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (6004,50,558,55,'				Not equal!10	   ',4,4,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (6005,50,558,57,'		17  9			   ',4,0,'					   \r\n					   \r\n					   ',0,NULL,NULL,NULL),
 (6006,50,558,135,'		package lzt01;\r\n/*\r\n * 字符流统计文件： \r\n要求：使用字符流统计文件中包含的单词个数和行数。\r\n步骤：\r\n(1)  自建一个原始文本文件，使用字符流BufferedReader类；\r\n(2)  单词和单词间的分隔符是空格；\r\n(3)  文本按行读取，统计其文本内容所占行数。\r\n\r\n */\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.io.FileInputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.util.Scanner;\r\n\r\n/*\r\n * InputStreamReader(new FileInputStream(绝对文件名))进行文件的读取\r\n * BufferedReader(文件读取)调用readLine()的方法\r\n */\r\n\r\npublic class lzt02 {\r\n\r\n public static void main(String[] args) throws Exception {\r\n  Scanner input = new Scanner(System.in);\r\n  System.out.println(\"请输入路径:\");\r\n  String path = input.next();\r\nint countword= 0;\r\n  int countline = 0;\r\n  /*public int getWord() {\r\n		return countword;\r\n	}\r\n	public void setWord(int word) {\r\n		this.word = word;\r\n	}\r\n	public int Line() {\r\n		return line;\r\n	}\r\n	public void setLine(int line) {\r\n		this.line = line;\r\n	}*/\r\n  \r\n  InputStreamReader lzt = new InputStreamReader(new FileInputStream(path));\r\n  //InputStreamReader将字符流向字节流转换。\r\n  //InputStreamReader lzt = new InputStreamReader(new FileInputStream(绝对文件名));\r\n  //用来读取文件中的数据\r\n  BufferedReader lzt01 = new BufferedReader(lzt);\r\n  while(lzt01.read()!=-1)   //read()=-1代表数据读取完毕\r\n  {\r\n   String s = lzt01.readLine();\r\n   countword += s.split(\" \").length;\r\n   countline++;\r\n  }\r\n  lzt.close();\r\n  System.out.println(\"word count \"+countword );\r\n  System.out.println(\"line count \"+countline); \r\n  }\r\n}			   ',20,18,'					   \r\n					   \r\n					   ',0,'','',NULL),
 (6007,50,558,136,'		package lzt01;\r\n\r\n/* 表student的数据库结构为，id(int),loginname(varchar),password(varchar),username(varchar),age(int)。已知与表student对应的实体类为Student，代码如下：\r\npublic class Student {\r\n	private int id;\r\n	private String loginname;//登录名\r\n	private String password;//密码\r\n	private String username;//学生姓名\r\n	private int age;  //年龄\r\n//相应的set和get方法省略\r\n}\r\n创建一个StudentDao类，添加相应方法实现如下功能：\r\n（1）public int searchByLoginnameAndPassword(int loginname,String password),这个方法是根据登录名和密码查询用户信息，如果找到满足条件用户则返回1，否则返回0\r\n（2）public  Student searchByUsername(String username),这个方法是根据用户名进行模糊查询，返回值为一个List类型的实例，数组实例中存放的是Student类的对象。可参照例10-10。\r\n*/\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java. util. List;\r\npublic class Student {\r\n	private int  id;\r\n	private int age;\r\n	private String  loginname;\r\n	private String password;\r\n	private String username;\r\n	\r\n	public String getUsername() {\r\n		return username;\r\n	}\r\n	public void setUsername(String username) {\r\n		this.username = username;\r\n	}\r\n	public int getId() {\r\n		return id;\r\n	}\r\n	public void setId(int id) {\r\n		this.id = id;\r\n	}\r\n	public int getAge() {\r\n		return age;\r\n	}\r\n	public void setAge(int age) {\r\n		this.age = age;\r\n	}\r\n	public String getLoginname() {\r\n		return loginname;\r\n	}\r\n	public void setLoginname(String loginname) {\r\n		this.loginname = loginname;\r\n	}\r\n	public String getPassword() {\r\n		return password;\r\n	}\r\n	public void setPassword(String password) {\r\n		this.password = password;\r\n	}\r\nprivate Connection  connection;\r\nprivate PreparedStatement UserQuery;\r\nprivate ResultSet results;\r\npublic int getByUserAndPwd(String username,String password){\r\n	int result=0;\r\n	try{\r\n		connection=ConnectionManager.getConnction();\r\n		UserQuery=connection;\r\n		prepareStatement(\"SELECT*from student where loginname=? and password=?\");\r\n		UserQuery.setString(1, loginname);\r\n		UserQuery.setString(2, password);\r\n		ResultSet results=UserQuery.executeQuery();\r\n		if (results.next()){\r\n			result=1;\r\n		}\r\n	}\r\ncatch(SQLException exception){\r\n	exception.printStackTrace();\r\n}\r\nfinally{\r\n	connectionManager.closerResultSet(results);\r\n	connectionManager.closerResultSet(UserQuery);\r\n	connectionManager.closerResultSet(connection);}\r\nreturn result;\r\n}\r\npublic List getByUser(String uername){\r\n	List UserList=new ArrayList();\r\n	try{\r\n		connection=ConnectionManager.getConnction();\r\n		UserQuery=connection\r\n		.prepareStatement(\"SELECT*FROM student where usename like\'%\"+username+\"%\'\");\r\n		ResultSet results=UserQuery.executeQuery();\r\n		while(results.next()){\r\n			Student student=new Student();\r\n			student.setId(results.getInt(1));\r\n			student.setAge(results.getInt(2));\r\n			student.setLoginname(results.getString(3));\r\n			student.setPassword(results.getString(4));\r\n			student.setUsername(results.getString(5));\r\n			UserList.add(student);\r\n			\r\n		}}\r\n	catch(SQLException exception){\r\n		exception.printStackTrace();\r\n	}\r\n	finally{\r\n		connectionManager.closerResultSet(results);\r\n	    connectionManager.closerResultSet(UserQuery);\r\n	    connectionManager.closerResultSet(connection);\r\n	    }\r\n		return UserList;\r\n			\r\n		}\r\n	}			   ',20,18,'					   \r\n					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6008,50,558,134,'		package lzt02;\r\nimport java.util.Arrays;\r\nimport java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\n\r\npublic class tringle {\r\n	private int a;\r\n	private int b;\r\n	private int c;\r\n	/*(2)  不符合条件的则抛出异常，如：(if  a+b<=c(或a+c<=b,b+c<=a) then  throw  new  \r\nIllegalArgumentException(),)；\r\n当数据类型不匹配时，抛出异常；\r\n当数据个数不满足要求时，抛出异常；\r\n当三条边的值不能构成三角行时，抛出异常。\r\n用try…..catch…. finally语句捕获异常*/\r\n	void triangle(int a,int b,int c)\r\n	{                   \r\n		this.a = a;          \r\n		this.b= b;          \r\n		this.c = c; \r\n		}\r\n	public static void main(String[] args) {\r\n		try{ \r\n			tringle ss = new tringle();              \r\n			System.out.println(\"请输入三个数：\");               \r\n			Scanner num =new Scanner(System.in);                \r\n			int a=num.nextInt();                \r\n			int b=num.nextInt();                \r\n			int c=num.nextInt();      \r\n			double d;//d为海伦公式中的参数\r\n			double s;//s为三角形面积\r\n			d = (a + b + c) / 2;//海伦公式计算参数\r\n			s = Math.sqrt(d * (d - a) * (d - b) * (d - c));//海伦公式计算三角形面积\r\n			if(a+b>c&&a+c>b&&b+c>a)                   \r\n				System.out.println(\"面积=\"+s);                \r\n			else                { \r\n				throw new IllegalArgumentException(\"所输入的三个值不能构成三角形\");           \r\n				}                                   \r\n			}\r\n		catch (IllegalArgumentException e1){\r\n			System.out.println(\"所输入的三个值不能构成三角形\");//当三条边的值不能构成三角行时，抛出异常。\r\n			} \r\n		catch (InputMismatchException e2){\r\n			System.out.println(\"数据类型不匹配\");//当数据类型不匹配时，抛出异常\r\n			} \r\n		catch (Exception e3){\r\n			System.out.println(\"数据个数有误\");// 当数据个数不满足要求时，抛出异常\r\n		}   \r\n	}  \r\n\r\n\r\n}			   ',20,18,'					   \r\n					   \r\n					   ',0,'','',NULL),
 (6009,50,561,73,'	A				   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6010,50,561,74,'			B		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6011,50,561,67,'			D		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6012,50,561,105,'		C			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6013,50,561,108,'			C		   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6014,50,561,121,'		BCD			   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6015,50,561,137,'			one two default	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6016,50,561,138,'		Equal			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6017,50,561,55,'		Not equal!10			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6018,50,561,57,'17 9 17 9 ',4,4,'					   ',0,NULL,NULL,NULL),
 (6019,50,561,135,'1.在C盘新建一个文件Englishhomework.txt,任意输入一遍英文。\r\n2.代码：\r\nimport java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\npublic class Test {\r\npublic static void main(String[] args) {\r\n                Scanner input=new Scanner(System.in);\r\n                System.out.println(\"c:\\Englishhomework.text\");\r\n                String path=input.next();\r\n                          int wordsNum= 0;\r\n                          int lineNum = 0;\r\ntry{\r\n          InputStreamReader isr = new InputStreamReader(new FileInputStream(path));\r\n          BufferedReader br = new BufferedReader(isr);\r\n          while((c = br.read()) != -1){\r\n          String s = br.readLine();\r\n          wordsNum +=s.split(\' \').length;\r\n          lineNum ++;\r\n    }\r\nisr.close();\r\nSystem.out.println(\"单词数统计结果为:\"+wordsNum);\r\nSystem.out.println(\"行数为:\"+lineNum);\r\n        }catch(Exception e){\r\n         e.printStackTrace();\r\n      }\r\n}\r\n			   ',20,15,'					   ',0,'','',NULL),
 (6020,50,561,136,'import java.sq1.*\r\nimport.java.until.ArrayList;\r\nimport,java.until.List;\r\n\r\npublic class StudentDao{\r\n      private Connection connection;  \r\n      private PreparedStatement StudentQuery;\r\n      private ResultSet results;\r\n      public int searchByLoginnameAndPassword(int loginname,String password){\r\n      int result=0;\r\n      try{\r\n           connection=ConnectionManager.getConnection();\r\n           StudentQuery=connection\r\n               prepareStatement(\"SELECT*from studentdao where loginname=?\r\n                                               and password=?\");\r\n           StudentQuery.setString(1,loginname);\r\n           StudentQuery.setString(2,password);\r\n           ResultSet results=StudentQuery.executeQuery();\r\n           if(results.next()){\r\n                     result=1;\r\n           }\r\n}\r\n\r\ncatch(SQLException exeption){//处理数据库异常\r\n   exception.printStackTrace();\r\n}\r\n//释放资源\r\nfinally{\r\nConnectionManager.closeResultSet(results);\r\nConnectionManager.closeStatement(StudentQuery);\r\nConnectionManager.closeConnection(connection);\r\n}\r\nreturn result;\r\n}\r\npublic Student searchByUsername(String username){\r\n     List StudentList=new ArrayList();\r\n      try{\r\n            connection=ConnectionManager.getConnection();\r\n           StudentQuery=connection.prepareStatement(\"SELECT*FROM student where loginname like\'%\'+loginname+\"%\'\");\r\n         ResultSet result=StudentQuery.executeQuery();\r\n//读取行数据\r\nwhile(results.next()){\r\n StudentDao studentdao=new StudentDao();\r\n//将数据表中的一条记录数据添加到封装类中\r\nstudentdao.setStudentId(result.getInt(1));\r\nstudentdao.setLoginName(results,getString(2));\r\nstudentdao.setPassword(results.getString(3));\r\nstudentdao.setAge(results.getInt(4);\r\nStudentList.add(studentdao);\r\n}\r\n}\r\n//处理数据库异常\r\ncatch(SQLException exception){\r\nexception.printStackTrace();\r\n}\r\n//释放资源\r\nfinally{\r\nConnectionManager.closeResultSet(results);\r\nConnectionManager.closeStatement( StudentQuery);\r\nConnectionManager.closeConnection(connection);\r\n}\r\nreturn StudentList;\r\n}\r\n}					   ',20,20,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6021,50,561,134,'package chapter02;  \r\nimport java.util.Scanner;  \r\nclass Triangle { 	\r\n                private int a, b, c; 	\r\n                double area;\r\n public voidTriangle(int a,int b,int c){\r\n 		this.a = a;\r\n 		this.b = b;\r\n 		this.c = c;	\r\n	 	}\r\n public double getArea() {\r\n 		double p=0.5*(this.a+this.b+this.c);\r\n 		return Math.sqrt(p*(p-this.a)*(p-this.b)*(p-this.c));\r\n 	}\r\n } \r\npublic class test() throws DateTypeException,NumberFormatException,IllegalArgumentException \r\n                     { \r\n                              Scanner in = new Scanner(System.in); \r\n                             System.out.println(\"请输入a:\")\r\n                             a=in.nextInt();\r\n                             System.out.println(\"请输入b:\")\r\n                             b=in.nextInt();\r\n                             System.out.println(\"请输入c:\")\r\n                             c=in.nextInt();\r\n          if(type==)\r\n                   thews new DateTypeException();\r\n          if(number )\r\n                  thews new NumberFormatException();\r\n         if(  a+b<=c&&a+c<=b&&b+c<=a)\r\n            thews new IllegalArgumentException();\r\n         else\r\n                 System.out.printlnArea(\"面积为:\");\r\n}\r\npublic static void main(String[] args) {\r\n 		 try{\r\n                                       test();                       \r\n                  }catch  (DateTypeException e){System.out.println(\"数据类型不匹配,请重新输入\");\r\n                  }catch  (NumberFormatException e){System.out.println(\"数据个数不满足，请重新输入\");\r\n                  }catch  (IllegalArgumentException e){System.out.println(\"三条边不符合要求，请重新输入\")\r\n          }\r\n}',20,20,'					   ',0,'','',NULL),
 (6022,50,563,73,'A					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6023,50,563,74,'B					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6024,50,563,67,'D					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6025,50,563,105,'C					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6026,50,563,108,'B					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6027,50,563,121,'D				   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6028,50,563,137,'one two default	   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6029,50,563,138,'Equal					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6030,50,563,55,'Not equal!  10					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6031,50,563,57,'17 9 17 9					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6032,50,563,135,'import java.io.*;\r\nimport java.util.Scanner;\r\npublic class zfl {\r\npublic static void main(String[]args){\r\n	try{\r\n		Scanner s=new Scanner(System.in);\r\n		System.out.println(\"请输入想要打开的文本文档:\");\r\n		String n=s.nextLine();\r\n		InputStreamReader read=new InputStreamReader(new FileInputStream(n),\"utf-8\");\r\n		BufferedReader in=new BufferedReader(read);\r\n		String m=null;\r\n		int a=0;int b=0;\r\n		while((m=in.readLine())!=null)\r\n			{a++;\r\n		b+=m.split(\" \").length;\r\n			}\r\n		in.close();		\r\n		System.out.println(\"该文本总共有\"+b+\"个单词\");\r\n		System.out.println(\"该文本总共有\"+a+\"行\");\r\n}catch(IOException e){\r\n	e.printStackTrace();\r\n}\r\n}\r\n}					   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (6033,50,563,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic class StudentDao {\r\nprivate Connection connection;\r\nprivate PreparedStatement StudentQuery;\r\nprivate ResultSet results;\r\npublic int searchByLoginnameAndPassword(int loginname,String password){\r\n	int result=1;\r\n	try{\r\n		connection=ConnectionManager.getConnection();\r\n		StudentQuery=connection.prepareStatement(\"SELECT*from StudentDao where Studentid=?and password=?\");\r\n		StudentQuery.setString(1, loginname);\r\n		StudentQuery.setString(2, password);\r\n		ResultSet results=StudentQuery.executeQuery();\r\n		if(results.next()){\r\n			return 1;\r\n		}\r\n		else\r\n			return 0;\r\n	}\r\n	catch(SQLException exception){\r\n		exception.printStackTrace();	}\r\nfinally{\r\n	ConnectionManager.closeResultSet(results);\r\n	ConnectionManager.closeStatement(StudentQuery);\r\n	ConnectionManager.closeConnection(connection);\r\n}\r\nreturn 0;\r\n}\r\npublic List searchByUsername(String username){\r\n      List StudentList=new ArrayList();\r\n      try{\r\n    	  connection=ConnectionManager.getConnection();\r\n    	  StudentQuery=connection.prepareStatement(\"SELECT*FROM StudentDao where user name like\'%\"+username+\"%\'\");\r\n    	  ResultSet results=StudentQuery.executeQuery();\r\n    	  while(results.next()){\r\n    		  StudentDao student=new StudentDao();\r\n    		  student.setId(results.getInt(1));\r\n    		  student.setLoginName(results.getString(2));\r\n    		  student.setPassword(results.getString(3));\r\n    		  StudentList.add(student);\r\n    	  }\r\n      }\r\n      catch(SQLException exception){\r\n    	  exception.printStackTrace();\r\n      }\r\n      finally{\r\n    	  ConnectionManager.closeResultSet(results);\r\n    		ConnectionManager.closeStatement(StudentQuery);\r\n    		ConnectionManager.closeConnection(connection);\r\n      }\r\n      return StudentList;\r\n}\r\n}					   ',20,10,'					   \r\n					   ',81,'81,84,80,81','韦慧卿,翁佳琦,张颖,华启磊',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6034,50,563,134,'import java.util.Scanner;\r\nimport java.util.InputMismatchException;\r\nclass Area{\r\n    int a;int b;int c;		\r\n    \r\n    Area(int a,int b,int c){\r\n    	this.a=a;this.b=b;this.c=c;\r\n    }\r\npublic void triangle(int a,int b,int c)\r\n{\r\n		this.a=a;this.b=b;this.c=c;\r\n	if(a+b<=c||a+c<=b||b+c<=a)\r\n	{\r\n		throw new IllegalArgumentException(\"不能构成这个三角形\");\r\n	}\r\n}\r\n	public double getArea(int a,int b,int c)\r\n	{\r\n		double p=(a+b+c)/2;\r\n	    double ans=p*(p-a)*(p-b)*(p-c);\r\n		return (Math.sqrt(ans));\r\n	}\r\n}\r\npublic class sjk {\r\nprivate int a,b,c;\r\n\r\n	public static void main(String[]args){\r\n    sjk area=new sjk();\r\n    int []n=new int[3];    \r\n    Area area1=new Area(n[0],n[1],n[2]);\r\n    Scanner s=new Scanner(System.in);\r\n    System.out.println(\"输入三角形的三条边,输入-2则停止\");\r\n    int[]m=new int[5];\r\n    try{	\r\n    	for(int i=0;i<5;i++){\r\n    		m[i]=s.nextInt();\r\n    		if (m[i]==-2)\r\n    			break;\r\n    		else n[i]=m[i];\r\n    	}\r\n         area1.triangle(m[0],m[1],m[2]);\r\n    }catch(InputMismatchException e1){\r\n    	System.out.println(\"异常：数据类型不匹配\");\r\n    }catch(ArrayIndexOutOfBoundsException e2){\r\n    	System.out.println(\"异常:数据个数不匹配\");\r\n    }catch(IllegalArgumentException e){\r\n    	System.out.println(e);\r\n    }\r\n    System.out.println(\"面积为：\"+area1.getArea(n[0],n[1],n[2]));\r\n    s.close();\r\n	}\r\n}					   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (6035,51,588,67,'D					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6036,51,588,68,'C				   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6037,51,588,106,'A					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6038,51,588,107,'C					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6039,51,588,108,'B					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6040,51,588,121,'D				   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6041,51,588,63,'one				   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6042,51,588,138,'Not Equal			   \r\n					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6043,51,588,55,'Not equal！10					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6044,51,588,57,'17 9 17 9					   \r\n					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6045,51,588,135,'import java.io.BufferedReader;\r\n\r\npublic class Test{\r\n\r\npublic static void main(String[] args){\r\n\r\nScanner input=nem Scanner(System.in);\r\n\r\n  int wordNumber=0;\r\n  int lineNumber=0;\r\n\r\nBufferedREader br=new BufferedReader(isr);\r\n\r\nwhile(br.read()>=0){\r\n\r\n  String s=br.readLine();\r\n  wordNumber+=s.split(\" \").length;\r\n  lineNumber++;\r\n}\r\n\r\nisr.close();\r\n\r\nSystem.out.println(\"单词数：\"+wordNumber+\"行数：\"+lineNumber);\r\n\r\n}\r\n}					   \r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (6046,51,588,136,'Package ex3;\r\nImport Java.sql.Connection;\r\n\r\npublic class StudentDao{\r\n\r\npublicintsearchByloginnameAndPassword(intloginname,String password)\r\n{\r\nprivate static final int loginname;\r\nprivate static final String password;\r\n\r\nScanner sc=new Scanner(System.in);\r\n\r\nSystem.out.print(\"用户名：\");\r\nIntloginname_in=sc.next();\r\n\r\nSystem.out.print(\"密码：\");\r\nString password+in=sc.next();\r\n\r\nIf(loginname_in.equals(loginname)&&password_in.equals(password)){\r\n\r\nSystem.out.println(\"1\");\r\n}\r\n\r\nelse{\r\nSystem.out.println(\"0\");\r\n}\r\n}\r\n\r\npublic Student searchByUsername(String username){\r\nConnection=ContectionManager.getConnection;\r\nTry{\r\nStudentQuery=connection.prepareStatement(loginname,password,username);\r\nbook.Student=Null;\r\nResultSet results=studentQuery.executeQuery();\r\nIf(results.next()){\r\nbook=new Student();\r\nbook.setLoginname(results.getString(\"loginname\"));\r\nbook.setUsername(results.getString(\"username\"));\r\n}\r\n}\r\n\r\n				   \r\n					   \r\n					   ',20,5,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6047,51,588,134,'public class Triangle{\r\npublic static void triangle(int a,int b,int c){	\r\nScanner sc=new Scanner（System.in);\r\nSystem.out.println(\"三条边的值：\");\r\n  int a=sc.nextInt();\r\n  int b=sc.nextInt();\r\n  int c=sc.nextInt();\r\nif(a+b>c&&b+c>a){\r\n  int p=(a+b+c)/2;\r\ngetArea(int a,int b,int c,double area){\r\n  double area=Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\nSystem.out.println(\"面积是：\"+area);}\r\nelse{\r\nthrow new IllegalArgumentException();\r\n}\r\n}			   \r\n	\r\nvoid main catch(int){\r\ncout<<\"a=\"<<a<<\",b=\"<<b<<\",c=\"\"<<c<<\",that is not a triangle!\"<<endl;}\r\n\r\n				   \r\n					   ',20,5,'					   ',0,'','',NULL),
 (6048,50,584,73,'		B			   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6049,50,584,74,'		A			   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6050,50,584,67,'		D			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6051,50,584,105,'D			   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6052,50,584,108,'	B				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6053,50,584,121,'D			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6054,50,584,137,'one two default				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6055,50,584,138,'		Equal			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6056,50,584,55,'		Not equal!   10			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6057,50,584,57,'17 9 17 9				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6058,50,584,135,'import java.util.Scanner\r\nimport java.io.BufferedReader\r\npublic class QL{\r\npublic static void main(String[] args) throws Exception{\r\n  Scanner in=new Scanner(System.in);\r\n  System.out.println(\"请输入路径\")\r\n    String path=in.next();\r\n    int wordsNumber=0;\r\n    int LineNumber=0;\r\nInputStreamReader r=new InputStreamReader(new FileInputstream(path));\r\nBufferedReader bu=new BufferdReader(r)\r\n   while(bu.read()=-1){\r\n    String s=bu.readLine();\r\n    wordsNumber+=s.split.length();\r\n    LineNumber++;\r\n}\r\nr.close();\r\nSystem.out.println(\"单词个数\"+wordsNumber+\"行数\"+LineNumber)\r\n}				   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (6059,50,584,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic  class StudentDao {\r\n	private Connection connection;\r\n	private PreparedStatement StudentQuery;\r\n	private ResultSet results;\r\n	public  int searchByLoginnameAndPassword(String loginname,String password)\r\n	{\r\n		int  a=0;\r\n		try{\r\n			con=ConnectionManager.getConnection();\r\n			StudentQuery=connection\r\n			    .prepareStatement(\"SELECT*from Student where password=? and loginname=?\");\r\n			StudentQuery.setString(1,loginname);\r\n			StudentQuery.setString(2,password);\r\n			ResultSet results=StudentQuery.executeQuery();		\r\n			if(results.next()){\r\n				a=1;\r\n			}\r\n		}catch(SQLException exception){\r\n			exception.printStackTrace();\r\n		}\r\n		finally{\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(StudentQuery);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		return a;	\r\n	}\r\n	public  List searchByUsername(String username)\r\n	{\r\n		List studentList=new ArrayList();\r\n		try{\r\n			connection=ConnectionManager.getConnection();\r\n			StudentQuery=connection.prepareStatement(\"SELECT*FROM Student where username like \'%\"+username+\"%\'\");\r\n		    ResultSet results=StudentQuery.executeQuery();\r\n		    while(results.next()){\r\n		    	Student student=new Student();\r\n		    	student.setid(results.getInt(1));\r\n		    	student.setloginname(results.getString(2));\r\n		    	student.setpassword(results.getString(3));\r\n		    	student.setusername(results.getString(4));\r\n		    	student.setage(results.getInt(5));\r\n		        studentList.add(s1);   	\r\n		    }\r\n		}catch(SQLException exception){\r\n			exception.printStackTrace();\r\n		}\r\n		finally{\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(StudentQuery);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		return studentList;\r\n	}\r\n\r\n}\r\n					   \r\n					   ',20,10,'					   ',81,'94,84,81','张钰成,翁佳琦,周璇',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6060,50,584,134,'import java.util.*;\r\npublic class triangle {\r\n    public int a,b,c;\r\n    public void triangle(int a,int b,int c){	\r\n    	if((a+b)<=c&&c-a>=b)\r\n    		throw new IllegalArgumentException(\"不能构成三角形！\");\r\n    	this.a=a;this.b=b;this.c=c;\r\n    }\r\n    public static double getArea(int a,int b,int c){\r\n    	double p=(a+b+c)/2;\r\n    	return (double)Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n    } \r\n    public static void main(String[]args){\r\n    	triangle t=new triangle();\r\n    	int a=0,b=0,c=0;\r\n    	double s;\r\n    	Scanner in=new Scanner(System.in);\r\n    	try{	\r\n    	        System.out.println(\"输入三角形的三条边长:\");\r\n    		a=in.nextInt();\r\n    		b=in.nextInt();\r\n    		c=in.nextInt();\r\n    		   if(a*b*c==0)throw new Exception(\"个数较少！\");\r\n    		   t.triangle(a,b,c);		   \r\n    	}catch(InputMismatchException e1){System.out.println(\"类型不匹配！\");\r\n    	}catch(IllegalArgumentException e2){System.out.println(e2.getMessage());\r\n    	}catch(Exception e3){System.out.println(e3.getMessage());}\r\n    	area=getArea(a,b,c);\r\n    	System.out.println(\"面积为：\"+s);\r\n    }\r\n}					   \r\n					   ',20,10,'					   ',92,'92','张钰成',NULL),
 (6061,51,590,67,'	D				   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6062,51,590,68,'				A	   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6063,51,590,106,'		A			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6064,51,590,107,'		C		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6065,51,590,108,'			B		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6066,51,590,121,'		D			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6067,51,590,63,'			one		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6068,51,590,138,'			Not Equal! 10		   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6069,51,590,55,'			Not equal!		   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6070,51,590,57,'			17 9 17 9		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6071,51,590,135,'			public class FileNumber {\r\n	public static void main(String[] args)\r\n	try{\r\n		File file=new File(\"java.txt\");\r\n		FileReader fileread=new FileReader(file);\r\n		BufferedReader bufferedreader1=new BufferedReader(bufferedreader1);\r\n		BufferedReader bufferedreader2=new BufferedReader(bufferedreader2);\r\n		int len=bufferedreader.read();\r\n		while (len>=0){\r\n			System.out.println(\"文件的字数：\"+len);\r\n			len=bufferedreader1.read();\r\n			}\r\n		bufferedreader1.close();\r\n		int linenum;\r\n		while(linenum>=0){\r\n			System.out.println(\"文件的行数：\"+linenum):\r\n				linenum=bufferedreader2.read();\r\n		}\r\n		bufferedreader2.close();\r\n	}catch(IOException e){\r\n		e.printStacktrace()\r\n	}\r\n}\r\n	}		   ',20,20,'					   ',0,'','',NULL),
 (6072,51,590,136,'			import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.*;\r\npublic class StudentDao {\r\n	private Connection connection;\r\n	private  PreparedStatement studentQuery; \r\n	private ResultSet results;\r\n	public int searchByLoginnameAndPossword(String loginname,String password){\r\n		try{\r\n			Connection.connectionManager.getConnection();\r\n			studentQuery=connection.prepareStatement(\"SELECT*FROM Student where loginname+\'\"+lognname+\"\'and password\'\" +passwod+“‘”）\r\n					ResultSet results=StudentQuery.executeQuery();\r\n			if(results.next()){\r\n				return 1;}\r\n			else return 0;\r\n			\r\n			}\r\n			catch  (SQLEception e){\r\n				e.printStackTrace();\r\n				}\r\n			\r\n                                return 0;\r\n			\r\n		}\r\n        public List SearchByusername(String username){\r\n               List studentList=new ArrayList();\r\n           try{\r\n                 connection=ConnectionManager.getConnection();\r\n                 studentQuery =connection.prepareStatement(\"SELECT*FROM Student where loginname like\'%\"+username+\"%\'ORDER BY username\");\r\n                 ResultSet results=StudentQuery.executeQuery();\r\n                while (results.next()){\r\n                 Student student =new student();\r\n                  studebt.setId(results.getString(\"Id\"));\r\n                   studebt.setloginname(results.getString(\"loginname\"));\r\n                   studebt.setpassward(results.getString(\"passward\"));\r\n                   studebt.setusername(results.getString(\"username\"));\r\n                   studebt.setAge(results.getInt(\"Age\"));\r\n                    studentList.add(student);\r\n                       }\r\n                    }\r\n                     catch (SQLException exception){\r\n                       exception.prinStackTrace();\r\n    finally{\r\n             ConnectionManager.closeResults(results);\r\n                                  ConnectionManager.closeStatement(studentQuery);\r\n                                 ConnectionManager.closeCnnection(connection);\r\n\r\n\r\n	}\r\n           return studentstudent;\r\n}		   ',20,10,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6073,51,590,134,'			import java.util.ArgumentException;\r\nimport java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\npublic class triangle {    \r\n	 int a;\r\n		int b;\r\n		int c; \r\n	triangle (int a;int b;int c; ){\r\n		this.a=a;\r\n		this.b=b;\r\n		this.c=c;\r\n		if(a+b<=c||b+c<=a||c+a<=b)\r\n			throw new illegalArgumentException(\"不能构成三角形\");}\r\n	double getArea（int a;int b;int c）{\r\n		int p=(a+b+c)/2\r\n                double area=Math.sqrt(p*(p-a)(p-b)(p-c));\r\n		System.out.println(\"三角形面积为：\"+area)；\r\n		return area；}\r\n	public static void main(String[] args){\r\n		Scanner scan=new Scanner(System.in);\r\n		try{\r\nint[] D=new int[3];\r\nfor(inti=0;i<3;i++){\r\n       d[i]=in.nextInt();}\r\n    triangle tri=new triangle (D[0],D[1],D[2]);\r\n\r\n        \r\n		}catch(InputMismatchException e1  ){\r\n			System.out.println(\"输入的不是整数\");\r\n		}catch(ArrayIndecOutOfBoundsException e2 ){\r\n			System.out.println(\"输入的数据个数有误\");\r\n		}		   ',20,15,'					   ',0,'','',NULL),
 (6074,51,591,67,'D		   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6075,51,591,68,'C	\r\n			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6076,51,591,106,'A		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6077,51,591,107,'C				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6078,51,591,108,'B				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6079,51,591,121,'D					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6080,51,591,63,'one					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6081,51,591,138,'Equal					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6082,51,591,55,'We are equal 					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6083,51,591,57,'17 9 17 9					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6084,51,591,135,'import java.io.BufferReader;\r\nimport java.io.FileReader;\r\nimport java.io.IoException;\r\n\r\nPublic class Count{\r\n       Public static void main(String[]args){\r\n           int x,y;\r\n           int word=0;\r\n           BufferReader sb=new BufferReader();\r\n           try{\r\n                BufferReader=new BufferReader();\r\n                Char[]ARRY=new char[]ARRY;\r\n                for (int x=0;x<ARRY.avaiable();x++)\r\n                      Sb.append(Integer.valueOf x);\r\n                for(int y=0;y<ARRY.avaiable();y++)\r\n                    Word++;\r\n              }\r\n               System.out.println(“ \\n文件行数:”+word);\r\n               System.out.println(“ \\n文件单词数:”+y);\r\n              }catch(IoException e){\r\n                   e.printstackTrace();\r\n              }finally{\r\n                        if(sb!=null){\r\n                            try{\r\n                                Sb.close();\r\n                                }catch(IoException e){\r\n                                   e.printstackTrace();\r\n                                   }\r\n                                 }\r\n                               }\r\n                              }\r\n \r\n\r\n					   ',20,20,'					   ',0,'','',NULL),
 (6085,51,591,136,'import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;	\r\nimport java.util.*;\r\npublic class StudentDemo{\r\n       private Connection connection;\r\n       private PreparedStatement StudentsQuery;\r\n       private ResultSet resultS;\r\n    public List getByUsername(string username){\r\n           try{\r\n               connection=ConnectionManager.getConnection();\r\n               StudentsQuery=connection.PreparedStatement(\"\'%\"+username+\"%\'\");\r\n               ResultSet resultS=StudentsQuery.executeQuery();\r\n               if (resultS.next){\r\n                   List =new Student(); \r\n                   student.setID=(result.getString(\"id\"));\r\n                   student.setLoginname=(result.getString(\"loginname\"));\r\n                   student.setPassword=(result.getString(\"password\"));\r\n                                }\r\n               }catch(SQLException e){\r\n                      e.printstackTrace;\r\n                     }return username;\r\n               }\r\n     public List getByLoginname And Password(int loginname,string password){\r\n            try{\r\n                connection=ConnectionManager.getConnection();\r\n               StudentsQuery=connection.PreparedStatement(\"\'%\"+username+\"%\'\");\r\n                 ResultSet resultS=StudentsQuery.executeQuery();\r\n               if (resultS.next){\r\n                   return  student\r\n                             }\r\n                     else return0;\r\n                 }catch(SQLException e){\r\n                      e.printstackTrace;\r\n                  }finally{\r\n                          ConnectionManager.closeResult(resultS);\r\n                          ConnectionManager.closeStatement(StudentsQuery);\r\n                          ConnectionManager.closeConnection( connection);\r\n                   }\r\n                  }\r\n\r\n\r\n                    \r\n\r\n\r\n\r\n\r\n						   ',20,5,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6086,51,591,134,'Import java.util.InputMismatchedException;\r\nImport java.Scanner;\r\nPublic class triangleDemo{\r\n     Public static void triangle{\r\n     int a,b,c;\r\n     Scanner in=new scanner(System.in);\r\n     System.out.println(“请输入三个数:”);\r\n     a=in.nextInt();\r\n     b=in.nextInt();\r\n     c=in.nextInt();\r\n     if( ((a+b)<=c )|((a+c)<=b )|((b+c)<=a ) ){\r\n          throw new IllegArgument Exception(“三条边不能构成三角形”)；\r\n      else\r\n          System.out.println(“三角形三条边为:”+a+”,”+b+”,”+c);\r\n       }\r\nPublic static void main(String[]args){\r\n      try{\r\n          triangle(a,b,c);\r\n          This.a=a;\r\n          This.b=b;\r\n          This.c=c;\r\n          }catch(IllegArgument Exception e){\r\n             System.out.println(“三边值异常:”+e.getMessage());\r\n          }catch(InputMismatchedException e){\r\n             System.out.println(“数据类型不匹配:”+e.getMessage());\r\n          }catch(Arithmetic Exception e){\r\n             System.out.println(“元素个数不满足要求:”+e.getMessage());\r\n          }finally{\r\n                   getArea(inta,intb,int c){\r\n                    int s;\r\n                    s=(a+b+c)/2;\r\n                   returnsqrt(s*(s-a)*(s-b)*(s-c) );\r\n              }\r\n         }\r\n}\r\n\r\n					   ',20,20,'					   ',0,'','',NULL),
 (6087,51,610,67,'		D			   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6088,51,610,68,'		C			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6089,51,610,106,'		A			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6090,51,610,107,'		C			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6091,51,610,108,'			C		   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6092,51,610,121,'	c				   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6093,51,610,63,'	one				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6094,51,610,138,'		Equal			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6095,51,610,55,'		Not equal! 10			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6096,51,610,57,'			17 9 17 9		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6097,51,610,135,'package atguigu.test;\r\nimport java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.TreeMap;\r\n\r\n    public class tat {\r\n       \r\n        public static TreeMap<Character, Integer> Pross(String str) {\r\n            char[] ARR = str.toARR();\r\n\r\n            TreeMap<Character, Integer> tt = new TreeMap<Character, Integer>();\r\n\r\n            for (int a = 0; a < ARR.length; a++) {\r\n                if (!tt.containsKey(ARR[a])) {\r\n                    tt.put(ARR[a], 1);\r\n                } else {\r\n                    int ct = tt.get(ARR[a]) + 1;\r\n                    tt.put(ARR[a], ct);\r\n                }\r\n            }\r\n            return tt;\r\n        }\r\n\r\n        public static void main(String[] args) {\r\n         	\r\n            int tri = 0;\r\n BufferedReader qq = null;\r\n            String str = \"\";\r\n            StringBuffer wbs  = new StringBuffer();\r\n            try {\r\n                qq = new BufferedReader(new FileReader(\"d:\\\\list.txt\"));\r\n                while ((str = qq.readLine()) != null) {\r\n                    wbs.append(str);\r\n                    ++tri;\r\n                }\r\n           \r\n                System.out.println( \"行数: \" + tri+\"内容: \" + wbs.toString());\r\n                TreeMap<Character, Integer> tt = Pross(wbs.toString());\r\n                System.out.println(\"统计数：\" + tt);\r\n            } catch (FileNotFoundException P) {\r\n                P.printStackTrace();\r\n            } catch (IOException P) {\r\n                P.printStackTrace();\r\n            } finally {\r\n                if (qq != null) {\r\n                    try {\r\n                        qq.close();\r\n                    } catch (IOException P) {\r\n                        P.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n',20,20,'					   ',0,'','',NULL),
 (6098,51,610,136,'				public class Students {\r\n    private int id;\r\n    private String passwords;\r\n    private String loginnames;\r\n	private int age;\r\n	public int getId() {\r\n		return id;\r\n	}\r\n	public void setId(int id) {\r\n		this.id = id;\r\n	}\r\n	public String getPasswords() {\r\n		return passwords;\r\n	}\r\n	public void setPasswords(String passwords) {\r\n		this.passwords = passwords;\r\n	}\r\n	public String getLoginnames() {\r\n		return loginnames;\r\n	}\r\n	public void setLoginnames(String loginnames) {\r\n		this.loginnames = loginnames;\r\n	}\r\n\r\n	Public int getage(){\r\n	Return age;\r\n}\r\n	Public void setage(int age){\r\n	this.age=age;\r\n}\r\n}\r\n\r\npackage com.dao;\r\n \r\npublic class StudentsDao{\r\n	\r\n	public int login(String loginnames, String passwords) {\r\n		DBconn.init();\r\n\r\n		boolean flag = false;\r\n\r\n		ResultSet rs = DBconn.selectSql(\"select * from students where loginnames=\'\"+loginnames+\"\' and passwords=\'\"+passwords+\"\'\");\r\n		while(rs.next()){\r\n			if(rs.getString(\"loginnames\").equals(loginnames)&&rs.getString(\"passwords\").equals(passwords)){\r\n				flag = true;\r\n			}\r\n		}\r\n		DBconn.closeConn();\r\n		return flag;\r\n	}\r\n	public List<Students> getStudentsAll(String loginnames) {\r\n		List<Students> list = new ArrayList<Students>();\r\n		DBconn.init();\r\n		ResultSet rs = DBconn.selectSql(select * from students where loginnames like \'%\"+loginnames+\"%\');\r\n		while(rs.next()){\r\n			Students students = new Students();\r\n			students.setId(rs.getInt(\"id\"));\r\n			students.setLoginnames(rs.getString(\"loginnames\"));\r\n			students.setPasswords(rs.getString(\"passwords\"));\r\n			students.setSex(rs.getString(\"sex\"));\r\n			list.add(students);\r\n		}\r\n		DBconn.closeConn();\r\n		return list;\r\n	}\r\n}\r\n\r\npackage com.servlet;\r\n \r\npublic class Denglstudentsvlet extends HttpServlet {\r\n	public int searchByLoginloginnamesAndPassword(int loginnames,String passwords){		\r\n		StudentsDao ud = new StudentsDao();		\r\n		return ud.login(loginnames, passwords);\r\n	}\r\n	public List<Students> searchByStudentsloginnames(String loginnames){\r\n		StudentsDao ud = new StudentsDaoImpl();\r\n		return ud.getStudentsAll(loginnames);\r\n	}\r\n \r\n}\r\n	   ',20,15,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6099,51,610,134,'				public class squre {\r\n    public static void main(String [] args)\r\n    {\r\n        Scanner in=new Scanner(System.in);\r\n        int b=3;\r\n        int juzhen[]=new int[b];\r\n        for(int j=0;j<juzhen.length;j++)\r\n        {\r\n            juzhen[j]=in.nextInt();\r\n        }\r\n        try\r\n        {\r\n            three(juzhen[0],juzhen[1],juzhen[2]);\r\n        }\r\n        catch (IllegalArgumentException t){\r\n            t.getMessage();\r\n            t.printStackTrace();\r\n        }\r\n        catch(Exception t){\r\n            t.printStackTrace();\r\n        }\r\n        finally{\r\n            in.close();\r\n        }\r\n        class square\r\n        {   int a;\r\n            int b;\r\n            int c;\r\n            public float square()/*求三角形面积*/\r\n            {\r\n                a=juzhen[0];\r\n                b=juzhen[1];\r\n                c=juzhen[2];\r\n                float s =(a+b+c)/2;\r\n                return (float) Math.sqrt(s*(s-a)*(s-b)*(s-c));\r\n               \r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n        square rct=new square();\r\n        System.out.println(\"三 角 形 的 面 积 是\"+rct.square());\r\n    }\r\n    public static  void  three(int a,int b,int c)\r\n    {\r\n        if(a+c>b&&a+b>c&&b+c>a)\r\n			System.out.println(\"可以构成三角形\");\r\n        else\r\n            throw new IllegalArgumentException(\"无法构成三角形\");\r\n    }\r\n}\r\n	   ',20,20,'					   ',0,'','',NULL),
 (6100,51,604,67,'D',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6101,51,604,68,'C				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6102,51,604,106,'A				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6103,51,604,107,'C			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6104,51,604,108,'C				   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6105,51,604,121,'C		   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6106,51,604,63,'one			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6107,51,604,138,'Equal				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6108,51,604,55,'Not equal! 10				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6109,51,604,57,'17 9 17 9			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6110,51,604,135,'import java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.TreeMap;\r\nimport java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.TreeMap;\r\nimport java.awat;\r\nimport java.util.*;\r\n\r\n    public class demaxiyayayayayya{\r\n        \r\n        public static TreeMap<Character, Integer> Pross(Shuzuing shuzu) {\r\n            char[] shurushuzu = shuzu.toShurushuzu();\r\n\r\n                       for (int x = 0; x < shurushuzu.length; x++) {\r\n                if (!zifudegeshu.containsKey(shurushuzu[x])) {\r\n                    zifudegeshu.put(shurushuzu[x], 1);\r\n                } else {\r\n                    int jishu = zifudegeshu.get(shurushuzu[x]) + 1;\r\n                    zifudegeshu.put(shurushuzu[x], jishu);\r\n                }\r\n            }\r\n            return zifudegeshu;\r\n        }\r\n\r\n        public static void main(Shuzuing[] args) {\r\n            BufferedReader br = null;\r\n            int hangshu = 0;\r\n            Shuzuing shuzu = \"\";\r\n            ShuzuingBuffer zifuhangshu  = new ShuzuingBuffer();\r\n            try {\r\n                br = new BufferedReader(new FileReader(\"c:\\\\1.txt\"));\r\n                while ((shuzu = br.readHangshu()) != null) {\r\n                    zifuhangshu.append(shuzu);\r\n                    ++hangshu;\r\n                }\r\n                System.out.println(\"wenjianhangshu: \" + hangshu);\r\n                System.out.println(\"wenjianneirong: \" + zifuhangshu.toShuzuing());\r\n                TreeMap<Character, Integer> zifudegeshu = Pross(zifuhangshu.toShuzuing());\r\n                System.out.println(\"zifutongjishujujieguo：\" + zifudegeshu);\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            } finally {\r\n                if (br != null) {\r\n                    try {\r\n                        br.close();\r\n                    } catch (IOException e) {\r\n                        // TODO Auto-generated catch block\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n					   ',20,20,'					   ',0,'','',NULL),
 (6111,51,604,136,'package com.entity;\r\n \r\npublic class User {\r\n    private int id;\r\n    private String name;\r\n    private String pwd;\r\n    private String sex;\r\n	public int getId() {\r\n		return id;\r\n	}\r\n	public void setId(int id) {\r\n		this.id = id;\r\n	}\r\n	public String getName() {\r\n		return name;\r\n	}\r\n	public void setName(String name) {\r\n		this.name = name;\r\n	}\r\n	public String getPwd() {\r\n		return pwd;\r\n	}\r\n	public void setPwd(String pwd) {\r\n		this.pwd = pwd;\r\n	}\r\n	public String getSex() {\r\n		return sex;\r\n	}\r\n	public void setSex(String sex) {\r\n		this.sex = sex;\r\n	}\r\n}\r\n\r\npackage com.dao;\r\n \r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n \r\nimport com.entity.User;\r\nimport com.util.DBconn;\r\n \r\npublic class UserDao{\r\n	\r\n	public boolean login(String name, String pwd) {\r\n		boolean flag = false;\r\n		DBconn.init();\r\n		ResultSet rs = DBconn.selectSql(\"select * from user where name=\'\"+name+\"\' and pwd=\'\"+pwd+\"\'\");\r\n		while(rs.next()){\r\n			if(rs.getString(\"name\").equals(name) && rs.getString(\"pwd\").equals(pwd)){\r\n				flag = true;\r\n			}\r\n		}\r\n		DBconn.closeConn();\r\n		return flag;\r\n	}\r\n	public List<User> getUserAll(String name) {\r\n		List<User> list = new ArrayList<User>();\r\n		DBconn.init();\r\n		ResultSet rs = DBconn.selectSql(select * from user where name like \'%\"+name+\"%\');\r\n		while(rs.next()){\r\n			User user = new User();\r\n			user.setId(rs.getInt(\"id\"));\r\n			user.setName(rs.getString(\"name\"));\r\n			user.setPwd(rs.getString(\"pwd\"));\r\n			user.setSex(rs.getString(\"sex\"));\r\n			list.add(user);\r\n		}\r\n		DBconn.closeConn();\r\n		return list;\r\n	}\r\n}\r\n\r\npackage com.servlet;\r\n \r\nimport com.dao.UserDao;\r\n \r\npublic class DengluServlet extends HttpServlet {\r\n	public String searchByLoginnameAndPassword(int name,String password){		\r\n		UserDao ud = new UserDao();		\r\n		return ud.login(name, pwd);\r\n	}\r\n	public List<User> searchByUsername(String name){\r\n		UserDao ud = new UserDaoImpl();\r\n		return ud.getUserAll(name);\r\n	}\r\n \r\n}	   ',20,5,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6112,51,604,134,' import java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.SanjiaoxingshuzuList;\r\nimport java.util.List;\r\n\r\nimport java.util.*;\r\npublic class test {\r\n    public static void main(String [] args)\r\n    {\r\n        Scanner in=new Scanner(System.in);\r\n        int n=3;\r\n        int sanjiaoxingshuzu[]=new int[n];\r\n        for(int i=0;i<sanjiaoxingshuzu.length;i++)\r\n        {\r\n            sanjiaoxingshuzu[i]=in.nextInt();\r\n        }\r\n        try\r\n        {\r\n            sanjiaoxing(sanjiaoxingshuzu[0],sanjiaoxingshuzu[1],sanjiaoxingshuzu[2]);\r\n        }\r\n        catch (IllegalArgumentException e){\r\n            e.gMessage();\r\n            e.printStackTrace();\r\n        }\r\n        catch(Exception e){\r\n            e.printStackTrace();\r\n        }\r\n        finally{\r\n            in.close();\r\n        }\r\n        class dedaoMianji\r\n        {   int x;\r\n            int y;\r\n            intz;\r\n            public float dedaoMianji()\r\n            {\r\n                x=sanjiaoxingshuzu[0];\r\n                y=sanjiaoxingshuzu[1];\r\n                z=sanjiaoxingshuzu[2];\r\n                float s =(x+z+y)/2;\r\n                return (float) Math.sqrt(s*(s-x)*(s-y)*(s-z));\r\n                \r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n        dedaoMianji zhijiao=new dedaoMianji();\r\n        System.out.println(\"面积为\"+zhijiao.dedaoMianji());\r\n    }\r\n    public static  void  sanjiaoxing(int a,int b,int c)\r\n    {\r\n        if(a+b<=c)\r\n            throw new IllegalArgumentException(\"三条边的长度条件不满足构成一个完整的三角形\");\r\n        if(a+c<=b)\r\n            throw new IllegalArgumentException(\"三条边的长度不可以构成一个合格完整的三角形\");\r\n       else\r\n            throw new IllegalArgumentException(\"三条边的长度条件不满足两边之长大于第三边，和两边之差小于第三边，所以不能构成三角形\");\r\n        else\r\n            System.out.println(\"这三条边不可以构成三角形，因为长度条件不满足\");\r\n    }\r\n}\r\n					   ',20,20,'					   ',0,'','',NULL),
 (6113,51,596,67,'		D			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6114,51,596,68,'					C   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6115,51,596,106,'A					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6116,51,596,107,'C				   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6117,51,596,108,'B					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6118,51,596,121,'D					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6119,51,596,63,'one					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6120,51,596,138,'Equal					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6121,51,596,55,'Not equal!					   ',4,0,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6122,51,596,57,'17 9 17 9					   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6123,51,596,135,'package homework3;\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.util.Scanner;\r\nimport static java.lang.System.*;\r\npublic class homework3 {\r\n public static void main(String[] args) throws Exception {\r\n  Scanner a = new Scanner(System.in);\r\n  String b = a.next();\r\n  int dc = 0;\r\n  int hs = 0;\r\n  InputStreamReader isr = new InputStreamReader(new FileInputStream(b));\r\n  \r\n  BufferedReader c = new BufferedReader(isr);\r\n \r\n  while(c.read()!=-1)\r\n  {\r\n   String s = c.readLine();\r\n  dc += s.split(\" \").length;\r\n   hs++;\r\n  }\r\n  isr.close();\r\n  out.println(\"word count \"+dc );\r\n  out.println(\"line count \"+hs); \r\n  }\r\n}					   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (6124,51,596,136,'package Test;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.sql.*;\r\n class Student {\r\n	private int id;\r\n	private String loginname;\r\n	private String password;\r\n	private String username;\r\n	private int age;  \r\n\r\n}\r\npublic class Test {\r\n	private Connection connection1;\r\n	private PreparedStatement StudentsQuery;\r\n	private ResultSet result;\r\n	public int searchByloginanameAndPassword(String loginname,String password) {\r\n		int cg=0;\r\n		connection1=ConnectionManager.getConnection();\r\n		StudentQuery=connection.prepareStatement(\"student loginname and password=?\");\r\n		StudentsQuery.setString(1,loginname);\r\n		StudentsQuery.setString(2,password);\r\n		ResultSet results=StudentsQuery.executeQuery;\r\n		if(results.next()) {\r\n			cg=1\r\n		}\r\n	return cg;\r\n	}\r\n	public  Student searchByUsername(String username) {\r\n		connection1=ConnectionManager.getConnection();\r\n		StudentQuery=connection.prepareStatement(\"SELECT*FORM Studentsinfo where%\"+username+\"%\");\r\n		ResultSet results=StudentsQuery.executeQuery;\r\n		while(results.next()) {\r\n			StudentsQuery studentinfo=new StudentsQuery();\r\n			studentinfo.setStudentsId(result.getInt(1));\r\n			studentinfo.setLoginname(results.getString(2));\r\n			studentinfo.setPassword(results.getString(3));\r\n		}\r\n	}\r\n}					   ',20,5,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6125,51,596,134,'package homework1;\r\nimport static java.lang.System.*;\r\nimport java.util.Scanner;\r\nimport java.util.InputMismatchException;\r\npublic class homework1 { \r\n public static void triangle() {\r\n  Scanner b1=new Scanner(System.in);\r\n  Scanner b2=new Scanner(System.in);\r\n  Scanner b3=new Scanner(System.in);\r\n  int a[]=new int[3];\r\n  a[0]=b1.nextInt();\r\n  a[1]=b2.nextInt();\r\n  a[2]=b3.nextInt();\r\n  if  ((a[0]+a[1]<=a[2])|(a[0]+a[2]<=a[1])|(a[1]-a[2]>=a[0])|(a[0]-a[1]>=a[2])|(a[0]-a[2]>=a[1])|(a[1]-a[2]>=a[0])) \r\n  throw  new  IllegalArgumentException();\r\n  else if (((int)a[0]!=a[0])&((int)a[1]!=a[1])&((int)a[2]!=a[2]))\r\n   throw new InputMismatchException();\r\n  else if(a.length<3)\r\n   throw new ArithmeticException();\r\n }\r\n  public static void main(String[] args){\r\n   try {\r\n    triangle();\r\n   }catch(IllegalArgumentException e) {\r\n    out.println(\"不能构成三角形！\");\r\n   }catch(InputMismatchException e) {\r\n    out.println(\"输入的不是整型数据！\");\r\n   }catch(ArithmeticException e) {\r\n    out.println(\"数据个数不满足要求！\");\r\n   }finally {\r\n    out.println(\"执行完毕！\");\r\n   }\r\n} \r\n  \r\n}					   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (6126,51,597,67,'d					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6127,51,597,68,'c					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6128,51,597,106,'a					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6129,51,597,107,'c					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6130,51,597,108,'b					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6131,51,597,121,'c					   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6132,51,597,63,'one			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6133,51,597,138,'Equal					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6134,51,597,55,'Not equal!10					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6135,51,597,57,'17 9 17 9					   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6136,51,597,135,'import java.io.FileReader;\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\npublic class F {\r\n	public static void main(String[] args) {\r\n		BufferedReader readb=null;\r\n		try{\r\n			readb=new BufferedReader(new FileReader(\"C:\\\\read.txt\"));\r\n			String line;\r\n			int linecount=0,wordcount=0;\r\n			while(null!=(line=readb.readLine())) {\r\n				linecount++;\r\n				String[] ss=line.split(\"\\\\s+\");\r\n				for(String s:ss) {\r\n					//System.out.println(s);      可以顺便用该语句查看检索过的单词\r\n					wordcount++;\r\n				}\r\n				System.out.println(\"行数=\"+linecount+\"  \"+\"单词数=\"+wordcount);\r\n			}\r\n		}catch(IOException e) {\r\n			e.printStackTrace();\r\n		}finally {\r\n			if(null!=readb) {\r\n				try {\r\n					readb.close();\r\n				}catch(IOException e) {\r\n					e.printStackTrace();\r\n				}\r\n			}\r\n		}\r\n	}\r\n}\r\n					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (6137,51,597,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic class StudentDao {\r\n	\r\n	//student对应的实体类（Student）省略\r\n	public class exce{\r\n		private Connection connection;\r\n		private PreparedStatement UserQuery;\r\n		private ResultSet results;\r\n		public int searchByLoginnameAndPassword(int loginname,String password){\r\n			int result=0;\r\n			try{\r\n				connection=ConnectionManager.getConnection();\r\n				UserQuery=connection.prepareStatement(\"SELECT*from Student where loginname=? and password=?\");\r\n				UserQuery.setString(2,password);\r\n				UserQuery.setInt(1,loginname);\r\n				ResultSet results=UserQuery.executeQuery();\r\n				if(results.next()){\r\n					result=1;\r\n				}\r\n			}\r\n			catch(SQLException exception){\r\n				exception.printStackTrace();\r\n			}\r\n			finally{\r\n				ConnectionManager.closeResultSer(results);\r\n				ConnectionManager.closeStatement(UserQuery);\r\n				ConnectionManager.closeConnection(connection);\r\n			}\r\n			return result;\r\n		}\r\n		public List searchByUsername(String username){\r\n			List theStudentlist=new ArrayList();\r\n			try{\r\n				connection=ConnectionManager.getConnecion();\r\n				UserQuery=connection.prepareStatement(\"SELECT*FROM Student where username like\'%+username+%\'\");\r\n				ResultSet results=UserQuery.executeQuery();\r\n				while(results.next()){\r\n					Student student=new Student();\r\n					student.setid(results.getInt(1));\r\n					student.setloginname(results.getString(2));\r\n					student.setpassword(results.getString(3));\r\n					Student.add(student);\r\n				}\r\n			}\r\n			catch(SQLException exception){\r\n				exception.printStackTrace();\r\n			}\r\n			finally{\r\n				ConnectionManager.closeResultSet(results);\r\n				ConnectionManager.closeStatement(UserQuery);\r\n				ConnectionManager.closeConnection(connection);\r\n			}\r\n			return Student;\r\n		}\r\n	}\r\n}					   \r\n					   ',20,5,'					   ',82,'83,82','翁佳琦,马芸芸',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6138,51,597,134,'package test5;\r\n\r\nimport java.util.*;\r\nimport java.util.InputMismatchException;\r\npublic class Triangle {\r\n	public static void getArea(int a,int b,int c) {\r\n		double d,s;\r\n		d=(a+b+c)/2;\r\n		s=Math.sqrt(d*(d-a)*(d-b)*(d-c));\r\n		System.out.println(\"Area=\"+s);\r\n	}\r\n	\r\n	\r\n	public static void main(String[] args) {\r\n		int a[]=new int[3];\r\n		Scanner b1=new Scanner(System.in);\r\n		Scanner b2=new Scanner(System.in);\r\n		Scanner b3=new Scanner(System.in);\r\n		System.out.print(\"a=\");\r\n		a[0]=b1.nextInt();\r\n		System.out.print(\"b=\");\r\n		a[1]=b2.nextInt();\r\n		System.out.print(\"c=\");\r\n		a[2]=b3.nextInt();\r\n		if(a[1]+a[2]<a[0] || a[0]+a[1]<a[2] || a[2]+a[0]<a[1]) {\r\n		throw new IllegalArgumentException();\r\n		}else if((int)a[0]!=a[0] || (int)a[1]!=a[1] || (int)a[2]!=a[2]) {\r\n			throw new InputMismatchException();\r\n		}else if(a.length<3) {\r\n			throw new ArithmeticException();\r\n		}\r\n		\r\n		try {\r\n			getArea(a[0],a[1],a[2]);\r\n		}catch(IllegalArgumentException e) {\r\n			System.out.println(\"无法构成三角形\");\r\n		}catch(InputMismatchException e1) {\r\n			System.out.println(\"输入类型不匹配（非整型）\");\r\n		}catch(ArithmeticException e2) {\r\n			System.out.println(\"输入数据量不足（三个）\");\r\n		}finally {\r\n			System.out.println(\"运行正常——\");\r\n		}\r\n	}\r\n}					   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (6139,50,575,73,'A			   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6140,50,575,74,'B			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6141,50,575,67,'D				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6142,50,575,105,'C		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6143,50,575,108,'B				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6144,50,575,121,'D				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6145,50,575,137,'one			   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6146,50,575,138,'Not equal',4,0,'					   ',0,NULL,NULL,NULL),
 (6147,50,575,55,'Not equal! 10',4,4,'					   ',0,NULL,NULL,NULL),
 (6148,50,575,57,'17 9 17 9   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6149,50,575,135,' import java.io.BufferedReader;\r\n import java.io.FileNotFoundException;\r\n import java.io.FileReader;\r\n import java.io.IOException;\r\n import java.util.TreeMap;\r\n \r\npublic class CDD {\r\n    public static TreeMap<Character, Integer> Pross(String str) {\r\n         char[] charArray = str.toCharArray();\r\n         TreeMap<Character, Integer> qwe = new TreeMap<Character, Integer>();\r\n         for (int x = 0; x < charArray.length; x++) {\r\n            if (!qwe.containsKey(charArray[x])) {\r\n                qwe.put(charArray[x], 1);\r\n            } else {\r\n                int count = qwe.get(charArray[x]) + 1;\r\n                qwe.put(charArray[x], count);\r\n            } }        return qwe;\r\n    }\r\n  public static void main(String[] args) {\r\n        BufferedReader asd = null;\r\n        int line = 0;\r\n        String str = \" \";\r\n        StringBuffer zxc  = new StringBuffer();\r\n        try {asd = new BufferedReader(new FileReader(\"c:\\\\1.txt\"));\r\n            while ((str = asd.readLine()) != null) {\r\n                sb.append(str);++line;\r\n            }\r\n         System.out.println(\"\\n文件行数: \" + line);\r\n         System.out.println(\"\\n文件内容: \" + zxc.toString());\r\n         TreeMap<Character, Integer> qwe = Pross(zxc.toString());\r\n            System.out.println(\"\\n字符统计结果为：\" + qwe);\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            if (asd != null) {\r\n                try {\r\n                    asd.close();\r\n                } catch (IOException e) {\r\n                    // TODO Auto-generated catch block\r\n                    e.printStackTrace();\r\n     }}}}}			   ',20,20,'					   ',0,'','',NULL),
 (6150,50,575,136,'import java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet; \r\nimport java.sql.SQLException;\r\nimport java.sql.Statement; \r\nimport java.util.Date; \r\nimport java.util.Scanner;\r\n\r\npublic class Student { \r\npublic  static final String driver=\"sun.jdbc.odbc.JdbcOdbcDriver\";\r\npublic  static final String url=\"jdbc:odbc:student\"; \r\npublic  static final String username=\"root\";//用户名\r\npublic  static final String password=\"root\";//密码\r\n\r\n\r\npriavte static String name;\r\nprivate Static int ui;\r\n\r\npublic Connection connection(){\r\n   try{\r\n        Class.forName(driver);\r\n        Connection  con=DriverManger.getConnection(url, username, password);\r\n        return con;\r\n       } catch (Exception e){\r\n           e.printStackTrace();\r\n       }\r\n       return null;\r\n}\r\npublic boolean login() throws Exception{\r\n   scanner dd=new Scanner(System.in);\r\n   System.out.print(\"输入用户名:\");\r\n   String uesrname=dd.next();\r\n   System.out.print(\"输入密码:\");\r\n   String password=dd.next();\r\n\r\n   String sql=\"select username,id from muser where username=\"+username+\"and password=\"+password+\" \";\r\nConnection connection=connection();\r\nStatement statement=connection.creatStatement();\r\nResultSet rs=statement.executeQuery(sql);\r\nif(rs.next()){\r\n  name=rs.getString(1);\r\n  userid=rs.getInt(2);\r\n  return ture;\r\n}\r\nreturn false;\r\n}\r\npublic void sdf(){\r\n  System.out.print(“请输入学生的姓名，密码，年龄，地址：”)；\r\n  Scanner scanner=new scanner(System.in);\r\nString[] str=scanner.next().aplit(\",\");\r\nPublic void checkstudent(String sno) throws SQLException{\r\n System.out.println(\" 学生列表:\")；\r\n System.out.println （\"学号\"+\"姓名\"+\"年龄\"+\"地址\"）;\r\n  \r\n\r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n			   ',20,15,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6151,50,575,134,'public void CDE(int a,int b ,int c)\r\npublic boolean judge() ;\r\npublic void Triangle（）{\r\nint a；int b；int c；}\r\npackage triangle;\r\nimport java.lang.*;\r\nimport java.util.Arrays;\r\nimport java.util.Scanner;\r\npublic class Triangle {\r\n	public void triangle(int a, int b, int c) throws IllegalArgumentException {\r\n		if ((a + b > c) && (c - a < a))\r\n			System.out.println(a + \",\" + b + \",\" + c);\r\n		else\r\n			throw new IllegalArgumentException();\r\n	}\r\n}\r\npublic class triangle{\r\n private double a=0;\r\n private double b=0;\r\n private double c=0;\r\n private double s=0;\r\n\r\npublic class Main {\r\n      public static void main(String srgs[]) {\r\n            int arr[] = new int[3];\r\n              Scanner input = new Scanner(System.in);\r\n              System.out.println(\"请输入三角形三条边：\");\r\n              try {a+b<c}			\r\n         Arrays.sort(arr);\r\n        Triangle triangle = new Triangle();\r\n        triangle.triangle(arr[0], arr[1], arr[2]);\r\n     } \r\n     catch (IllegalArgumentException e) {\r\n     System.err.println(\"不能构成三角形\");\r\n     e.printStackTrace();\r\npublic void getS(){\r\n   double p=(a+b+c)/2;\r\n   s=Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n  System.out.println(\"面积为：\"+s);}\r\n		}\r\n	  }\r\n}\r\n\r\n\r\n			   ',20,20,'					   ',0,'','',NULL),
 (6152,51,609,67,'		D			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6153,51,609,68,'		C			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6154,51,609,106,'			A		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6155,51,609,107,'			C		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6156,51,609,108,'			C		   ',4,0,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6157,51,609,121,'		C			   ',4,0,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6158,51,609,63,'			one		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6159,51,609,138,'				Equal	   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6160,51,609,55,'				Not equql! 10	   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6161,51,609,57,'		17 9 17 9			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6162,51,609,135,'					package atguigu.test;\r\nimport java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.TreeMap;\r\n//bufferedreader的readline（）方法是阻塞式的，如果到达流末尾，就返回null\r\n//但如果client的socket未经关闭就销毁，则会产生IO异常，正常的方法就是使用\r\n//socket.close()关闭不需要的socket\r\n\r\n    public class test_ultimate2 {\r\n        // 统计数字或者字符出现的次数\r\n        public static TreeMap<Character, Integer> Pross(String str) {\r\n            char[] charArray = str.toCharArray();\r\n\r\n            TreeMap<Character, Integer> tm = new TreeMap<Character, Integer>();\r\n\r\n            for (int x = 0; x < charArray.length; x++) {\r\n                if (!tm.containsKey(charArray[x])) {\r\n                    tm.put(charArray[x], 1);\r\n                } else {\r\n                    int count = tm.get(charArray[x]) + 1;\r\n                    tm.put(charArray[x], count);\r\n                }\r\n            }\r\n            return tm;\r\n        }\r\n\r\n        public static void main(String[] args) {\r\n            BufferedReader br = null;\r\n            int line = 0;\r\n            String str = \"\";\r\n            StringBuffer sb  = new StringBuffer();\r\n            try {\r\n                br = new BufferedReader(new FileReader(\"c:\\\\1.txt\"));\r\n                while ((str = br.readLine()) != null) {\r\n                    sb.append(str);\r\n                    ++line;\r\n                }\r\n                System.out.println(\"文件行数: \" + line);\r\n                System.out.println(\"文件内容: \" + sb.toString());\r\n                TreeMap<Character, Integer> tm = Pross(sb.toString());\r\n                System.out.println(\"字符统计结果为：\" + tm);\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            } finally {\r\n                if (br != null) {\r\n                    try {\r\n                        br.close();\r\n                    } catch (IOException e) {\r\n                        // TODO Auto-generated catch block\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (6163,51,609,136,'		Import java.util.*;\r\nImport java.calendar;\r\nImport java.awat;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Student {\r\n    public int identities;\r\n    public String mingzi;\r\n    public String dengluming;\r\n    public String xingbie;\r\n	public int getIdentities() {\r\n		return identities;\r\n	}\r\n	public void setIdentities(int identities) {\r\n		this.identities = identities;\r\n	}\r\n	public String getMingzi() {\r\n		return mingzi;\r\n	}\r\n	public void setMingzi(String mingzi) {\r\n		this.mingzi = mingzi;\r\n	}\r\n	public String getDengluming() {\r\n		return dengluming;\r\n	}\r\n	public void setDengluming(String dengluming) {\r\n		this.dengluming = dengluming;\r\n	}\r\n	public String getXingbie() {\r\n		return xingbie;\r\n	}\r\n	public void setXingbie(String xingbie) {\r\n		this.xingbie = xingbie;\r\n	}\r\n}\r\n\r\npackage com.student__dao;\r\n \r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nImport java.util.*;\r\nImport java.calendar;\r\nImport java.awat;\r\n\r\nimport java.util.List;\r\n \r\nimport com.entity.Student____s;\r\nimport com.util.DBconn;\r\n \r\npublic class Student____sDao{\r\n	\r\n	public boolean login(String mingzi, String dengluming) {\r\n		boolean flag = false;\r\n		DBconn.init();\r\n		ResultSet ruizhi = DBconn.selectSql(\"select * from student____s where mingzi=\'\"+mingzi+\"\' and dengluming=\'\"+dengluming+\"\'\");\r\n		while(ruizhi.next()){\r\n			if(ruizhi.getString(\"mingzi\").equals(mingzi) && ruizhi.getString(\"dengluming\").equals(dengluming)){\r\n				flag = true;\r\n			}\r\n		}\r\n		DBconn.closeConn();\r\n		return flag;\r\n	}\r\n	public List<Student____s> getStudent____sAll(String mingzi) {\r\n		List<Student____s> biao = new ArrayList<Student____s>();\r\n		DBconn.init();\r\n		ResultSet ruizhi = DBconn.selectSql(select * from student____s where mingzi like \"+mingzi+\");\r\n		while(ruizhi.next()){\r\n			\r\n			student.setIdentities(ruizhi.getInt(\"identities\"));\r\nStudent student = new Student();\r\n            student.setDengluming(ruizhi.getString(\"dengluming\"));\r\n\r\n			student.setMingzi(ruizhi.getString(\"mingzi\"));\r\n			student.setXingbie(ruizhi.getString(\"xingbie\"));\r\n			biao.add(student);\r\n		}\r\n		DBconn.closeConn();\r\n		return biao;\r\n	}\r\n}\r\n\r\npackage com.servlet;\r\n \r\nimport com.dao.Student____sDao;\r\n \r\npublic class Denglstudent____svlet extends HttpServlet {\r\n	public String searchByLoginmingziAndPassword(int mingzi,String password){		\r\n		Student____sDao ud = new Student____sDao();		\r\n		return ud.login(mingzi, dengluming);\r\n	}\r\n	public List<Student____s> searchByStudent____smingzi(String mingzi){\r\n		Student____sDao ud = new Student____sDaoImpl();\r\n		return ud.getStudent____sAll(mingzi);\r\n	}\r\n \r\n}\r\npublic class Student {\r\n    public int identities;\r\n    public String xing_ming;\r\n    public String pass___word;\r\n    public String xing_bie;\r\n	public int getIdentities() {\r\n		return identities;\r\n	}\r\n	public void setIdentities(int identities) {\r\n		this.identities = identities;\r\n	}\r\n	public String getXing_ming() {\r\n		return xing_ming;\r\n	}\r\n	public void setXing_ming(String xing_ming) {\r\n		this.xing_ming = xing_ming;\r\n	}\r\n	public String getPass___word() {\r\n		return pass___word;\r\n	}\r\n	public void setPass___word(String pass___word) {\r\n		this.pass___word = pass___word;\r\n	}\r\n	public String getXing_bie() {\r\n		return xing_bie;\r\n	}\r\n	public void setXing_bie(String xing_bie) {\r\n		this.xing_bie = xing_bie;\r\n	}\r\n}\r\n\r\npackage com.dao;\r\n \r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n \r\nimport com.entity.Student____s;\r\nimport com.util.DBconn;\r\n \r\npublic class Student____sDao{\r\n	\r\n	public boolean login(String xing_ming, String pass___word) {\r\n		boolean flag = false;\r\n		DBconn.init();\r\n		ResultSet ruizhi = DBconn.selectSql(\"select * from student____s where xing_ming=\'\"+xing_ming+\"\' and pass___word=\'\"+pass___word+\"\'\");\r\n		while(ruizhi.next()){\r\n			if(ruizhi.getString(\"xing_ming\").equals(xing_ming) && ruizhi.getString(\"pass___word\").equals(pass___word)){\r\n				flag = true;\r\n			}\r\n		}\r\n		DBconn.closeConn();\r\n		return flag;\r\n	}\r\n	public List<Student____s> getStudent____sAll(String xing_ming) {\r\n		List<Student____s> biao = new ArrayList<Student____s>();\r\n		DBconn.init();\r\n		ResultSet ruizhi = DBconn.selectSql(select * from student____s where xing_ming like \"+xing_ming+\");\r\n		while(ruizhi.next()){\r\n			Student student = new Student();\r\n			student.setIdentities(ruizhi.getInt(\"identities\"));\r\n			student.setXing_ming(ruizhi.getString(\"xing_ming\"));\r\n			student.setPass___word(ruizhi.getString(\"pass___word\"));\r\n			student.setXing_bie(ruizhi.getString(\"xing_bie\"));\r\n			biao.add(student);\r\n		}\r\n		DBconn.closeConn();\r\n		return biao;\r\n	}\r\n}\r\n\r\npackage com.servlet;\r\n \r\nimport com.dao.Student____sDao;\r\n \r\npublic class Denglstudent____svlet extends HttpServlet {\r\n	public String searchByLoginxing_mingAndPassword(int xing_ming,String password){		\r\n		Student____sDao ud = new Student____sDao();		\r\n		return ud.login(xing_ming, pass___word);\r\n	}\r\n	public List<Student____s> searchByStudent____sxing_ming(String xing_ming){\r\n		Student____sDao ud = new Student____sDaoImpl();\r\n		return ud.getStudent____sAll(xing_ming);\r\n	}\r\n \r\n}\r\n',20,10,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6164,51,609,134,'					   package atguigu.test;\r\nimport java.util.*;\r\npublic class test_ultimate {\r\n    public static void main(String [] args)\r\n    {\r\n        Scanner in=new Scanner(System.in);\r\n        int n=3;\r\n        int array[]=new int[n];\r\n        for(int i=0;i<array.length;i++)\r\n        {\r\n            array[i]=in.nextInt();\r\n        }\r\n        try\r\n        {\r\n            triangle(array[0],array[1],array[2]);\r\n        }\r\n        catch (IllegalArgumentException e){\r\n            e.getMessage();\r\n            e.printStackTrace();\r\n        }\r\n        catch(Exception e){\r\n            e.printStackTrace();\r\n        }\r\n        finally{\r\n            in.close();\r\n        }\r\n        class getArea\r\n        {   int a;\r\n            int b;\r\n            int c;\r\n            public float getArea()\r\n            {\r\n                a=array[0];\r\n                b=array[1];\r\n                c=array[2];\r\n                float s =(a+b+c)/2;\r\n                return (float) Math.sqrt(s*(s-a)*(s-b)*(s-c));\r\n                /*& if (a + b > c && a + c > b && b + c > a) {\r\n                     System.out.println(\"三角形面积=\"+ S);\r\n                 }*/\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n        getArea rct=new getArea();\r\n        System.out.println(\"面积为\"+rct.getArea());\r\n    }\r\n    public static  void  triangle(int a,int b,int c)\r\n    {\r\n        if(a+b<=c)\r\n            throw new IllegalArgumentException(\"三条边不能构成三角形\");\r\n        if(a+c<=b)\r\n            throw new IllegalArgumentException(\"三条边不能构成三角形\");\r\n        if(b+c<=a)\r\n            throw new IllegalArgumentException(\"三条边不能构成三角形\");\r\n        else\r\n            System.out.println(\"可以构成三角形\");\r\n    }\r\n}\r\n',20,20,'					   \r\n					   ',0,'','',NULL),
 (6165,51,599,67,'d',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6166,51,599,68,'c					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6167,51,599,106,'a			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6168,51,599,107,'c   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6169,51,599,108,'b					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6170,51,599,121,'d			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6171,51,599,63,'one   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6172,51,599,138,'Equal',4,4,'					   ',0,NULL,NULL,NULL),
 (6173,51,599,55,'Not equal! 10',4,4,'					   ',0,NULL,NULL,NULL),
 (6174,51,599,57,'17 9 17 9			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6175,51,599,135,'package com.homework.homework;\r\n\r\nimport java.io.*;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class Test009 {\r\n    public static void main(String[] args){\r\n        int count = 0;\r\n        int len=0;\r\n        File f = new File(\"d:/text.txt\");\r\n        String s = \"\";\r\n        StringBuffer sb = new StringBuffer();\r\n        try {\r\n            BufferedReader br = new BufferedReader(new FileReader(f));\r\n\r\n            while((s=br.readLine())!=null){\r\n            sb.append(s+\'\\n\');\r\n            len++;\r\n            }br.close();\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        Pattern p = Pattern.compile(\"\\\\b[a-zA-Z]+\\\\b\");//正则表达式\r\n        Matcher m = p.matcher(sb.toString());\r\n        while(m.find()){\r\n            count++;\r\n        }\r\n        System.out.println(\"总共\"+count+\"个单词\");\r\n        System.out.println(\"总共\"+len+\"行\");\r\n    }\r\n}',20,20,'					   ',0,'','',NULL),
 (6176,51,599,136,'package com.homework.homework;\r\nimport java.sql.*;\r\nimport java.util.*;\r\n\r\nclass Student{\r\n    private int id;\r\n    private String loginname;\r\n    private String password;\r\n    private String username;\r\n    private int age;\r\n\r\n    public void setId(int id){\r\n    this.id=id;\r\n    }\r\n    public void setLoginname(String loginname){\r\n        this.loginname=loginname;\r\n    }\r\n    public void setPassword(String password){\r\n        this.password=password;\r\n    }\r\n    public void setUsername(String username){\r\n        this.username=username;\r\n    }\r\n    public void setAge(int age){\r\n        this.age=age;\r\n    }\r\n\r\n    public int getId(){\r\n        return id;\r\n    }\r\n    public String getLoginname(){\r\n        return loginname;\r\n    }\r\n    public String getPassword(){\r\n        return password;\r\n    }\r\n    public String getUsername(){\r\n        return username;\r\n    }\r\n    public int getAge(){\r\n        return age;\r\n    }\r\n}\r\nclass StudentDao{\r\n    public int searchByLoginnameAndPassword(String loginname,String password){\r\n        Connection conn=null;\r\n        Statement stmt=null;\r\n        ResultSet rs = null;\r\n        try {\r\n            Class.forName(\"com.mysql.jdbc.Driver\");\r\n            conn= DriverManager.getConnection(url, user, password);//登陆信息\r\n            stmt=conn.createStatement();\r\n            String sql=\"select loginname,password from student\";\r\n            rs = stmt.executeQuery(sql);\r\n            while(rs.next()){\r\n                if(rs.getString(\"loginname\").equals(loginname)&&rs.getString(\"password\").equals(password)){\r\n                    return 1;\r\n                }\r\n            }\r\n        } catch (ClassNotFoundException e) {\r\n            e.printStackTrace();\r\n        } finally{\r\n            if(rs!=null){\r\n                try{\r\n                    rs.close();\r\n                }catch(Exception e){\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public List<Student> searchByUsername(String username){\r\n        Connection conn=null;\r\n        Statement stmt=null;\r\n        ResultSet rs = null;\r\n        List<Student> list=new ArrayList<Student>();\r\n        try {\r\n            Class.forName(\"com.mysql.jdbc.Driver\");\r\n            conn= DriverManager.getConnection(url, user, password);//登陆信息\r\n            stmt=conn.createStatement();\r\n            String sql=\"select id,loginname,password,username,age from student where username=username\";\r\n            rs = stmt.executeQuery(sql);\r\n            while(rs.next()){\r\n                Student S=new Student();\r\n                S.setId(rs.getInt(\"id\"));\r\n                S.setLoginname(rs.getString(\"loginname\"));\r\n                S.setPassword(rs.getString(\"password\"));\r\n                S.setUsername(rs.getString(\"username\"));\r\n                S.setAge(rs.getInt(\"age\"));\r\n                list.add(S);\r\n            }\r\n        } catch (ClassNotFoundException e) {\r\n            e.printStackTrace();\r\n        }finally{\r\n            if(rs!=null){\r\n                try{\r\n                    rs.close();\r\n                }catch(Exception e){\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n}\r\nclass Test007{\r\n    public static void main(String[] args){\r\n        \r\n    }\r\n}		   ',20,10,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6177,51,599,134,'package com.homework.homework;\r\n\r\nimport java.util.Scanner;\r\n\r\nclass MyException extends Exception{\r\n  private String myString;\r\n  public MyException(String myString){\r\n    this.myString=myString;\r\n  }\r\n  public String getMyString(){\r\n    return myString;\r\n  }\r\n  @Override\r\n  public String toString(){\r\n    return myString;\r\n  }\r\n}\r\n\r\nclass ExceptionTest{\r\n  public static void main(String[] args){\r\n    double a,b,c;\r\n    Scanner scan=new Scanner(System.in);\r\n    System.out.println(\"请输入边a\");\r\n    a=scan.nextDouble();\r\n    System.out.println(\"请输入边b\");\r\n    b=scan.nextDouble();\r\n    System.out.println(\"请输入边c\");\r\n    c=scan.nextDouble();\r\n    scan.close();\r\n    double p=(a+b+c)/2;\r\n    try{\r\n      if(a+b<=c||a+c<=b||b+c<=a){\r\n        throw new MyException(\"无法构成三角形！\");\r\n      }\r\n      else\r\n        System.out.println(\"三角形面积=\"+Math.sqrt(p*(p-a)*(p-b)*(p-c)));\r\n    }catch(MyException e){\r\n      System.out.println(e);\r\n    }\r\n  }\r\n}',20,20,'					   ',0,'','',NULL),
 (6178,51,603,67,'					D   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6179,51,603,68,'					   C',4,4,'					   ',0,NULL,NULL,NULL),
 (6180,51,603,106,'					   A',4,4,'					   ',0,NULL,NULL,NULL),
 (6181,51,603,107,'					   C',4,4,'					   ',0,NULL,NULL,NULL),
 (6182,51,603,108,'					   C',4,0,'					   ',0,NULL,NULL,NULL),
 (6183,51,603,121,'					  C ',4,0,'					   ',0,NULL,NULL,NULL),
 (6184,51,603,63,'		one					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6185,51,603,138,'				Equal		  		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6186,51,603,55,' Not equal! 10',4,4,'					   ',0,NULL,NULL,NULL),
 (6187,51,603,57,'		17 9 17 9			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6188,51,603,135,'private void analysis() {\r\nString str = \" \";\r\nint words = 0;\r\nint chars = 0;\r\nint lines = 0;\r\nint spaces = 0;\r\nint marks = 0;\r\nint character = 0;\r\n\r\nString filename = et_name.getText().toString();\r\nFileInputStreamfis = null;\r\nBufferedReaderbr = null;\r\ntry {\r\n    if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {\r\n        File file = new File(Environment.getExternalStorageDirectory().getCanonicalPath() + \"/\" + filename + \".txt\");\r\n    if (file.exists()) {\r\nfis = new FileInputStream(file);\r\nbr = new BufferedReader(new InputStreamReader(fis));\r\n    while ((str = br.readLine()) != null) {\r\n    char[] b = str.toCharArray();\r\n    for (inti = 0; i<str.length(); i++) {\r\n    if (b[i] == \' \') {\r\n        spaces++;\r\n                    } else if (b[i] == \',\' || b[i] == \'.\') {\r\n                        marks++;\r\n\r\n                    }\r\n                }\r\n                words += str.split(\"[ \\\\.,]\").length;\r\n                chars += str.length();\r\n                lines++;\r\n            }\r\n            character = chars - (spaces + marks);\r\nfis.close();\r\n\r\ntv_read.setText(\"单词数：\" + words + \",字符数：\" + chars + \",行数：\" + lines + \",字母数：\" + character + \",空格数：\" + spaces + \"，标点符号数：\" + marks);\r\n        } else {\r\nToast.makeText(this, \"不存在该文件\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\n}\r\n			   ',20,20,'					   ',0,'','',NULL),
 (6189,51,603,136,'import java.sql.*; import java.util.ArrayList; import java.util.List;\r\n\r\npublic class Ex04 {\r\n\r\nprivate Connection connection;\r\n\r\nprivate PreparedStatementUserQuery; private ResultSet results;\r\n\r\npublic intgetByUserAndPwd(String username,String password){\r\n\r\nint result=0; try {\r\n\r\nconnection = ConnectionManager.getConnction(); UserQuery = connection\r\n\r\n.prepareStatement(\\and password=?\\\r\n\r\nUserQuery.setString(1,username);\r\n\r\nUserQuery.setString(2,password);\r\n\r\nResultSet results = UserQuery.executeQuery(); if(results.next()) { }\r\n\r\nresult=1;\r\n\r\n}\r\n\r\ncatch (SQLException exception) {\r\n\r\nexception.printStackTrace(); }\r\n\r\nfinally { ConnectionManager.closeResultSet(results);\r\n\r\nConnectionManager.closeStatement(UserQuery); ConnectionManager.closeConnection(connection);\r\n\r\n}\r\n\r\nreturn result;\r\n\r\n}\r\n\r\npublic List getByUser(String username) { List UserList = new ArrayList();\r\n\r\ntry { connection = ConnectionManager.getConnction();\r\n\r\nUserQuery = connection\r\n\r\n.prepareStatement(\\\r\n\r\nlike \'%\\\r\n\r\nResultSet results = UserQuery.executeQuery(); // 读取行数据 while (results.next()) {\r\n\r\nUserInfouserinfo=newstudent();\r\n',20,5,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6190,51,603,134,'TestClass.java\r\nimport java.util.Scanner;\r\n\r\nimport org.omg.Messaging.SyncScopeHelper;\r\n\r\npublic class TestClass {\r\n\r\n	public static void main(String[] args)\r\n		Scanner sc=new Scanner(System.in);\r\n		int  a=sc.nextInt();\r\n		int  b=sc.nextInt();\r\n		int  c=sc.nextInt();\r\n		Test  ts=new Test();\r\n		ts.triangle(a, b, c);\r\n	}\r\n\r\n}\r\nTest.java\r\n\r\nimport java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\n\r\npublic class Test {\r\n	void triangle(inta,intb,int c){\r\n		try{\r\n		if((a+b>c&&a-b<c)||(a+c>b&&a-c<b||b+c>a&&b-c<a)){\r\n			System.out.println(\"能构成三角形\");\r\n		}\r\n		}\r\n		catch (Exception e) {\r\n			// TODO: handle exception\r\n			e.printStackTrace();\r\n			System.out.println(\"不能构成三角形\");\r\n		}\r\n	}\r\n	\r\n}\r\n				   ',20,20,'					   ',0,'','',NULL),
 (6191,51,600,67,'D					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6192,51,600,68,'C				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6193,51,600,106,'A				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6194,51,600,107,'C					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6195,51,600,108,'B					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6196,51,600,121,'D					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6197,51,600,63,'one					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6198,51,600,138,'Equla				   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6199,51,600,55,'Not equla! 10					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6200,51,600,57,'	17 9 17 9				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6201,51,600,135,'import java.io.BufferedReader;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\npublic class UnicodeStatistics {\r\n        public static void main(String[] args) throws Exception{\r\n	Scanner input=new Scanner(System.in);\r\n	System.out.println(\"请输入文本文件所在的位置\"); \r\n	String path=input.next();\r\n	int wordsCount= 0;\r\n	int rowCount = 0;\r\n	\r\n	BufferedReader br = new BufferedReader(new FileReader(path));\r\n	\r\n	try{    \r\n        String hang;\r\n	    while ( (line = br.readLine()) != null)\r\n	{  \r\n            wordsCount +=hang.split(\" \").num;\r\n	    rowCount ++;\r\n}	     \r\n} \r\n         catch(IOException ioe)\r\n	{     System.out.println(ioe); }\r\n\r\n	br.close();\r\n	System.out.println(\"\\t单词数:\"+wordsCount+\"行数:\"+rowCount); \r\n}\r\n}\r\n			   ',20,20,'					   ',0,'','',NULL),
 (6202,51,600,136,'					   ',20,0,'					   ',100,'100','魏宗邦',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6203,51,600,134,'package 异常;\r\nimport java.util.*;\r\n	publicclassjudgment {\r\n	void triangle(int a,int b,int c) throws Exception\r\n{\r\n	if((a+b)>c&&(a+c)>b&&(c+b)>a)\r\n	System.out.println(\"此数组能构成三角形\");\r\n		else\r\n	thrownew Exception();\r\n}\r\n}\r\npublic class Test {\r\n	public static void main(String[] args) {\r\n		Scanner in =new Scanner(System.in);\r\n		int x,y,z;\r\n		System.out.println(\"请输入三角形的三条边：\");\r\n		judgment j=new judgment();\r\n		try\r\n		{	x=in.nextInt();\r\n			y=in.nextInt();\r\n			z=in.nextInt();\r\n			j.triangle(x,y,z);\r\n		}\r\n		catch(InputMismatchException e1)\r\n		{	\r\n			System.err.println(\"请输入整数\");\r\n		}\r\n		catch(Exception e)\r\n		{	\r\n			System.err.println(\"此数组不能构成三角形\");\r\n		}\r\n		finally{\r\n			System.out.print(\"结束！\");\r\n}\r\n		\r\n}\r\n\r\n}\r\n\r\n	   ',20,20,'					   ',0,'','',NULL),
 (6204,51,607,67,'			D		   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6205,51,607,68,'			C		   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6206,51,607,106,'		A			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6207,51,607,107,'			C		   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6208,51,607,108,'			B		   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6209,51,607,121,'			D		   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6210,51,607,63,'				one	   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6211,51,607,138,'	Equal				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6212,51,607,55,'		Not eauql！10			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6213,51,607,57,'				17 9 17 9	   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6214,51,607,135,'import java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.util.Scanner;// 头文件，进入Java编程，奇妙的世界就此打开\r\n\r\npublic class zifuliutongji {   //定义类  字符流统计\r\n	public static void main(String[] args) throws Exception{\r\n	Scanner input=new Scanner(System.in);\r\n	System.out.println(\"请输入文件位置\"); //输出文字“请输入文本文件位置”\r\n	\r\n	String path=input.next();\r\n	int wnzcp= 0;     //初始化wnzcp为0\r\n	int lnzcp = 0;    //初始化lnzcp为0\r\n        int wczcp＝0;\r\n	\r\n	BufferedReader br = new BufferedReader(new FileReader(path));\r\n	}\r\n	\r\n        try{    String hangshu;\r\n	while ( (li = br.readLine()) != null)\r\n	{wnzcp +=hangshu.split(\" \").changdu;\r\n	lnzcp ++;  //进行linenu输入\r\n        }} \r\n	\r\n\r\n         catch(IOException ioe)  //捕捉catch ioe，对文本进行解读\r\n	{     System.out.println(ioe); }\r\n\r\n	\r\n\r\n	br.close();//close br窗口，从而进行下一步操作\r\n	System.out.println(\"\\t单词数:\"+wnzcp+\"行 数:\"+lnzcp\"); //输出结果单词个数以及行数，简单明了，一目了然\r\n}\r\n}\r\n\r\n					   ',20,20,'					   ',0,'','',NULL),
 (6215,51,607,136,'					import java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.util.Scanner;// 头文件，进入Java编程\r\n\r\n public class Student {\r\n	private int id;\r\n	private String loginname;//登录名\r\n	private String password;//密码\r\n	private String username;//学生姓名\r\n	private int age;  //年龄\r\n\r\n}\r\npublic class  StudentDao\r\n{public int searchByLoginnameAndPassword(int loginname,String password)\r\n public  Student searchByUsername(String username)\r\n \r\n	BufferedReader br = new BufferedReader(new FileReader(path));\r\n	}\r\n	\r\n        try{    String hangshu;\r\n	while ( (li = br.readLine()) != null)\r\n	{wnzcp +=hangshu.split(\" \").changdu;\r\n	 age ++;  //进行自增\r\n        }} \r\n	\r\n\r\n         catch(IOException ioe)  //捕捉catch ioe，对文本进行解读\r\n	{     System.out.println(ioe); }\r\n\r\n	\r\n\r\n	br.close();//close br窗口，从而进行下一步操作\r\n	System.out.println(\"username\"); //输出结果单词个数以及行数，简单明了，一目了然  \r\n        System.out.println(\"password\");\r\n        System.out.println(\"age\"); \r\n					   ',20,5,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6216,51,607,134,'import java.util.Scanner;\r\nimport java.util.InputMismatchException;//定义头文件，进入java编程世界\r\n\r\npublic class zcp {  //定义一个zcp类\r\n	void triangle(inta,intb,int c){\r\n		try{\r\n		if((a+b>c&&a-b<c)||(a+c>b&&a-c<b||b+c>a&&b-c<a)){//进行三角形判定\r\n			System.out.println(\"能构成三角形\");  //输出结果 “能构成三角形”\r\n		}\r\n		}\r\n		catch (Exception e) {\r\n			e.printStackTrace();\r\n			System.out.println(\"不能构成三角形\");//判定三角形的三条边能否满足条件\r\n		\r\n                finally\r\n                 System.out.println(\"感谢使用！\")//fianlly语句，迎合 用户需求，贴近服务\r\n       }\r\n	}\r\n	\r\n       }\r\n\r\n      TestClass.java\r\n      import org.omg.Messaging.SyncScopeHelper;\r\n      import java.util.Scanner;//import进入java Scanner\r\n\r\n     \r\n\r\n      public class  sjh{  //子程序类sjh\r\n\r\n	public static void main(String[] args) {\r\n		Scanner sc=new Scanner(System.in);\r\n		\r\n		Test  pp=new Test();\r\n		pp.triangle(a, b, c);\r\n                int  a=sc.nextInt();//定义a的指针位置\r\n		int  b=sc.nextInt();//定义b的指针位置\r\n	}\r\n\r\n}\r\n				   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (6217,51,598,67,'		D			   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6218,51,598,68,'		C			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6219,51,598,106,'		A			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6220,51,598,107,'		C			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6221,51,598,108,'		A			   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6222,51,598,121,'			D		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6223,51,598,63,'			one		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6224,51,598,138,'        Equal	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6225,51,598,55,'				Not equal! 10	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6226,51,598,57,'		17  9  17  9			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6227,51,598,135,'		import java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.TreeMap;\r\npublic class Test {\r\n	// 统计数字或者字符出现的次数\r\n	public static TreeMap<Character, Integer> Pross(String str) {\r\n		char[] charArray = str.toCharArray();\r\n		TreeMap<Character, Integer> tm = new TreeMap<Character, Integer>();\r\n		for (int x = 0; x < charArray.length; x++) {\r\n			if (!tm.containsKey(charArray[x])) {\r\n				tm.put(charArray[x], 1);\r\n			} else {\r\n				int count = tm.get(charArray[x]) + 1;\r\n				tm.put(charArray[x], count);\r\n			}\r\n		}\r\n		return tm;\r\n	}\r\n	public static void main(String[] args) {\r\n		BufferedReader br = null;\r\n		int line = 0;\r\n		String str = \"\";\r\n		StringBuffer sb  = new StringBuffer();\r\n		try {\r\n			br = new BufferedReader(new FileReader(\"c:\\\\1.txt\"));\r\n			while ((str = br.readLine()) != null) {\r\n				sb.append(str);\r\n				++line;\r\n			}\r\n			System.out.println(\"\\n文件行数: \" + line);\r\n			System.out.println(\"\\n文件内容: \" + sb.toString());\r\n			TreeMap<Character, Integer> tm = Pross(sb.toString());\r\n			System.out.println(\"\\n字符统计结果为：\" + tm);\r\n		} catch (FileNotFoundException e) {\r\n			e.printStackTrace();\r\n		} catch (IOException e) {\r\n			e.printStackTrace();\r\n		} finally {\r\n			if (br != null) {\r\n				try {\r\n					br.close();\r\n				} catch (IOException e) {\r\n					// TODO Auto-generated catch block\r\n					e.printStackTrace();\r\n				}\r\n			}\r\n		}\r\n	}\r\n}			   ',20,20,'					   ',0,'','',NULL),
 (6228,51,598,136,'		Package ch10;\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npubulic calss  Xsh {\r\n   private Connection connection;\r\n   private PreparedStatement UserQuery;\r\n   private ResultSet results;\r\npublic int getByUserAndPwd (String loginname ,String password){\r\n   int resuit=0;\r\ntry{\r\n connection =ConnectionManager.getConnection();\r\nUserQuery=connection.prepareStatement(“SELECT * from userinfo where id=? and password=?”);\r\nUserQuery.setString(1,lojinname);\r\nUserQuery.setString(2,password);\r\nResultSet results=UserQuery.executeQuery();\r\nif(results.next()){\r\nresult=1;\r\n}\r\n}\r\ncatch (SQLException exception){\r\nexception.printStackTrace();}\r\n\r\nfinally{\r\nConnectionManager.closeResultSet(results);\r\nConnectionManager.closeStatement(UserQuery);\r\nConnectionManager.closeConnection(connection);\r\n}\r\n return result\r\n}\r\npublic List getByUser(String username){\r\n List UserList= new Arraylist();\r\ntry{\r\nconnection=ConnectionManager.getConnection();\r\nUserQuery=connection.prepareStatement(“SELECT * FROM userinfo where username like’%”+username+”%’”);\r\nResultSet results=UserQuery.executeQuery();\r\nwhile (results.next()){\r\nUserInfo userinfo=new UserInfo();\r\nuserinfo.setUserId(results.getInt(1));\r\nuserinfo.setLonginName(results.getString(2));\r\nuserinfo.serPassword(results.getString(3));\r\nUserList.add(userinfo);\r\n}}\r\ncatch (SQLException exception){\r\nexception.printStackTrace();\r\n}\r\nfinally{\r\nConnectionManager.closeResultSet(results);\r\nConnectionManager.closeStatement(UserQuery);\r\nconnectionManager.closeConnection(connection):\r\n}\r\nreturn UserList;\r\n}\r\n}\r\n			   ',20,10,'					   ',83,'80','韦慧卿',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6229,51,598,134,'			import java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\nclass Triangle\r\n\r\nint X,Y,Z;\r\npublic Triangle()\r\n{\r\n}\r\npublic Triangle(intx, inty, int z)\r\nthis.X=x;\r\nthis.Y=y;\r\nthis,Z=z;\r\n\r\npublic double getArea()\r\nreturn (1/4.0)*Math.sqrt(((X+Y+Z)*(X+Y-Z)*(X+Z-Y)*(Y+Z-X)));\r\n}\r\npublic void showInfo()\r\n{\r\nSystem.out.println(\"边长分别为:\\n\"+X+\"\\n\"+Y+\"\\n\"+Z);\r\n}}\r\nclass BugException extends Exception\r\n{\r\npublic BugException()\r\n{\r\nsuper(\"不能构成三角形! \");\r\n}\r\n}\r\npublic class Alex\r\n{\r\npublic static void main(String args[])\r\n{\r\nScanner cin = new Scanner(System.in);\r\nint A[]= new int[3];\r\nSystem.out.prntln(\"请输入三角形的三个边长”);\r\ntry\r\n{ for(int i=0;i<3;i++)\r\nSystem.out.print(\"输入第\"+(i+1)+\"条边: \");\r\nA[i]= cin.nextInt();\r\n}\r\nif( (A[0]+A[1]<=A[2]) II (A[0]+A[2]<=A[1]) II (A[2]+A[1]<=A[0]) )\r\nthrow new BugException();\r\nTriangle Te = new Triangle(A[0],A[1],A[21);\r\nSystem.out.println(\"面积为: \"+Te.getArea());\r\nTe.showInfo();\r\n}\r\ncatch(BugException e)\r\n{System.out.ptintln(e.getMessage());\r\n}\r\ncatch(InputMismatchException e)\r\n{\r\nSystem.out.pritln(\"非法字符!\");\r\n}\r\ncatch(Exception e)\r\n{\r\nSystem.out.println(\"非法字符!\");\r\n}\r\n}\r\n}\r\n		   ',20,20,'					   ',0,'','',NULL),
 (6230,51,594,67,'		D			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6231,51,594,68,'		C			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6232,51,594,106,'			A		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6233,51,594,107,'			C		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6234,51,594,108,'			B		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6235,51,594,121,'					   D',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6236,51,594,63,'				one	   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6237,51,594,138,'		Equal			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6238,51,594,55,'				Not equal! 10	   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6239,51,594,57,'			17 9 17 9		   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6240,51,594,135,'import java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileReader;\r\nimport java.util.Scanner;\r\npublic class nas {\r\n	public static void main(String args[])\r\n	{   int a=0,c=0;\r\n		try {\r\n			\r\n		File f=new File(\"hj.txt\");\r\n		FileReader f1=new FileReader(f);\r\n		BufferedReader b=new BufferedReader(f1);\r\n		\r\n		String s;\r\n		while((s=b.readLine())!=null)\r\n		{ \r\n			a++;\r\n		 Scanner k=new Scanner(s);\r\n		\r\n		 while((k.next())!=null)\r\n		 {c++; \r\n		 }\r\n		System.out.println(a);\r\n		System.out.println(c);\r\n		\r\n			\r\n		}\r\n	}catch(Exception e)\r\n		{\r\n		e.getMessage()；\r\n		}\r\n	\r\n	}\r\n	\r\n\r\n}			   ',20,10,'					   \r\n					   ',0,'','',NULL),
 (6241,51,594,136,'import java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.util.*;\r\nimport java.sql.SQLException;\r\n\r\npublic class StudentDao {\r\nprivate Connection connection;\r\nprivate PreparedStatement StudentQuery;\r\nprivate ResultSet results;\r\n\r\npublic int searchByLoginnameAndPassword(int loginname,String password)\r\n{   int dsa=0;\r\n try {\r\n	conection=ConnectionManager.getConnection();\r\n    StudentQuery=connection.prepareStatement(\"select * from studente where loginname=?and password=?) ;        \r\n    StudentQuery.setString(1,loginname);\r\n    StudentQuery.setString(2,password);\r\n    dsa=StudentQuery.executeUpdate();\r\n    \r\n     }catch(SQLException e)\r\n {\r\n    	 e.printStackTrace();\r\n }\r\n finally \r\n {        \r\n          ConnectionManager.closeStatementSet(StudentQuery);\r\n          ConnectionManager.closeConnection(connection);\r\n }\r\n return dsa;\r\n}\r\n	\r\npublic List searchByUsername(String username)\r\n{  \r\n	List as=new ArrayList();\r\n	try{\r\n		conection=ConnectionManager.getConnection();	\r\n		StudentQuery=connection.prepareStatement(\"select *from student\"+\"from student where username=\"+username);\r\n		\r\n		results=StudentQuery.executeQuery();\r\n        Student one=new Student();\r\n        while(results.next())\r\n        {\r\n        	one.setusername(results.getString(\"username\"));\r\n        	one.setage(results.getInt(\"age\"));\r\n        	one.setid(results.getInt(\"id\"));\r\n        	one.setloginame(results.getString(\"loginname\"));\r\n        	one.setpassword(results.getString(\"password\"));\r\n        	as.add(one);\r\n        }\r\n        \r\n	  }catch(SQLException d)\r\n	{\r\n		  d.printStackTrace();\r\n	}\r\n	finally \r\n	{ ConnectionManager.closeResultSet(results);\r\n          ConnectionManager.closeStatementSet(StudentQuery);\r\n          ConnectionManager.closeConnection(connection);\r\n\r\n	\r\n	}\r\n		\r\n	return as;\r\n	\r\n}\r\n\r\n}\r\n\r\n				   ',20,10,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6242,51,594,134,'	import java.util.Scanner;\r\nimport java.util.InputMismatchException;\r\nimport java.lang.IllegalArgumentException;\r\n\r\npublic class cns {\r\n	public static  void triganle(int a,int b,int c) throws IllegalArgumentException\r\n	{ \r\n	\r\n	if((a+b>c)&&(a+c>b)&&(b+c>a)&&(a>0)&&(b>0)&&(c>0));	\r\n	else\r\n		throw new IllegalArgumentException();\r\n	}\r\n	\r\n	public static double getArea(int a,int b,int c) \r\n	{ \r\n		return  (Math.sqrt((a+b+c)*(a+b-c)*(a+c-b)*(b+c-a)))/4;\r\n	}\r\n	\r\n	public static void main(String[] arg)\r\n	{\r\n		double a;\r\n		try{\r\n			\r\n	    Scanner d=new Scanner(System.in);\r\n	    \r\n		int[] h=new int[3];\r\n		for (int i=0;i<3;i++)\r\n		{ h[i]=d.nextInt();}\r\n		\r\n		triganle(h[0],h[1],h[2]);\r\n		\r\n		a=getArea(h[0],h[1],h[2]);\r\n		System.out.println(\"三角形的面积：\");\r\n		System.out.println(a);\r\n		d.close();\r\n		}catch(InputMismatchException e)\r\n		{\r\n			e.getMessage();\r\n			System.out.println(\"数据类型不匹配\");\r\n		}catch(IllegalArgumentException e)\r\n		{\r\n			e.getMessage();\r\n			System.out.println(\"不能构成三角形\");\r\n		}\r\n		catch(Exception e)\r\n		{\r\n			e.getMessage();\r\n			e.getStackTrace();\r\n		}\r\n		\r\n		\r\n	}\r\n	\r\n}\r\n\r\n				   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (6243,51,592,67,'D					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6244,51,592,68,'C					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6245,51,592,106,'C				   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6246,51,592,107,'C					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6247,51,592,108,'B					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6248,51,592,121,'D					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6249,51,592,63,'one					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6250,51,592,138,'Equal					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6251,51,592,55,'Not equal!10					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6252,51,592,57,'17 9 17 9					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6253,51,592,135,'import java.io.*;\r\nimport java.util.Scanner;\r\n  public class qzy{  \r\n     public static void main(String[] args){\r\n       try{  int word=1;\r\n             int line=0;\r\n             BufferedReader br=new BufferedReader(\"java.txt\");\r\n             while(br.read()!=-1)\r\n            { if(br.read()==0) word++;\r\n              String s=br.readline();\r\n              line++;\r\n             }\r\n             br.close();\r\n             System.out.println(\"单词个数：\"+word);\r\n             System.out,println(\"行数：\"+line);\r\n          }catch (IOException e){\r\n             e.printStackTrace();\r\n            }\r\n    }\r\n}',20,20,'					   ',0,'','',NULL),
 (6254,51,592,136,'import java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.*;\r\npublic class StudentDao {\r\n	private Connection connection;\r\n	private PreparedStatement pstmt;\r\n	public static void main (String[] args){\r\n	StudentDao dao=new StudentDao ();\r\n	List<Student> list=new Arraylist<Student>();\r\n	int result=dao.searchByLoginnameAndPassword(\"angel\",\"28\");\r\n	if (result==1){\r\n		System.out.println(\"找到满足条件的用户\");\r\n	}else{System.out.println(\"未找到满足条件的用户\");	\r\n	}\r\n	list=dao.searchByUsername(\"angel\");\r\n	for(Student dao:list){\r\n		System.out.println(\"ID:\"+dao.getID());\r\n		System.out.println(\"登录名:\"+dao.getLoginname());\r\n		System.out.println(\"密码:\"+dao.getPassword());\r\n		System.out.println(\"学生姓名:\"+dao.getUsername());\r\n		System.out.println(\"年龄:\"+dao.geAge());\r\n	}\r\n	}\r\n	public int searchByLoginnameAndPassword(int Loginname,String Password){\r\n		int result=0;\r\n		connection=ConnectionManager.getConnection)();\r\n		try{String sql=\"seek from student where loginname=? and password=?\";\r\n		    pstmt=connection.prepareStatement(sql);\r\n		    pstmt.SetString(1,Loginname);\r\n		    pstmt.SetString(2,Password); \r\n		    ResultSet.results=pstmt.executeQuery();\r\n		    if(results.next()){result=1;}\r\n		}catch(SQLException exception){\r\n			exception.printStackTrace();\r\n		}finally{\r\n			ConnectionManager.closeStatement(pstmt);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		return results;\r\n	}\r\n	public Student searchByUsername(String username){\r\n		Student stu=new Student();\r\n		List<Student>stulist=new Arraylist<Student>();\r\n		connection=ConnectionManager.getConnection();\r\n		try{String sql=\"seek from student where username=? \";\r\n	    pstmt=connection.prepareStatement(sql);\r\n	    pstmt.SetString(1,username);\r\n	    ResultSet.results=pstmt.executeQuery();\r\n	    while(results.next()){\r\n	    	stu.setID(results.getInt(\"id\"));\r\n	    	stu.setLoginname(results.getString(\"loginname\"));\r\n	    	stu.setPassword(results.getString(\"password\"));\r\n	    	stu.setUsername(results.getString(\"uesrname\"));\r\n	    	stu.setAge(results.getInt(\"age\"));\r\n	    	stulist.add(stu);\r\n	    }\r\n	    }catch(SQLException exception){\r\n			exception.printStackTrace();\r\n		}finally{\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(pstmt);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		return stulist;\r\n	}\r\n	 class ConnectionManager{\r\n		private static final String DriveClass=\"com.mysal.jdbc.Drive\";\r\n		private static final String url=\"jdbc:mysql://localhost:3306/students?\";\r\n		private static final String loginname=\"cherry\";\r\n		private static final String password=\"000000\";\r\n		private static final String name=\"qzy\";\r\n		public static Connection getConnection(){\r\n			Connection dbConnection=null;\r\n			try{Class.forName(DriveClass);\r\n			    dbConnection=DriverManager.getConnection(url,loginame, password, name);\r\n			}catch(Exception e){\r\n				e.printStackTrace();\r\n			\r\n			}\r\n			return dbConnection;\r\n		}\r\n	}\r\n}\r\n					   ',20,5,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6255,51,592,134,'import java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\n\r\n\r\npublic class TestTriangle {\r\n	int a,b,c;\r\n	static double triangle1(int a,int b,int c){\r\n		double area=0;\r\n		if(a+b>c&&a+c>b&&b+c>a)\r\n		{double d=(a+b+c)/2;\r\n		 area=Math.sqrt(d*(d-a)*(d-b)*(d-c));\r\n			}else throw new IllegalArgumentException(\"三条边的值不能构成三角形\");\r\n			return area;\r\n		}\r\n	public static void main(String args[]){\r\n		int a[]=new int [3];\r\n		try{System.out.println(\"输入三角形的三条边\");\r\n		for(int i=0;i<3;i++){\r\n			Scanner in=new Scanner(System.in);\r\n			a[i]=in.nextInt();\r\n		}\r\n		System.out.println(triangle1(a[0],a[1],a[2]));\r\n		}catch(InputMismatchException e){\r\n			System.out.println(\"输入的数据类型不匹配\");\r\n		}catch(ArrayIndexOutOfBoundsException e){\r\n			System.out.println(\"输入的数据个数不匹配\");\r\n		}\r\n		}\r\n	\r\n}\r\n	',20,15,'					   ',0,'','',NULL),
 (6256,51,606,67,'	D				   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6257,51,606,68,'				C\r\nC   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6258,51,606,106,'				A	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6259,51,606,107,'			C		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6260,51,606,108,'				B	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6261,51,606,121,'				D	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6262,51,606,63,'			one		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6263,51,606,138,'equal		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6264,51,606,55,'	Not equal ! 10\r\nNot equal ! 10				   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6265,51,606,57,'		17 9 17 9			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6266,51,606,135,'import java. to. Buffered Reader;\r\nimport java. to. File Reader;\r\nimport java. to. IO Exception;\r\nimport java.util.Scanner;\r\n\r\npublic class Test{\r\npublic static void main (String args)throws Exception{\r\nScanner input=new Scanner (System.in);\r\nSystem. out .print(\"请输入路径\");\r\nString path=input.next();\r\nint char = Number =0;\r\nint words Number=0;\r\nint line Number =o;\r\n input Stream Reader isr=new input stream reader(new File lnput stream(path));\r\nBuffered reader br=new Buffered reader(isr);\r\nwhile(br. read()!=-1){\r\nString s=br.readLine ();\r\nchar Num+=s.split(\"\")>length;\r\nline Num ++;\r\n}\r\nisr .close();\r\nSystem .out . println(\"字符数:\"+charNum+\"\\t单词数:+words Num+\"行数\":+line Num);\r\n}\r\n}\r\n			   ',20,20,'					   ',0,'','',NULL),
 (6267,51,606,136,'		import java. to. Buffered Reader;\r\nimport java. to. File Reader;\r\nimport java. to. IO Exception;\r\nimport java.util.Scanner;\r\n	public class Test{\r\npublic static void main (String args)throws Exception{\r\nScanner input=new Scanner (System.in);\r\nSystem. out .print(\"请输入路径\");\r\nString path=input.next();\r\nint char = Number=0;\r\nint words Number=0;\r\nint line Num =o;\r\n input Stream Reader isr=new input stream reader(new File lnput stream(path));\r\nBuffered reader br=new Buffered reader(isr);\r\nwhile(br. read()!=-1){\r\nString s=br.readLine ();\r\nchar Num+=s.split(\"\")>length;\r\nline Num ++;\r\n}\r\nisr .close();\r\nSystem .out . println(\"字符数:\"+charNum+\"\\t单词数:+words Num+\"行数\":+line Num);\r\n}\r\n}\r\n			   		   ',20,5,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6268,51,606,134,'import java. until. Input Mismatch Except ion;\r\nimport java.until.Scanner;\r\n\r\npublic class zcpl{\r\n       void triangle(int a,int b, int ){\r\n try{\r\nif((a+b>c&&a-c<b||(a+c>b&&a-c<b||b+c>a&&b-c<a)){\r\n System. out. ptint ln (能构成三角形\"):\r\nfinally\r\nSystem. out. print ln(\"感谢使用！\")\r\n}\r\n}\r\n}\r\nTest Class. java \r\nimport java.until.Scanner；\r\nimport org. omg. Messaging.Sync Scope Helper;\r\npublic class Test Class{\r\npublic static void main (String[]args){\r\nScanner sc=new Scanner(System.in);\r\nint a=sc. next Int();\r\nint b=sc. next Int();\r\nTest ts=new Test();\r\nts. triangle(a,b,c);\r\n}\r\n		   ',20,20,'					   ',0,'','',NULL),
 (6269,51,605,67,'		d			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6270,51,605,68,'		c			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6271,51,605,106,'		a			   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6272,51,605,107,'			c		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6273,51,605,108,'			c		   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6274,51,605,121,'			c		   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6275,51,605,63,'		one		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6276,51,605,138,'		Equal	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6277,51,605,55,'		Not equal! 10   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6278,51,605,57,'			17 9 17 9   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6279,51,605,135,'import java.util.*;\r\npublic class Titles{\r\n   private String words;\r\n   private String words number;\r\n   private String line number;\r\n   private String username;\r\npublic static void printByFileReader(String filePath) throws IOException\r\n{\r\n    BufferedReader reader=new BufferedReader(new FileReader(file.exe));\r\n    if(!reader.ready())\r\n    {\r\n        System.out.println(\"对不起，您所输入的文件目前为止无法被机器读取，请重新输入\");\r\n        return 0;\r\n    }\r\n    int word=0;int line=0;\r\n    while((result=reader.read())=\'\\t\')\r\n    {        word++;\r\n    if ((result/=reader.read())=\'\\t\')\r\n     {       word--;\r\n    }\r\n    while((result=reader.read())=\'\\n\')\r\n    {        line++;\r\n    if ((result/=reader.read())=\'\\t\')\r\n     {       line--;\r\n     }\r\n   reading.close();\r\n   system.out.println\r\n   system.out.println();\r\n   return BufferedReader.\r\n}\r\n}\r\n					   ',20,20,'					   ',0,'','',NULL),
 (6280,51,605,136,'package ch10\r\nimport java.sql.Connection;\r\nimport java.sq1.Preparedstament;\r\nimport java.sql.Resultset;\r\nimport java.sql.SQLException;\r\nimport java.until.*;\r\n\r\npublic class StudentDao{\r\n    private int id;\r\n	private String loginname;//登录名\r\n	private String password;//密码\r\n	private String username;//学生姓名\r\n	private int age;  //年龄\r\n    public list searching studentnames(String password){\r\n    public connection TItledaoimpl implements titledao\r\n    private connection connection;\r\n    private Preparedstatement studentdao\r\n        int result=0;\r\n        try {\r\n            connection=ConnectionManager.getConnection();\r\n            UserQuery=connection.\r\n                prepareStatement(\"SELECT*from userinfo where id=!\r\n                and password=!\");\r\n            TitlesQuery.setString(1,loginname/登录名);\r\n            TitlesQuery.setString(2,password/密码);\r\n            ResultSet results=UserQuery.executeQuery();\r\n            if(results.next()){\r\n                        result=1;\r\n                }\r\n            }\r\n        catch (SQLException exception){\r\n                        exception.printStackTrace();\r\n            }\r\n            finally{\r\n                        ConnectionManager .ResultSet(results);\r\n                        ConnectionManager .Statement(titlesquery);\r\n                        ConnectionManager .Connection(connection);\r\n                        }\r\n                        return result;\r\n             }\r\n            public  Student searchByUsername(String loginname){\r\n                        List UserList=new ArrlyayList();\r\n                        try{\r\n                                    connection=ConnectionManager.getConnection();\r\n                                    UserQuery=connection\r\n                                                .prepareStatement(\"SELECT*FROM userinfo where username like\'&\'\'+loginname+\'\'&\'\");\r\n                                    ResultSet results=UserQuery.executeQuery();\r\n                                    while(result.next())}\r\n                                                UserInfo userinfo=new Userinfo();\r\n                                                userinfo.setId(results.getInt(loinname));\r\n                                                userinfo.setLoginName(results.getString(password));\r\n                                                userinfo.setPassword(results.getString(student name));\r\n                                                userinfo.setUserName(results.getInt(age);\r\n                                                UserList.add(userinfo);\r\n                              }\r\n                          }\r\n                          catch(SQLException exception){\r\n                                  exception.printStackTrace();\r\n                         system.out.println;\r\n                         \r\n                          }\r\n                          return studentDao;\r\n             }\r\n}\r\n                    \r\n\r\n					   ',20,10,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6281,51,605,134,'	public class Employee[\r\nPrivate String name;\r\nprivate int triangle\r\nimport java.util.Arrays;\r\nimport java.util.Scanner;\r\n\r\npublic class triangle{\r\nint x,y,z;\r\n void triangle(int x,int y,int z)\r\n   length of side x=x;		\r\n   length of side y=y;		\r\n   length of side z=z;		\r\n    if（(x+y>z)&(x-z<y)）\r\n{System.out.println(\"平面上一三角形的三边分别为：\"+length of sidex+\",\"+length of side y+\",\"+length of side  y+\";}\r\nelse{throw new IllegalArgumentException();}	\r\n}\r\npublic double getArea(int x,int y,int z){\r\ndouble p=(x+y+z)/2;\r\nreturn Math.sqrt(p*(p-x)*(p-y)*(p-z));\r\n}\r\n}\r\npublic class Test {	\r\npublic static void main(String[] triangles) {				\r\nint []s=new int[3];		\r\n   System.out.println(\"请分别输入三角形的三条边的长：\");				\r\ntry {			\r\n   for(int i=0;i<s.length;i++)\r\n{				\r\nif(in.NextInt())					\r\ns[i]=in.nextInt();				\r\nArrays.sort(s);\r\nScaners.sort(s);\r\nsjx t=new sjx();			\r\nt.triangle(length of side x, length of side y,length of side z);		\r\n}catch(IllegalArgumentException e) {			\r\n System.err.println(\"length of side x,\"length of side y\",\"length of side z\",不能够围成一个三角形，请重新输入数据\");		\r\n}\r\n      catch(SQLExpection) {\r\n      expection.printstackTrace();			\r\nSystem.err.println(\"请将三角形的三条边以整数的形式输入，不要以小数的形式输入\");			\r\ne.printStackTrace();		\r\n}catch (Exception e) {			\r\ne.printStackTrace();	\r\npublic class Tapper{\r\npublic static void main(String[]args)\r\nsystem.out.println\r\nsystem.out,println	\r\nfinally{\r\n    ConnectionManger.closestatement(pstmt);\r\n\r\n    connectionManger.closeConnection\r\n}	\r\n}\r\n}				   ',20,20,'					   ',0,'','',NULL),
 (6282,50,574,73,'					   A',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6283,50,574,74,'					 B  ',4,4,'					   ',0,NULL,NULL,NULL),
 (6284,50,574,67,'					   D',4,4,'					   ',0,NULL,NULL,NULL),
 (6285,50,574,105,'					   D',4,0,'					   ',0,NULL,NULL,NULL),
 (6286,50,574,108,'					   B',4,4,'					   ',0,NULL,NULL,NULL),
 (6287,50,574,121,'				D	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6288,50,574,137,'					 one  ',4,0,'					   ',0,NULL,NULL,NULL),
 (6289,50,574,138,'				Equal	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6290,50,574,55,'					Not equal! 10   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6291,50,574,57,'					   17 9 17 9',4,4,'					   ',0,NULL,NULL,NULL),
 (6292,50,574,135,'import java.io.BReader;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\n\r\npublic class UnicodeStatistics {\r\n	public static void main(String[] args) throws Exception{\r\n	Scanner input=new Scanner(System.in);\r\n	System.out.println(\"请输入txt文件位置\"); \r\n	\r\n	String path=input.next();\r\n	int wordsNum= 0;\r\n	int lineNum = 0;\r\n	\r\n	BReader br = new BReader(new FileReader(path));\r\n	\r\n	\r\n	try{    String line;\r\n	while ( (line = br.readLine()) != null)\r\n	{\r\n		wordsNum +=line.split(\" \").length;\r\n		lineNum ++;\r\n	}\r\n	      //根据所读取的一行文本进行操作\r\n	} \r\n	catch(IOException ioe)\r\n	{     System.out.println(ioe); }\r\n\r\n	\r\n	br.close();//关闭\r\n	System.out.println(\"\\t单词数:\"+wordsNum+\"行 数:\"+lineNum); \r\n}\r\n}\r\n					   ',20,20,'					   ',0,'','',NULL),
 (6293,50,574,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic class WWJ {\r\n   private Connection connection;\r\n\r\n   private PStatement UQuery;\r\n\r\n   private ResultSet results;\r\n\r\n   public int getByUserAndPwd(String uname,String password){    \r\n\r\n   int result=0;\r\n\r\n     try {\r\n        connection = ConnectionManager.getConnction();\r\n        UQuery = connection\r\n\r\n      .pStatement(\"SELECT * from userinfo where userid=? and password=?\");\r\n\r\n      UQuery.setString(1,uname);\r\n\r\n      UQuery.setString(2,password);\r\n\r\n      ResultSet results = UQuery.executeQuery();\r\n\r\n      if(results.next()) {\r\n\r\n          result=1;\r\n}\r\n}\r\n      catch (SQLException exception) {// 处理数据库异常\r\n\r\n      exception.printStackTrace();\r\n}\r\n       finally {\r\n\r\n        ConnectionManager.closeResultSet(results);\r\n\r\n        ConnectionManager.closeStatement(UserQuery);\r\n\r\n        ConnectionManager.closeConnection(connection);\r\n}\r\n    return result;\r\n}\r\npublic List getByUser(String username) {   \r\n \r\n    List UserList = new ArrayList();\r\n\r\n      try {\r\n\r\n         connection=ConnectionManager.\r\n\r\n         UQuery=connection\r\n\r\n      prepareStatement(\"SELECT * FROM userinfo where username like \'%\"+username+\"%\'\");\r\n\r\n    ResultSet results = UQuery.executeQuery();\r\n\r\n\r\nwhile (results.next()) {\r\n     UserInfo userinfo=new UserInfo();\r\n\r\n     userinfo.setUserId(results.getInt(1));\r\n\r\n     userinfo.setLoginName(results.getString(2));\r\n\r\n     userinfo.setPassword(results.getString(3));\r\n\r\n     UserList.add(userinfo);\r\n}\r\n}\r\n// 处理数据库异常\r\n          catch (SQLException exception) {\r\n\r\n          exception.printStackTrace();\r\n\r\n}\r\n       finally {\r\n                  ConnectionManager.closeResultSet(results);\r\n\r\n                  ConnectionManager.closeStatement(UserQuery);\r\n\r\n                  ConnectionManager.closeConnection(connection);\r\n}\r\n         return UserList;\r\n}\r\n}\r\n\r\n\r\n			   ',20,5,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6294,50,574,134,'public class wwj {\r\n\r\n	int a,b,c;\r\n\r\n	void triangle(int a,int b,int c)throws Exception{\r\n\r\n		this.a=a;\r\n\r\n		this.b=b;\r\n\r\n		this.c=c;\r\n                Scanner scan=new Scanner(System.in)\r\n                        a=scan nextByte();\r\n                        b=scan nextByte();\r\n                        c=scan nextByte();\r\n                        float s=(a+b+c)/2f;\r\n                        float S=(float)Math.sqr(s*(s-a)*(s-b)*(s-c));\r\n\r\n		if(a+b>c||c-a<a){\r\n\r\n			System.out.println(\"三角形的三条边为：\"+this.a+\",\"+this.b+\",\"+this.c);\r\n                       \r\n\r\n		}\r\n                  else{\r\n\r\n			throw new IllegalArgumentException();\r\n\r\n		}\r\n\r\n	}\r\n\r\n}\r\n\r\n\r\npublic class Test {\r\n\r\n	public static void main(String[] args) {\r\n\r\n		\r\n\r\n		int []s=new int[3];\r\n\r\n		System.out.println(\"请输入三条边：\");\r\n\r\n		Scanner in=new Scanner(System.in);\r\n\r\n		try {\r\n\r\n			for(int i=0;i<s.length;i++){\r\n\r\n				if(in.hasNextInt())\r\n\r\n					s[i]=in.nextInt();\r\n\r\n				else\r\n\r\n					throw new InputMismatchException();\r\n\r\n			}\r\n\r\n			Arrays.sort(s);\r\n\r\n			wwj t=new wwj();\r\n\r\n			t.triangle(s[0], s[1], s[2]);\r\n\r\n		}\r\n                   catch(IllegalArgumentException e) {\r\n\r\n			System.error.println(s[0]+\",\"+s[1]+\",\"+s[2]+\",不能构成三角形\");\r\n\r\n		}\r\n                   catch(InputMismatchException e) {\r\n\r\n			System.error.println(\"请输入整数作为三角形的边长！\");\r\n\r\n			e.printStackTrace();\r\n\r\n		}catch (Exception e) {\r\n\r\n			e.printStackTrace();\r\n\r\n		}\r\n\r\n	}\r\n\r\n}\r\n			   ',20,20,'					   ',0,'','',NULL),
 (6295,50,573,73,'	A			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6296,50,573,74,'	B				   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6297,50,573,67,'		D			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6298,50,573,105,'		D			   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6299,50,573,108,'			B		   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6300,50,573,121,'				D   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6301,50,573,137,'one two default			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6302,50,573,138,'Equal			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6303,50,573,55,'Not equal!  10			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6304,50,573,57,'		17 9 17 9			   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6305,50,573,135,'import java.io.BufferedReader;\r\nimport java.util.Scanner;\r\npublic class UnicodeStatistics {\r\n	public static void main(String[] args) throws Exception{\r\n	Scanner input=Scanner(System.in);\r\n	System.out.println(\"请输入txt文件位置\"); \r\n	\r\n	String path=output.next();\r\n	int wordsNum= 0;\r\n	int lineNum = 0;\r\n	\r\n	BufferedReader br = new BufferedReader(new FileReader(path));\r\n	\r\n	 while( br.read()!= 0){\r\n	String s=br.readLine();\r\n	\r\n	wordsNum +=s.length;\r\n	lineNum ++; \r\n	}\r\n	\r\n	try{    String line;\r\n	while ( (line = br.readLine()) != null)\r\n	{\r\n		wordsNum +=line.length;\r\n		lineNum ++;\r\n	}\r\n	      \r\n	} \r\n	catch(IOException ioe)\r\n	{     System.out.println(ioe); }\r\n\r\n       BufferedReader reader = new BufferedReader(new FileReader(fileName));\r\n                        \r\n      try{    while ( (line = reader.readLine()) != null)\r\n     \r\n       } \r\n      catch(IOException ioe) {  \r\n           System.out.println(ioe); \r\n\r\n	br.close();\r\n	System.out.println(\"\\t单词数:\"+wordsNum+\"行 数:\"+lineNum); \r\n}\r\n}\r\n	   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (6306,50,573,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic class Ex04 {\r\nprivate Connection connection;\r\nprivate PreparedStatement UserQuery;\r\nprivate ResultSet results;\r\npublic int getByUserAndPwd(String loginname,String username,String password,int age){    \r\nint result=0;\r\ntry {\r\nconnection = ConnectionManager.getConnction();\r\nUserQuery = connection\r\n.prepareStatement(\"SELECT * from userinfo where userid=? where loginname=? and password=?\")\r\nStudentQuery.setString(1,username);\r\nStudentQuery.setString(2,password);\r\nStudentQuery.setString(3,loginname);\r\nStudentQuery.setString(4,age);\r\nResultSet results = StudentQuery.executeQuery();\r\nif(results.next()) {\r\nresult=1;\r\n}\r\n}\r\ncatch (SQLException exception) \r\nexception.printStackTrace();\r\n}\r\nfinally {\r\nConnectionManager.closeResultSet(results);\r\nConnectionManager.closeStatement(studentQuery);\r\nConnectionManager.closeConnection(connection);\r\n}\r\nreturn result;\r\n}\r\npublic List getByUser(String Studentname) {    \r\nList StudentList = new ArrayList();\r\ntry {\r\nconnection=ConnectionManager.\r\nStudentQuery=connection\r\nprepareStatement(\"SELECT * FROM StudentDao where Studentname like \'%\"+username+\"%\'\");\r\nResultSet results =StudentQuery.executeQuery();\r\nwhile (results.next()) {\r\nUserInfo StudentDao=new StudentDao();\r\n\r\n\r\nStudentDao.setloginname(results.getInt(1));\r\nStudentDao.setLoginName(results.getString(2));\r\nStudentDao.setPassword(results.getString(3));\r\nStudentDao.setage(results.getString(4));\r\nUserList.add(StudentDao);\r\n}\r\n}\r\n\r\ncatch (SQLException exception) {\r\nexception.printStackTrace();\r\n}\r\nfinally {\r\nConnectionManager.closeResultSet(results);\r\nConnectionManager.closeStatement(UserQuery);\r\nConnectionManager.closeConnection(connection);\r\n}\r\nreturnStudentList;\r\n}\r\n}\r\n\r\n		   \r\n					   ',20,5,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6307,50,573,134,'public class sjx getArea{\r\n\r\n	int a,b,c;\r\n\r\n	void triangle(int a,int b,int c)throws Exception{\r\n\r\n		this.a=a;\r\n\r\n		this.b=b;\r\n\r\n		this.c=c;\r\n\r\n		if  a+b<=c(或a+c<=b,b+c<=a){\r\n\r\n			System.out.println(\"构成三角形的三条边为：\"+this.a+\",\"+this.b+\",\"+this.c);\r\n\r\n		}else{\r\n\r\n			throw new IllegalArgumentException();\r\n\r\n		}\r\n\r\n	}\r\n\r\n}\r\n\r\npublic class Test {\r\n\r\n	public static void main(String[] args) {\r\n\r\n		int []s=new int[3];\r\n\r\n		System.out.println(\"请输入三条边：\");\r\n\r\n		Scanner in=new Scanner(System.in);\r\n\r\n		try {\r\n\r\n			for(int i=0;i<s.length;i++){\r\n\r\n				if(in.hasNextInt())\r\n\r\n					s[i]=in.nextInt();\r\n\r\n				else\r\n\r\n				throw new InputMismatchException();\r\n\r\n			}\r\n\r\n			Arrays.sort(s);\r\n\r\n			sjx t=new sjx();\r\n\r\n			t.triangle(s[0], s[1], s[2]);\r\n\r\n		}catch(IllegalArgumentException e) {\r\n\r\n			System.err.println(s[0]+\",\"+s[1]+\",\"+s[2]+\",不能构成三角形\");\r\n\r\n		}catch(InputMismatchException e) {\r\n\r\n			System.err.println(\"请输入整数作为三角形的边长！\");\r\n\r\n                        public double getArea()\r\n\r\n           {double p=(a+b+c)/2.0;\r\n\r\n             double s=Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n\r\n             return s;\r\n			e.printStackTrace();\r\n	}catch (Exception e) {\r\n\r\n		e.printStackTrace();\r\n                     \r\n                       System.out.println(\"面积为:\"+s.getArea());\r\n                     i++;\r\n		}\r\n\r\n	}\r\n\r\n}\r\n\r\n\r\n				   \r\n					   ',20,20,'					   ',0,'','',NULL),
 (6308,51,601,67,'				D	   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6309,51,601,68,'			C		   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6310,51,601,106,'				A	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6311,51,601,107,'				C	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6312,51,601,108,'				B	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6313,51,601,121,'				D	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6314,51,601,63,'		one			   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6315,51,601,138,'				equal	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6316,51,601,55,'				Not equal! 10	   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6317,51,601,57,'0x110011\r\nuoo11011			   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6318,51,601,135,'public class Test{\r\npublic static void main (String []) args) throws Exception{\r\nScanner input=new Scanner(System.in);\r\nAystem.out.println(\"请输入路径\");\r\nString path=input.next();\r\nint charNum=0;\r\nint wordsNum=0;\r\nint lineNum=0;\r\nInputStreamReader isr=new InputStreamReader(new) FilelnputStream(path));\r\nBufferedReader br=new BudderedReader(isr);\r\nwhile(br.read()!=-1){\r\nString s=br.readLine();\r\ncharNum+=s.length();\r\nwordsNum+=s.split(\"\").length;\r\nlineNum++;\r\n}\r\nisr.close();\r\nSystem.out.println(‘字符数:’+charNum+\"}t单词数:\"+wordsNum+\"行数:\"+lineNum);\r\n}\r\n}		   ',20,20,'					   ',0,'','',NULL),
 (6319,51,601,136,'					   ',20,0,'					   ',100,'100','曾金波',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6320,51,601,134,'package homework;\r\nimport java.util.Scanner;\r\npublic class Triangle {\r\n    //三角形三边长\r\n    int a,b,c;\r\n    //构造方法传入三边长\r\n    public Triangle(int a,int b,int c){\r\n        this.a=a;\r\n        this.b=b;\r\n        this.c=c;\r\n    }\r\n    public boolean check1()throws TriangleException{\r\n        if(!(a>0&&b>0&&c>0)){\r\n            throw new TriangleException(\"边长小于0，参数无效异常\");\r\n        }\r\n        return true;\r\n    }\r\n    public boolean check2()throws TriangleException{\r\n        boolean x,y,z;\r\n        x=a+b-c>0;\r\n        y=a+c-b>0;\r\n        z=b+c-a>0;\r\n        if(!(x&&y&&z)){\r\n            throw new TriangleException(\"无法构成三角形异常!\");\r\n        }\r\n    }\r\n    public void area(){\r\n        boolean t1=false;\r\n        boolean t2=false;\r\n        double p,s;\r\n        try {\r\n            t1=check1();\r\n            t2=check2();\r\n        }catch(TriangleException e){\r\n          System.out.println(\"自定义异常:  \"+e.toString());\r\n        }\r\n        if(t1&&t2){\r\n            p=(a+b+c)/2;\r\n            s=Math.sqrt((p*(p-a)*(p-b)*(p-c)));\r\n            System.out.println(\"三角形面积为：\"+s);\r\n        }\r\n    }\r\n\r\n\r\n\r\n',20,15,'					   ',0,'','',NULL),
 (6321,51,608,67,'					D   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6322,51,608,68,'					C   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6323,51,608,106,'					   A\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6324,51,608,107,'					   C\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6325,51,608,108,'			B		   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6326,51,608,121,'		C			   \r\n					   ',4,0,'					   ',0,NULL,NULL,NULL),
 (6327,51,608,63,'				one	   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6328,51,608,138,'				equal	   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6329,51,608,55,'					   Not equal ! 10\r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6330,51,608,57,'				17 9 17 9	   \r\n					   ',4,4,'					   ',0,NULL,NULL,NULL),
 (6331,51,608,135,'package n2;\r\nimport java.io.BufferedReader;\r\nimport java.io.fileReader;\r\nimport java,io.ioexception\r\nimport java.util.Sca;\r\npublic class Count{\r\npublic static void main(String args[])throw Exception{\r\nSca input=new Sca(System.in);\r\nSystem.out.println;(\"输入路径\")\r\nString path=input.next();\r\npublic static int words=1;\r\npublic static int lines=1;\r\npublic static int chars=0;\r\ninput Stream Reader sr=new inputstreamreader(new file input stream(path));\r\nBuffered reader br=new Buffered reader (sr);\r\nwhile (br read()!=-1){\r\nstring =br.readline();\r\nchars+=s.split(\"\")<length;\r\nlines++;\r\n}\r\nsr.close();\r\nSystem.out.println(lines+\"行\"+word+\"个单词\"+chars+\"个字符\")；\r\n}\r\n}\r\n			   ',20,20,'					   ',0,'','',NULL),
 (6332,51,608,136,'package n1\r\nimport java.sq1.connection;\r\nimport java.sq1.preparedstatement;\r\nimport java.sq1.resulement;\r\nimport java.sq1.ioexception;\r\nimport java.util.*;\r\npublic class StudentDao implentnts StudentDao\r\npublic class Student{\r\nprivate int id;//地址\r\nprivate String loginname;//登录名\r\nprivate String password;//密码\r\nprivate String username;//学生姓名\r\nprivate int age;//年\r\npublic int searchbyloginnameandpassword(int loginname ,string password)\r\npublic student searchbyusername(string username)\r\nSystem.out.println;(\"输入路径\")\r\n',20,0,'					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6333,51,608,134,'package n3;\r\nimport java.util.Arrays;\r\nimport java.util.Sca;\r\nimport java.util.*\r\npublic class triangle{\r\npublic void triangle(inta,int b,int c)throw IllegalArgumentException\r\n{if ((a+b>c)&&(c-a<b))\r\nsystem.out.println(a+\",\"b+\",\"+c);\r\nif (a+b<=c,a+c<=b,b+c<=a)then throw new IllegalArgumentException(),);//抛出异常，不符合条件\r\n}\r\n}\r\npublic class main{\r\npublic static void main（args[]){\r\nint A[]=new int [3];\r\nSca input=new Sca\r\nSystem.out.println(\"输入三角形的三条边\")\r\ntry{for (int i=0;i<A.length;i++)\r\n{A[i]=input.nextint();\r\n}\r\nArrays.sort(A);\r\nTriangle triangle=new Triangle();\r\ntriangle.triangle(A[0],A[1],A[2]);//调用了三角形判断函数\r\n}\r\ncatch (IllegalArgumentException {\r\nsystem.err.println(\"三条边不能构成三角形的情况\")\r\n}\r\n finally{connectsca.close arrays;\r\n}return triangle;\r\n}\r\n				   ',20,20,'					   ',0,'','',NULL),
 (6334,51,593,67,'		D			   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6335,51,593,68,'				C	   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6336,51,593,106,'				A	   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6337,51,593,107,'				C	   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6338,51,593,108,'				B	   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6339,51,593,121,'				D	   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6340,51,593,63,'					one   ',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6341,51,593,138,'					   Equal',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6342,51,593,55,'					   Not equal! 10',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6343,51,593,57,'					   17 9 17 9',4,4,'					   \r\n					   ',0,NULL,NULL,NULL),
 (6344,51,593,135,'import java.io.BufferedReader;\r\n\r\n\r\n\r\npublic class Test{\r\npublic static void main(String[] args){\r\nBufferedReader Array=new BufferedReader(new FileReader(\"ol.txt\"));\r\nhashmap<Character,Integer>hm=new Hasnmap<>();\r\nint ch;\r\nwhile((ch=Array.read())!=-1){\r\nchar c=(char)ch;\r\nif(!hm.put(c,1);}\r\nelse{hm.put(c,hm.get(c)+1);\r\n}}\r\nArray.close();\r\nBufferedWriter SI=new BufferedWriter(new FileWriter(\"time.txt\"));\r\nfor(Character key:hm.keySet()){\r\nSI.write(key+\"=\"+hm.keySet());\r\nSI.newline();}\r\nSI.close();\r\n}					   ',20,20,'					   \r\n					   ',0,'','',NULL),
 (6345,51,593,136,'import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Student{\r\nprivate int id;\r\nprivate String loginname;\r\nprivate String password;\r\nprivate age;\r\n} \r\n\r\npublic class StudentDao{\r\nprivate Connection connection;\r\nprivate PreparedStatement StudentQuery;\r\nprivate ResultSet results;\r\npublic int searchByLoginnameAndPassword(int loginname,String passname){\r\nint result=0;\r\ntry{\r\nconnection=ConnectionManager.getConnection();\r\nStudentQuery=connection.\r\nprepareStatement(\"SELECT*from Studentinfo where username=?and password=?\");\r\nStudentQuery.setString(1,username);\r\nStudentQuery.setString(2,password);\r\nResultSet results=StudentQuery.executeQuery();\r\nif(results.next()){\r\nresult=1;\r\n}\r\n}\r\ncatch(SQLException exception){\r\nexception.printStackTrace();\r\n}\r\nfinally{\r\nConnectionManager.closeResultSet(results);\r\nConnectionManager.closeStatement(StudentQuery);\r\nConnectionManager.close(connection);\r\n}\r\nreturn result;\r\n}\r\npublic Student searchByUsername(String username){\r\nList StudentList=new ArrayList();\r\ntry{\r\nconnection=ConnectionManager.getConnection();\r\nStudentQuery=connection.prepareStatement(\"SELECT*FROM studentinfo where username like\'%\"+username+\"%\'\");\r\nwhile(results.next()){\r\nStudentinfo.setUserId(results.getInt(1));\r\nStudentinfo.setLoginName(results.getString(2));\r\nStudentinfo.setPassword(results.getString(3));\r\nStudentinfo.add(studentinfo);}\r\n}\r\ncatch(SQLException exception){\r\nexception.printStackTrace();}\r\nfinally{ConnectionManager.closeResultSet(results);\r\nConnectionManager.closeStatement(StudentQuery);\r\nConnectionManager.close(connection);\r\n}\r\nreturn StudentList;\r\n}\r\n}					   ',20,5,'					   \r\n					   ',0,'','',NULL);
INSERT INTO `student_workbook` (`id`,`workbook_id`,`student_id`,`exercise_id`,`studentAnswer`,`grade`,`score`,`notes`,`rate`,`studentRate`,`instructions`,`fileName`) VALUES 
 (6346,51,593,134,'public class Test{\r\npublic static void main(String[] args){\r\nint []s=new int[3];\r\nSystem.out.println(\"请输入三条边：\");\r\nScnner in=new Scanner(System.in);\r\ntry{\r\nfor(int i<s.length;i++){\r\nif(in.hasNextInt())\r\ns[i]=in.nextInt();\r\nelse \r\nthrow new IllegalArgumentException();\r\n}\r\nArrays.sort(s);\r\nsanjiao t=new sanjiao();\r\nt.triangle(s[0],s[1],s[2]);\r\n}catch(IllegalArgumentException e){\r\nSystem.out.println(s[0]+\",\"+s[1]+\",\"+s[2]+\",不能构成三角形\");}\r\n}catch(IllegalArgumentException e){\r\nSystem.out.println(\"请输入整数作为三角形的边长！\");}\r\ncatch(IllegalArgumentException e）{\r\nSystem.out.println(\"请输入三条边的值：\");}\r\n} \r\npublic class sanjiao{\r\nint a,b,c;\r\nvoid triangle(int a,int b,int c)throws Exception{\r\nthis.a=a;\r\nthis.b=b;\r\nthis.c=c;\r\nif(a+b>c||c-b<a){\r\nSystem.out.println(\"构成三角形的三条边为：\"+this.a+\",\"+this.b+\",\"+this.c);}\r\nelse{\r\nthrow new IllegalArumentException();}\r\n}\r\n\r\n}\r\npublic class Area{\r\nthis.a=a;\r\nthis.b=b;\r\nthis.c=c;\r\nArea=(a+b=c)/2;}					   ',20,20,'					   \r\n					   ',0,'','',NULL);
/*!40000 ALTER TABLE `student_workbook` ENABLE KEYS */;


--
-- Table structure for table `homework`.`tb_assignment`
--

DROP TABLE IF EXISTS `tb_assignment`;
CREATE TABLE `tb_assignment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `workbook_id` int(11) NOT NULL,
  `exercise_id` int(11) NOT NULL,
  `grade` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `exercise_id` (`exercise_id`),
  KEY `workbook_id` (`workbook_id`),
  CONSTRAINT `tb_assignment_ibfk_1` FOREIGN KEY (`exercise_id`) REFERENCES `tb_exercise` (`id`),
  CONSTRAINT `tb_assignment_ibfk_3` FOREIGN KEY (`workbook_id`) REFERENCES `tb_workbook` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=302 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `homework`.`tb_assignment`
--

/*!40000 ALTER TABLE `tb_assignment` DISABLE KEYS */;
INSERT INTO `tb_assignment` (`id`,`workbook_id`,`exercise_id`,`grade`) VALUES 
 (200,39,55,20),
 (201,39,56,20),
 (202,39,57,20),
 (203,39,60,20),
 (204,39,61,20),
 (205,40,55,20),
 (206,40,56,20),
 (207,40,57,20),
 (208,40,60,20),
 (209,40,61,20),
 (210,41,62,40),
 (211,41,65,40),
 (212,41,63,20),
 (213,42,62,40),
 (214,42,63,20),
 (215,42,65,40),
 (216,43,66,8),
 (217,43,67,8),
 (218,43,68,8),
 (219,43,69,8),
 (220,43,70,8),
 (221,43,71,8),
 (222,43,72,8),
 (223,43,73,NULL),
 (224,43,74,8),
 (225,43,75,8),
 (226,43,76,20),
 (227,44,66,8),
 (228,44,67,8),
 (229,44,68,8),
 (230,44,69,8),
 (231,44,70,8),
 (232,44,71,8),
 (233,44,72,8),
 (234,44,73,NULL),
 (235,44,74,8),
 (236,44,75,8),
 (237,44,76,20),
 (238,45,132,50),
 (239,45,133,50),
 (240,46,132,50),
 (241,46,133,50),
 (242,48,122,30),
 (243,48,123,30),
 (244,48,124,40),
 (245,49,122,30),
 (246,49,123,30),
 (247,49,124,40),
 (250,50,134,20),
 (251,50,135,20),
 (252,51,134,20),
 (253,51,135,20),
 (254,50,136,20),
 (255,51,136,20),
 (256,50,55,4),
 (257,50,57,4);
INSERT INTO `tb_assignment` (`id`,`workbook_id`,`exercise_id`,`grade`) VALUES 
 (258,50,137,4),
 (259,50,138,4),
 (260,50,73,4),
 (261,50,74,4),
 (262,50,67,4),
 (263,50,105,4),
 (265,50,108,4),
 (266,50,121,4),
 (267,51,55,4),
 (268,51,57,4),
 (269,51,63,4),
 (270,51,138,4),
 (271,51,67,4),
 (272,51,68,4),
 (274,51,106,4),
 (275,51,107,4),
 (276,51,108,4),
 (277,51,121,4),
 (278,67,130,50),
 (279,67,32,50),
 (284,67,32,NULL),
 (285,67,39,NULL),
 (286,67,90,NULL),
 (287,67,130,NULL),
 (288,67,90,NULL),
 (293,66,42,NULL),
 (294,66,128,NULL),
 (295,71,55,NULL),
 (296,71,59,NULL),
 (297,73,129,NULL),
 (298,73,104,NULL),
 (299,73,105,NULL),
 (300,73,132,NULL),
 (301,73,133,NULL);
/*!40000 ALTER TABLE `tb_assignment` ENABLE KEYS */;


--
-- Table structure for table `homework`.`tb_clazz`
--

DROP TABLE IF EXISTS `tb_clazz`;
CREATE TABLE `tb_clazz` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cname` varchar(20) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `homework`.`tb_clazz`
--

/*!40000 ALTER TABLE `tb_clazz` DISABLE KEYS */;
INSERT INTO `tb_clazz` (`id`,`cname`) VALUES 
 (11,'软件嵌入162'),
 (12,'软件嵌入161'),
 (14,'软件嵌入172'),
 (15,'软件嵌入171'),
 (17,'计161'),
 (18,'计162'),
 (19,'软件工程161'),
 (20,'计161杏'),
 (21,'软件工程161（杏）'),
 (22,'计162（杏）'),
 (23,'计163（杏）'),
 (25,'计183'),
 (26,'计184');
/*!40000 ALTER TABLE `tb_clazz` ENABLE KEYS */;


--
-- Table structure for table `homework`.`tb_course`
--

DROP TABLE IF EXISTS `tb_course`;
CREATE TABLE `tb_course` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cname` varchar(40) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `homework`.`tb_course`
--

/*!40000 ALTER TABLE `tb_course` DISABLE KEYS */;
INSERT INTO `tb_course` (`id`,`cname`) VALUES 
 (10,'Java框架开发技术'),
 (11,'java程序设计基础');
/*!40000 ALTER TABLE `tb_course` ENABLE KEYS */;


--
-- Table structure for table `homework`.`tb_exercise`
--

DROP TABLE IF EXISTS `tb_exercise`;
CREATE TABLE `tb_exercise` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `kind` varchar(1) NOT NULL COMMENT '题的类型：1为选择题，2 为填空题 ，3为问答题',
  `content` varchar(3000) NOT NULL COMMENT '目题内容',
  `answer` varchar(6000) DEFAULT NULL COMMENT '目题答案',
  `chapter` varchar(2) NOT NULL COMMENT '章节',
  `course_id` int(11) NOT NULL COMMENT '程课表关联外键',
  `tea_id` int(11) NOT NULL COMMENT 'tb_teacher表的外键',
  PRIMARY KEY (`id`),
  KEY `tea_id` (`tea_id`),
  KEY `tb_exercise_couse` (`course_id`),
  CONSTRAINT `tb_exercise_couse` FOREIGN KEY (`course_id`) REFERENCES `tb_course` (`id`),
  CONSTRAINT `tb_exercise_ibfk_1` FOREIGN KEY (`tea_id`) REFERENCES `tb_teacher` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=140 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `homework`.`tb_exercise`
--

/*!40000 ALTER TABLE `tb_exercise` DISABLE KEYS */;
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (32,'3','实验一','再添','2',10,13),
 (39,'1','struts2配置文件的名字是：\r\nA.web.xml  B.struts.xml C.struts2.xml D.applicationcontext.xml','B','2',10,13),
 (40,'2','struts.xml文件的interceptors元素用于定义拦截器集合的元素，它可以有多个_________________子元素。','interceptor','3',10,13),
 (41,'1','在struts开发过程中，程序员要开发的组件主要是：\r\nA.web.xml 、struts.xml、 Action  ； B.struts.xml、 Action 、 JSP ；  C.struts.xml 、Action ； D.Interceptor struts.xml Action','B','2',10,13),
 (42,'2','在struts2开发过程中，框架的入口是FilterDispatcher这个过滤器，要在web服务中配置这个filter,应在____________文件中配置','web.xml','2',10,13),
 (43,'2','struts.xml配置文件中有很多的标签，这些标签之间是存在关联的，最常用的是Action标签，这个标签的父标签是______________','package','2',10,13),
 (44,'1','在struts.xml文件中的result标签的父标签是：\r\nA.interceptors    B.package   C.action   D.interceptor','C','2',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (45,'1','下面是struts.xml配置文件的片段：\r\n<struts>\r\n  <package name=\"bookcode\" extends=\"struts-default\">\r\n     <action  name=\"HelloWorld\" class=\"com.HelloWorld\" method=\"login\" >\r\n         <result name=\"success\">/success.jsp</result>\r\n         <result name=\"error\">/error.jsp</result>\r\n     </action>    \r\n  </package>\r\n</struts>\r\n其中的method=\"login\"的作用是：\r\nA. 提交给Login类  B.提交给HelloWorld类的login方法  C.在jsp页面中要有一个name的值为login的控件 D.login方法的返回类型是void','B','2',10,13),
 (46,'1','struts2中的多方法调用是指：\r\nA.一个Action类中有多个方法  B.多个请求对应多个类  C.一个类可有多个方法处理多个请求  D.一个请求对应多个类','C','2',10,13),
 (47,'1','有如下的struts.xml配置片段：\r\n<struts>\r\n  <package name=\"bookcode\" extends=\"struts-default\">\r\n     <action  name=\"reg\" class=\"com.UserAction\" method=\"reg\" >\r\n         <result name=\"success\" type=\"chain\">login</result>\r\n         <result name=\"error\">/error.jsp</result>\r\n     </action>    \r\n     <action  name=\"login\" class=\"com.UserAction\" method=\"login\" >\r\n         <result name=\"success\" >/success.jsp</result>\r\n         <result name=\"error\">/error.jsp</result>\r\n     </action>    \r\n  </package>\r\n</struts>\r\n代码中 type=\"chain\"的含义是：\r\nA.当请求reg.action处理成功后跳转到login.jsp页面   B.当请求reg.action处理成功后跳转到success.jsp  \r\nC.当请求reg.action处理成功后跳转到error.jsp页面   D.当请求reg.action处理成功后跳转到名为\"login\"的action','D','2',10,13),
 (48,'3','实验二',NULL,'2',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (49,'1','在struts2中的文本框的标签是\r\nA.input   B.textfield   C.password  D.text','B','3',10,13),
 (50,'1','struts2中的复选框chckboxlist标签list属性的值不可以是如下的哪种\r\nA.String  B.List C.Map D.ArrayList','A','3',10,13),
 (51,'2','在JSP页面中有如下的代码：\r\n<s:select label=\"最高学历\" name=\"education\" list=\"{\'高中\',\'大学\',\'硕士\',\'博士\'}\"\r\n				headerKey=\"-1\" headerValue=\"请选择您的学历\" />\r\n在struts2框架中接收这个请求的类是UserAction类，要求在类中接收到这个请求的成员变量的名称是：___________','education','3',10,13),
 (52,'1','迭代标签iterator的作用是：\r\nA.在JSP页面只能输出Map型的变量的值；    B.在JSP页面只能输出List型的变量 ；\r\nC.既能输出Map型的也能输出List型的变量； D.只能输出request对象中的值；','C','3',10,13),
 (53,'3','如果有如下的一个User类和Action类\r\npublic User{\r\n private String username;\r\n private String password;\r\n//set和get方法省略\r\n}\r\n\r\npublic UserAction {\r\n   private List list;\r\n//set和get方法省略\r\n  public String execute(){\r\n   list=new ArrayList();\r\n   User user1=new User();\r\n   User user2=new User();\r\n}\r\n}\r\n现要在jsp页面中输出成员变量list集合的值，请给出用标签iterator实现的代码','<iterator value=\"list\" >\r\n  <property value=\"username\">\r\n  <property value=\"password\">\r\n</iterator>','3',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (54,'3','实验三struts2标签的应用',NULL,'3',10,13),
 (55,'2','以下代码运行后得到的输出结果是什么？\r\nint output=10;\r\nboolean b1 = false;\r\nif((b1==true) && ((output+=10)==20)){\r\nSystem.out.println(\"We are equal \"+output);\r\n}\r\nelse{\r\nSystem.out.println(\"Not equal! \"+output);\r\n}\r\n','Not equal! 10','2',11,13),
 (56,'2','以下代码运行后的输出结果是什么？\r\nint output=10;\r\nboolean b1 = false;\r\nif((b1=true) && ((output+=10)==20)){\r\nSystem.out.println(\"We are equal \"+output);\r\n}\r\nelse{\r\nSystem.out.println(\"Not equal! \"+output);\r\n}\r\n','We are equal 20','2',11,13),
 (57,'2','运行以下程序，将得到的输出结果是什么？\r\npublic class Abs{\r\nstatic int a=0x11;\r\nstatic int b=0011;\r\nstatic int c=\'\\u0011\';\r\nstatic int d=011;\r\npublic static void main(String args[]){\r\nSystem.out.println(a);\r\nSystem.out.println(b);\r\nSystem.out.println(c);\r\nSystem.out.println(d);\r\n}\r\n}\r\n','17  9   17   9','2',11,13),
 (58,'1','第一题','节能','2',11,14);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (59,'1','第二师','ABCD','2',11,14),
 (60,'2','分析下列代码段，i、count变量的最终取值是什么？\r\nint i=3;\r\n     int count=(i++)+(i++)+(i++);\r\n','6 12','2',11,13),
 (61,'2','字符‘A’的Unicode 编码为65。下面代码没有正确定义这的选项是哪个？\r\nA) char ch = 65;        B) char ch = \'\\65\';  C) char ch = \'A\';        D)char ch = \"A\";\r\n','D','2',11,13),
 (62,'3','编写程序，对A[]={30，1，-9，70，25}数组由小到大排序。','public class booktest {\r\n	public static void main(String[] args) {\r\n	 int a[]={30,1,-9,70,25};\r\n	 System.out.print(\"数组原始顺序：\");\r\n	 for (int i=0;i<a.length;i++) System.out.print(a[i] + \" \");  \r\n	 for (int i = 0; i < a.length; i++) {    \r\n	      int lowerIndex = i;    \r\n	      for (int j = i + 1; j < a.length; j++) \r\n		       if (a[j] < a[lowerIndex]) lowerIndex = j;    \r\n		   int temp = a[i];    \r\n	   a[i] = a[lowerIndex];    \r\n		   a[lowerIndex] = temp;    \r\n	     }\r\n	  System.out.print(\"\\n数组排序后的顺序： \");\r\n		 for (int i=0;i<a.length;i++) System.out.print(a[i] + \" \");    \r\n	  }    \r\n}    \r\n','3',11,13),
 (63,'2','运行下面代码将输出什么内容？ \r\n      int i=1;\r\n      switch(i){\r\ncase 0: System.out.println(\"zero\");\r\n               break;\r\ncase 1:  System.out.println(\"one\");\r\n               break;\r\ncase 2:  System.out.println(\"two\");\r\n               break;\r\ndefault:  System.out.println(\"default\");\r\n      }\r\n','one','3',11,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (64,'3','编写程序，求2-1000内的所有素数，并按每行5列的格式输出。','public class PrimeTest{\r\n	    public static void main(String args[]) {\r\n	    	int num=2;\r\n	    	System.out.print(2 + \" \");	    	\r\n	        for(int i=3;i<=1000;i+=2){ \r\n	            boolean f = true;        \r\n	            for (int j=2;j<i;j++) {     \r\n	              if(i % j == 0){\r\n	                  f= false;            \r\n	                  break;\r\n	                }\r\n	            }\r\n	            if(!f) {continue;}      \r\n	            System.out.print(i + \" \");\r\n	            if(num++%5 == 0)System.out.println();\r\n	          }\r\n	       }\r\n	    }\r\n','3',11,13),
 (65,'3','编写程序，产生30个素数，按从小到大的顺序放入数组prime[]中','public class PrimeArray {\r\n		  public static void main(String args[]) {			  \r\n                int[] primearry=new int[30];			  \r\n                primearry[0]=2;\r\n		    	int num=1;\r\n		    	System.out.print(2 + \" \");	    	\r\n		        for(int i=3;i<=1000;i+=2){ \r\n		            boolean f = true;        \r\n		            for (int j=2;j<i;j++) {     \r\n		              if(i % j == 0){\r\n		                  f= false;            \r\n		                  break;\r\n		                }\r\n		            }\r\n		            if(!f) {continue;}      \r\n		            primearry[num++]=i;\r\n			            System.out.print(i + \" \");\r\n		            if(num%5 == 0)System.out.println();\r\n		            if(num==30)break;\r\n		        }\r\n		    }\r\n		}\r\n','3',11,13),
 (66,'2','方法重载指一个类中有多个方法享有__________，但是这些方法的参数必须不同，或者是参数的个数不同。\r\n','相同的名字','4',11,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (67,'1','Java中有一种特殊的方法叫构造方法，构造方法具有和类名相同的名称，如果有一个类的名字是Person，\r\n\r\n则该类的构造方法是：\r\n\r\nA.public void Person(){}  　B.public String Person(){}\r\n\r\nC.public int Person(){} 　　D.public Person(){}','D','4',11,13),
 (68,'1','有如下的代码：\r\n\r\nclass Point{\r\n\r\n	int x,y; \r\n\r\n	Point(){\r\n\r\n		x=0;\r\n\r\n		y=0;\r\n\r\n	}\r\n\r\n	Point(int x,int y){\r\n\r\n		this.x=x;\r\n\r\n		this.y=y;\r\n\r\n	}\r\n\r\n	 }\r\n\r\npublic class TestPoint{\r\n\r\n  public static void main(String[] args){\r\n\r\nPoint p1=new Point(34,56);\r\n\r\nPoint p2=new Point(21,67) ;\r\n\r\np1=p2;\r\n\r\n}\r\n\r\n}\r\n\r\n对于语句p1=p2下面说法正确的是：\r\nA.将p2对象的内容复制到了p1 B.将p1对象的内容复制到了p2\r\n\r\nC.p1和p2指向同一个对象     D.p1指向了p2同时p2为null','C','4',11,13),
 (69,'2','Java中，所有的类都是通过直接或间接继承______________类得到的。','java.lang.Object','4',11,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (70,'2','如果Teacher类是Person类的子类，如下是Teacher类的代码，请填空\r\n\r\npublic class Teacher _______________ Person','extends','4',11,13),
 (71,'2','有如下的代码：\r\n\r\nclass superClass{\r\n\r\n  int x;\r\n\r\n superClass( ){\r\n\r\n    x=3;\r\n\r\n  }\r\n\r\n void doSomething( ){\r\n\r\n    System.out.println(\"in superClass.doSomething( )\");\r\n\r\n  }\r\n\r\n}\r\n\r\nclass subClass extends superClass{\r\n\r\n  int x;\r\n\r\n  subClass( ){\r\n\r\n      x = 5;\r\n\r\n     System.out.println(\"in subClass : x = \"+x);\r\n\r\n   }\r\n\r\n代码中是否存在成员变量的隐藏，如果存在隐藏的成员变量，请给出变量的名字，并说明为什么\r\n','x是隐藏的成员变量，因为在父类和子类中有同名的变量。','4',11,13),
 (72,'2','super关键字的作用在子类中调用被隐藏的父类的方法或被__________父类的变量。','隐藏','4',11,13),
 (73,'1','上转型对象的正确说法是：\r\n\r\nA.父类的引用变量指向子类的对象　B.子类的引用变量指向父类的对象\r\n\r\nC.父类的引用变量指向父类的对象　C.子类的引用变量指向子类的对象','A','4',11,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (74,'1','Java中运行时多态在下面哪种情况下才能存在：\r\n\r\nA.子类引用变量指向父类的对象　B.父类引用变量指向子类对象\r\n\r\nC.子类引用变量指向子类的对象　C.父类引用变量指向父类的对象','B','4',11,13),
 (75,'2','Java中一个类可以有___个父类。','1','4',11,13),
 (76,'3','创建一个桌子(Table)类，该类中有桌子名称、重量、桌面宽度、长度和桌子高度属性，以及以下几个方法：\r\n	 (1) 构造方法：初始化所有成员变量。\r\n	 (2)  area( )：计算桌面的面积。\r\n	 (3)  display( )：在屏幕上输出所有成员变量的值。\r\n	 (4)  changeWeight(int w)：改变桌子重量。\r\n	在测试类的main()方法中实现创建一个桌子对象，计算桌面的面积，改变桌子重量，并在屏幕上输出所有桌子属性的值。\r\n','public class Table {\r\n     String name;//名称\r\n     double weight;//重量\r\n     double width;//宽\r\n     double longth;//长\r\n     double height;//高\r\n  //构造方法\r\n public Table(String name, double weight, double width, double longth,\r\n   double height) {\r\n  super();\r\n  this.name = name;\r\n  this.weight = weight;\r\n  this.width = width;\r\n  this.longth = longth;\r\n  this.height = height;\r\n }\r\n    //计算桌面的面积 \r\n public void area(){\r\n  System.out.println(\"桌子面积是\"+longth*width); \r\n }\r\n // 在屏幕上输出所有数据成员的值\r\n public void display(){  \r\n  System.out.println(\"桌子名称:\"+name+\"\\n\"+\"重量:\"+weight+\"\\n\"+\"宽:\"+width+\"\\n\"+\"长:\"+longth+\"\\n高:\"+height);\r\n }\r\n //改变桌子重量的方法\r\n public void changeWeight(int i){\r\n  this.weight=i;\r\n  System.out.println(\"面积改为\"+this.weight);\r\n }\r\n public static void main(String[] args) {\r\n  Table table=new Table(\"红木桌\",100.5,3.2,2.3,1.5);\r\n  System.out.println(\"创建一个桌子对象，属性如下\");\r\n  table.display();\r\n        table.area();\r\n        table.changeWeight(100);\r\n        System.out.println(\"更改重量后，属性如下\");\r\n        table.display();        \r\n }\r\n}\r\n','4',11,13),
 (77,'2','拦截器（Interceptor）是__________框架的核心组成部分，框架的很多功能都是构建在拦截器基础之上的。','struts2','4',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (78,'1','在struts.xml配置文件中有如下的配置\r\n\r\n<action name=\"reg\" class=\"com.LoginAction\">\r\n\r\n   ......\r\n\r\n   <interceptor-ref name=\"helloWorld\">\r\n\r\n</action>\r\n\r\n代码中的\"helloWorld\"是指：\r\n\r\nA.已定义的action   B.是jsp文件的名字  C.是已经定义的名为helloWorld的拦截器 D.已定义的一个类','C','4',10,13),
 (79,'2','自定义的拦截器必须实现的父类是_______________\r\n\r\nA.ActionSupport   B.Action  C.Interceptor  D.AbstractInterceptor','D','4',10,13),
 (80,'1','在struts2中要实现国际化必须在配置文件添加如下的语句\r\n\r\n<constant name=\"struts.custom.i18n.resources\" value=\"messageResource\"/>\r\n\r\n其中\"messageResource\"，则中文资源包的名字应为\r\n\r\nA.messageResource_en_US.properties　B.messageResource_cn_ZH.properties \r\n\r\nC.messageResource_cn.EN.properties  D.messageResource_zh_CN.properties','D','4',10,13),
 (81,'1','struts2的校验框架是将所有的校验规则都写在一个方件中，这个文件的扩展名是：\r\n\r\nA.properties  B.class C.xml D.jsp','C','4',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (82,'1','在校验规则文件中有如下的代码：\r\n\r\n<field-validator type=\"requiredstring\">\r\n\r\n　　<message key=\"password.requried\" />\r\n\r\n</field-validator>\r\n\r\n这个校验规则的含义是：\r\n\r\nA.整数不能为空　B.字段不能为空　C.日期不能为空　D.字符串不能为空','D','4',10,13),
 (83,'2','阅读下列程序，分析程序的输出结果什么？\r\nabstract class Base{\r\nabstract public void myfunc();\r\npublic void another(){\r\nSystem.out.println(\"Another method\");\r\n}\r\n}\r\npublic class Abs extends Base{\r\npublic static void main(String argv[]){\r\nAbs a = new Abs();\r\na.amethod();\r\n}\r\npublic void myfunc(){\r\nSystem.out.println(\"My func\");\r\n}\r\npublic void amethod(){\r\nmyfunc();\r\n}\r\n}\r\n','My func','4',11,13),
 (84,'2','分析以下代码，编译时会出现的错误信息是什么？\r\nclass A{\r\nprivate int secret;\r\n}\r\npublic class Test{\r\npublic int method(A a){\r\nreturn a.secret++;\r\n}\r\npublic static void main(String args[]){\r\nTest test=new Test();\r\nA a=new A();\r\nSystem.out.println(test.method(a));\r\n}\r\n}\r\n','return a.secret++; 出错 secret不可见\r\n','4',11,13),
 (85,'2','public class Test19 {       \r\n          public static void changeStr(String str){    \r\n                str=\"welcome\";    \r\n           }    \r\n     public static void main(String[] args) { \r\n               String str=\"1234\";    \r\n               changeStr(str);    \r\n               System.out.println(str);    \r\n           }    \r\n}   \r\n','1234','4',11,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (86,'2','分析以下程序，写出运行结果。\r\npublic class Test20 {    \r\n     static boolean foo(char c) {    \r\n          System.out.print(c);    \r\n          return true;    \r\n     }    \r\n     public static void main(String[] args) {    \r\n             int i = 2;    \r\n            for (foo(\'A\'); foo(\'B\') && (i < 4); foo(\'C\')) {    \r\n                i++;    \r\n                foo(\'D\');    \r\n        }    \r\n     }    \r\n}   \r\n','ABDCBDCB','4',11,13),
 (87,'3','编写程序，要求创建一个Dog类，添加name,eyeColor属性，为该属性自动添加相应的set和get方法，并给出至少两个构造方法。','public class Dog { \r\nprivate String name, eyeColor; \r\n// 无形参的构造方法\r\npublic Dog (){ \r\nthis. name =\"逗逗\"; \r\nthis. eyeColor = \"黑\"; \r\n} \r\n// 有形参的构造方法\r\npublic Dog(String name, String eyeColor ){ \r\nthis. name = name; \r\nthis. eyeColor = eyeColor; \r\n}\r\npublic String getEyeColor() {\r\n	     return eyeColor;\r\n}\r\npublic void setEyeColor(String eyeColor) {\r\n	    this.eyeColor = eyeColor;\r\n}\r\npublic String getName() {\r\n	   return name;\r\n}\r\npublic void setName(String name) {\r\n	   this.name = name;\r\n} \r\n}\r\n','4',11,13),
 (88,'3','统计一个字符串中出现某个字母的次数(注意区分大小写)。String类中的相关方法（具体用法请查看JDK帮助文档）：\r\nlength( )：计算字符串长度，得到一个int型数值；\r\nindexOf( )：在字符串中定位某个子串，并返回位置编号\r\nsubstring( )：截取字符串中的一部分，并作为一个新字符串返回；\r\nequals( )：比较两个String内容是否完全相同。\r\n','String str = \"abckajbfhbbkhfgabkbjkdfasjkbdanjkasfbai\";\r\nString chr = \"b\";\r\nint count = 0;\r\nfor (int i = 0; i < str.length(); i++) {\r\nif (chr.equals(str.charAt(i))) count++;\r\n}\r\nSystem.out.println(\"The count is \" + count);\r\n','4',11,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (89,'3','什么是ORM?','是Object/Relation Mapping的缩写，表示对象关系映射。','5',10,13),
 (90,'3','SessionFactory与Session的关系如何？SessionFactory是否是线程安全的？','Session是通过SessionFactory生成，SessionFactory是线程安全的。','5',10,13),
 (91,'3','如果使用的数据库为MySql，数据库名为homework，数据库用户名为root，密码：123456，给出hibernate.cfg.xml的配置文件。xml文件头的DTD内容可以不写。','<hibernate-configuration>\r\n	<session-factory>\r\n	<property name=\"connection.username\">root</property>\r\n		<property name=\"connection.url\">jdbc:mysql://localhost:3306/testdb\r\n	</property>\r\n	<property name=\"dialect\">org.hibernate.dialect.MySQLDialect\r\n	</property>\r\n	<property name=\"connection.password\">11</property>\r\n	<property name=\"connection.driver_class\">com.mysql.jdbc.Driver\r\n	</property>\r\n\r\n	</session-factory>\r\n</hibernate-configuration>\r\n','5',10,13),
 (92,'2','Hibernate中持久化对象有三个状态，分别是：顺态、持久化和_______','脱管','5',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (93,'1','在有如下的Hibernate映射文件代码片段：\r\n  <class name=\"com.entity.Department\" table=\"department\" catalog=\"testdb\">\r\n        <id name=\"depId\" type=\"java.lang.Integer\">\r\n            <column name=\"depId\" />\r\n            <generator class=\"\" />\r\n        </id>\r\n       \r\n   </class>\r\n其中generator元素的属性class用于设置主键的生成方式，如果要设置主键生成方式为根据不同的数库据选择相应自动增长的方式，\r\n则class的值为：\r\nA.hilo B.assigned C.sequence D.native','D','5',10,13),
 (94,'1','有关Hibernate瞬时对象状态说法正确的是多选\r\n\r\nA、瞬时状态的对象具有OID，与Session对象关联\r\n\r\nB、瞬时状态的对象具有OID，不与Session对象关联\r\n\r\nC、瞬时状态的对象不具有OID，与Session对象关联\r\n\r\nD、瞬时状态的对象不具有OID，不与Session对象关联','B','5',10,13),
 (95,'2','下面是HibernateSessionFactory类的代码片段,请填空完善程序\r\npublic static Session getSession() throws HibernateException {\r\n		Session session = (Session) threadLocal.get();\r\n\r\n		if (session == null || !session.isOpen()) {\r\n			if (sessionFactory == null) {\r\n				rebuildSessionFactory();\r\n			}\r\n			session = (sessionFactory != null) ? ________________\r\n					: null;\r\n			threadLocal.set(session);\r\n		}\r\n\r\n		return session;\r\n	}','sessionFactory.openSession()','5',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (96,'2','下面是用Hibernate操作Department实体的类，代码的功能是将dep对象保存到数据库中，请完善代码。\r\npublic class DepartmentDao {\r\n	Configuration conf = new Configuration().configure();// 创建Configuration对象，得到配置文件的信息\r\n	SessionFactory sf = conf.buildSessionFactory();// 创建一个SessionFactory实例，一个数据库只能有一个\r\n\r\n	public void insertDep(Department dep) { // 将对象 dep插入数据库\r\n		Session session = sf.openSession();// 得到一个session 对象\r\n		Transaction tx = null; // 声明一个事务\r\n		try {\r\n			tx = session.beginTransaction();// 开始一个事务\r\n			dep.setDepName(\"计算机12011\");// 为对象部门名称设置属性\r\n\r\n			___________\r\n			tx.commit();// 提交事务\r\n		} catch (Exception e) {\r\n			if (tx != null) {\r\n				tx.rollback();// 如果有异常，回滚数据库\r\n			}\r\n			e.printStackTrace();\r\n		} finally {\r\n			session.close();// 关闭session，此时dep对象变为脱管状态，不再与表department关联\r\n\r\n		}\r\n\r\n	}','session.save(dep)','5',10,13),
 (97,'1','下面是department表的映射文件，有关<set　name=\"users\" >标签中的users描述正确的是：\r\n<hibernate-mapping>\r\n    <class name=\"com.entity.manytomany.Department\" table=\"department\" catalog=\"testdb\">\r\n        <id name=\"depId\" type=\"java.lang.Integer\">\r\n            <column name=\"depId\" />\r\n            <generator class=\"identity\" />\r\n        </id>\r\n        <property name=\"depName\" type=\"java.lang.String\">\r\n            <column name=\"depName\" length=\"45\" not-null=\"true\" />\r\n        </property>\r\n        <set name=\"users\" inverse=\"true\" >\r\n            <key column=\"depId\" not-null=\"true\" />\r\n            <one-to-many class=\"com.entity.manytomany.User\" />\r\n        </set>\r\n    </class>\r\n</hibernate-mapping>\r\nA.表示在User类中有一个类型为Set变量名为users的成员变量\r\nB.表示在Department类中有一个类型为Set变量名为users的成员变量\r\nC.表示department表中字段的名字是users\r\nD.表示department表中的外键名字','B','5',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (98,'1','下面是user表的映射文件，在标签<generator class=\"identity\" />中的class属性的作用是：\r\n<hibernate-mapping>\r\n    <class name=\"com.entity.manytomany.User\" table=\"user\" catalog=\"testdb\">\r\n        <id name=\"usrId\" type=\"java.lang.Long\">\r\n            <column name=\"usr_id\" />\r\n            <generator class=\"identity\" />\r\n        </id>\r\n        <property name=\"usrDesc\" type=\"java.lang.String\">\r\n            <column name=\"usr_desc\" length=\"50\" not-null=\"true\" />\r\n        </property>\r\n        <property name=\"sex\" type=\"java.lang.String\">\r\n    A.user表的关联类的名字　B.表的外键　　C.表的主键　D.主键的生成方式','D','5',10,13),
 (99,'1','在用Hibernate操作数据库是，出现如下的错误信息，可能的错误原因是：\r\n[org.hibernate.connection.DriverManagerConnectionProvider]-[FATAL] JDBC Driver class not found: com.mysql.jdbc.Driver\r\njava.lang.ClassNotFoundException: com.mysql.jdbc.Driver\r\nA.数据库驱动连接的URL错误　\r\nB.连接的数据库不存在\r\nC.找不到数据库的驱动\r\nD.数据库的名字不对','C','5',10,13),
 (100,'3','有如下的两个表的结构\r\ndepartment表的结构\r\n字段名	数据类型	说明\r\ndepId	INTEGER	     表的主键\r\ndepName	VARCHAR	     班级名称\r\n\r\n\r\nuser表的结构\r\n字段名	        数据类型	说明\r\nusr_id	        Bigint	        表的主键\r\nusr_no	        VARCHAR(45)	学号\r\nusr_password	VARCHAR(45)	密码\r\ndepId	        Integer	　　　　班级ID（外键）\r\nusr_desc	VARCHAR(45)	学生姓名\r\nsex	        VARCHAR(2)	性别\r\nAge     	Integer	        年龄\r\n这两个表是一对多的关系，请写出departemnt表的映射文件department.hbm.xml','<hibernate-mapping>\r\n    <class name=\"com.entity.Department\" table=\"department\" catalog=\"testdb\">\r\n        <id name=\"depId\" type=\"java.lang.Integer\">\r\n            <column name=\"depId\" />\r\n            <generator class=\"identity\" />\r\n        </id>\r\n        <property name=\"depName\" type=\"java.lang.String\">\r\n            <column name=\"depName\" length=\"45\" not-null=\"true\" />\r\n        </property>\r\n<!—映射集合属性，集合元素是其他持久化实体-->\r\n        <set name=\"users\" inverse=\"true\" lazy=”true”>\r\n<!—指定关联的外键--> \r\n            <key>\r\n                <column name=\"depId\" not-null=\"true\" />\r\n            </key>\r\n<!—映射到关联类属性\r\n            <one-to-many class=\"com.entity.User\" />\r\n        </set>\r\n    </class>\r\n</hibernate-mapping>\r\n','6',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (101,'2','下面的代码是将User表中的“李丽”所在班级“软件2012002”改为“软件2012003”，从数据库表中查得\"软件2012003\"的ID为1117。\r\nTestUpdateDepartment.java\r\npublic class TestUpdateDepartment {\r\n	public static void main(String[] args) {\r\n		Session session = com.dao.HibernateSessionFactory.getSession();\r\n		Transaction tx = null;//声明一个事务\r\n		try {\r\n			tx = session.beginTransaction();//开始一个事务\r\n			//查找姓名为李丽的学生，因为她的ID为5\r\n			_____________________________________\r\n			//查找班级“软件2012003”，因为他的ID为1117\r\n			Department dep=(Department)session.get(Department.class,1117);\r\n			user.setDepartment(dep);//修改关联关系\r\n			session.update(user);//通过Hibernate更新数据库\r\n			tx.commit(); //提交\r\n		} catch (Exception e) {\r\n			if (tx != null) {\r\n				tx.rollback();\r\n			}\r\n			e.printStackTrace();\r\n		} finally {\r\n			session.close();\r\n		}\r\n	}\r\n}\r\n请在下划线处添入正确的代码\r\n','User user=(User)session.get(User.class,new Long(5));','6',10,13),
 (102,'2','下面是三个表的数据结构\r\n表6-2 user表的结构\r\n字段名	　　　　数据类型	说明\r\nusr_id　　	Bigint	　　　　表的主键\r\nusr_no	　　　　VARCHAR(45)	学号\r\nusr_password	VARCHAR(45)	密码\r\ndepId	　　　　Integer	　　　　班级ID\r\nusr_desc	VARCHAR(45)	学生姓名\r\nsex	　　　　VARCHAR(2)	性别\r\nAge	　　　　Integer　　	年龄\r\n表6-3 course表的结构\r\n字段名　	数据类型	说明\r\nId	　　　　INTEGER	　　　　表的主键\r\nCname	　　　　VARCHAR	　　　　课程名称\r\n表6-4 usr_course表的结构\r\n字段名	　　　数据类型	说明\r\nusr_Id	　　　BIGINT	user表的主键\r\nCourse_id　　　INTEGER	Course表的主键\r\nuser表和course表是多对多的关系，下面是course表的映射文件course.hbm.xml内容如下　：\r\ncourse.hbm.xml文件\r\n<hibernate-mapping>\r\n    <class name=\"com.entity.manytomany.Course\" table=\"course\" catalog=\"testdb\">\r\n        <id name=\"id\" type=\"java.lang.Integer\">\r\n            <column name=\"id\" />\r\n            <generator class=\"native\"></generator>\r\n        </id>\r\n        <property name=\"cname\" type=\"java.lang.String\">\r\n            <column name=\"cname\" length=\"45\" not-null=\"true\" />\r\n        </property>\r\n        <set name=\"users\" inverse=\"true\" table=\"usr_course\" catalog=\"testdb\">\r\n            _______________________________\r\n            <many-to-many class=\"com.entity.manytomany.User\" \r\ncolumn= \"usr_id\"/>\r\n        </set>\r\n</class>\r\n</hibernate-mapping>\r\n请在下划线处添加正确的代码。','<key column =\"course_id\" />','6',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (103,'3','创建一个接口，要求接口有两个方法，并实现这个接口。','interface people\r\n{\r\n	void country();\r\n	void language();\r\n}\r\n\r\n\r\npublic class Chinese implements people\r\n{\r\n	public void country()\r\n	{\r\n		System.out.println(\"国家：China\");\r\n	}\r\n	\r\n	public void language()\r\n	{\r\n		System.out.println(\"语言：Chinese\");\r\n	}\r\n	public static void main (String[] args)\r\n	{\r\n		Chinese S1=new Chinese();\r\n		S1.country();\r\n		S1.language();\r\n	}\r\n}\r\n\r\n					   \r\n					   \r\n					   \r\n					','5',11,13),
 (104,'3','创建一个抽象类，类中至少有一个抽象方法，并创建这个抽象类的子类，写出测试方法。','//定义抽象的shape类，其子类具有计算面积的功能\r\nabstract class shape{\r\n	public abstract double area();\r\n}\r\nclass trapezoid extends shape{\r\n	double a,b,h;\r\n	trapezoid(double a,double b,double h){\r\n		this.a = a;this.b = b;this.h = h;\r\n	}\r\n	public double area() {\r\n		return ((1/2.0)*(a+b)*h);\r\n	}\r\n	\r\n}\r\nclass circle extends shape{\r\n	double r;\r\n	circle(double r){\r\n		this.r = r;\r\n	}\r\n	public double area() {\r\n		return(3.14*r*r);\r\n	}\r\n}\r\npublic class Area {\r\n\r\n	public static void main(String[] args) {\r\n		shape tuxing;\r\n		tuxing = new trapezoid(2.0,7.0,10.7);\r\n		System.out.println(\"梯形的面积：\"+tuxing.area());\r\n		shape yuan;\r\n		yuan = new circle(66);\r\n		System.out.println(\"圆的面积是：\"+yuan.area());\r\n\r\n	}\r\n\r\n}\r\n					   \r\n	','5',11,13),
 (105,'1','关于抽象类，下列说法错误的是（）\r\nA.      抽象类中可以存在普通方法和抽象方法\r\n\r\nB.      抽象类中可以存在属性\r\n\r\nC.      抽象类可以实例化\r\n\r\nD.      一个普通类继承抽象类必须实现抽象类中的所有抽象方法','C','5',11,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (106,'1','在java接口中，下列属于有效方法声明的是（）\r\n\r\nA.      public void aMethod();    \r\n\r\nB.      protected void aMethod();\r\n\r\nC.      void aMethod(){}         \r\n\r\nD.      private void aMethod();','A','5',11,13),
 (107,'1',' 在java语言中，使用下列哪个关键字定义的类，不能被继承（）\r\n\r\nA.      class\r\n\r\nB.      static\r\n\r\nC.      final\r\n\r\nD.      abstract','C','5',11,13),
 (108,'1','关于接口以下说法正确的是：：\r\n\r\nA 接口的构造方法名必须为接口名。\r\n\r\nB 一个接口可以继承多个父接口；\r\n\r\nC 接口中只能声明变量，不能声明常量\r\n\r\nD 接口中的方法必须用public abstract两个修饰符修饰；','B','5',11,13),
 (109,'1','Hibernate中有关两个表关联的说法正确的是：\r\nA.一对多必须用set映射　\r\nB.多对一必须用set映射\r\nC.一对多可以用set映射，也可以用map和list映射\r\nD.多对一可以用set映射，也可以用map和list映射','C','6',10,13),
 (110,'1','下面关于Hibernate中Session的说法正确的是（）\r\nA.Session和struts2中的Session是一样的\r\nB.Session是重量级的，不能随意的创建和销毁\r\nC.Session是线程安全的\r\nD.Session不是线程安全的','D','5',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (111,'2','Hibernate提供了两种检索策略,他们分别是：延迟检索策略和____________。','迫切左外连接检索策略','7',10,13),
 (112,'1','类级别的检索不包括：\r\nA.立即检索 B.延迟检索 C.迫切左外连接检索 D.以上都不包括\r\n\r\n','C','7',10,13),
 (113,'1','关联级别的检索下面说明正确的是：\r\nA.立即检索   B.延迟检索   C.迫切左外连接检索 D.以上都包括\r\n','D','7',10,13),
 (114,'2','Hibernate中设置检索策略是通过set标签中的____________个属性设置的。','lazy','7',10,13),
 (115,'2','Hibernate主要有以下几种检索方式:（1）OID检索方式（2）HQL检索方式（3）_________','QBC检索方式','7',10,13),
 (116,'3','有如下的一个实体类\r\npublic class User implements java.io.Serializable {\r\n	private Long usrId;\r\n	private Department department;\r\n	private String usrName;\r\n	private String usrPassword;\r\n	private String usrDesc;}\r\n查询姓名为“李丽”，年龄为21岁的User对象，写出用HQL实现查询的完整代码。\r\n通过Session session = com.dao.HibernateSessionFactory.getSession();语句可以\r\n得到一个Session','public static void main(String[] args) {\r\n		Session session = com.dao.HibernateSessionFactory.getSession();\r\n　　　　　　　　//生成HQL查询字符串，其中的User是类的名字，usrDesc是类的属性，注意大小写\r\n		String hql=\"from User as u where u.usrDesc=:cname and u.age=:age\";\r\n		Query query=session.createQuery(hql);//创建Query对象\r\n		query.setString(\"cname\",\"李丽\"); //动态参数绑定\r\n		query.setInteger(\"age\",21);\r\n		List result=query.list(); //得到查询结果集合\r\n		Iterator it=result.iterator();\r\n			while(it.hasNext()){\r\n				User user=(User)it.next();\r\n				System.out.println(user.getUsrDesc());\r\n			}\r\n			session.close();\r\n		}\r\n','7',10,13),
 (117,'3','department表所对应的实体类如下：\r\npublic class Department implements java.io.Serializable {\r\n	private Integer depId;\r\n	private String depName;\r\n	private Set users = new HashSet(0);\r\n//set和get方法省略\r\n}\r\nuser表对应的实体类如下：\r\npublic class User implements java.io.Serializable {\r\n	private Long usrId;\r\n	private Department department;\r\n	private String usrName;\r\n	private String usrPassword;\r\n	private String usrDesc;\r\n//set和get方法省略\r\n}\r\n两个表已经通过Hibernate的映射文件建立了关联，请写出完成下列操作的代码。\r\n用HQL查询user表中学生姓名为张红的学生,并在控制台上打印出学生的姓名和所在班级的名称。\r\n可以通过下面语句得到Session。\r\nSession session = HibernateSessionFactory.getSession();','public static void main(String[] args) {\r\n		Session session =HibernateSessionFactory.getSession();\r\n		     Query query=session.createQuery(\"select u.department,u from User u　whrere u.userName=\'张红\' \");\r\n		List users=query.list();\r\n		Iterator it=users.iterator();\r\n		int i=0;\r\n			if(it.hasNext()){\r\n				Object[] obj=(Object[])it.next();\r\n	        System.out.println(((Department)obj[0]).getDepName()+\" \" +((User)obj[1]).getUsrDesc());\r\n			}else\r\n                System.out.println(\"没找到\");\r\n			session.close();\r\n		}\r\n','7',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (118,'3','已知userInfo表的结构如下：\r\n字段名	　　　　类型	　　　　说明\r\nuserId	　　　　INTEGER	　　　　用户ID、主键\r\nusername	VARCHAR(30)	用户名\r\npassword	VARCHAR (20)	用户密码\r\n\r\nUserInfoDao类是userInfo表的操作类，请完善如下代码：\r\n\r\npublic class UserInfoDao {\r\n	public Userinfo search(Userinfo userinfo){ //根据用户名和密码查询\r\n           Session s=HibernateSessionFactory.getSession();\r\n　　　　　//在这里完善代码\r\n\r\n　}\r\n　　　　public int add(Userinfo user){//添加用户\r\n           Session s=HibernateSessionFactory.getSession();\r\n　　　　　　//在这里完善代码\r\n　　}\r\n　　　　public List searchAll() { //查询所有的用户\r\n           Session s=HibernateSessionFactory.getSession();\r\n　　　　　　//在这里完善代码\r\n}','public class UserInfoDao {\r\n	public Userinfo search(Userinfo userinfo){ //根据用户名和密码查询\r\n\r\n		Session session=HibernateSessionFactory.getSession();\r\n		String hql=\"from Userinfo u where u.username=? and u.password=?\";\r\n		Query query=session.createQuery(hql);\r\n		query.setString(0,userinfo.getUsername());\r\n		query.setString(1,userinfo.getPassword());\r\n		List list=query.list();\r\n		Iterator it=list.iterator();\r\n		if(it.hasNext()){\r\n			userinfo=(Userinfo)it.next();\r\n\r\n		}\r\n                 else \r\n                     userinfo=null;\r\n		return userinfo;\r\n	}\r\n	public int add(Userinfo user){//添加用户\r\n		int result=0;\r\n		Session s=HibernateSessionFactory.getSession();\r\n		Transaction tx=s.beginTransaction();\r\n		try{\r\n			s.save(user);\r\n			tx.commit();\r\n			s.close();\r\n			result=1;\r\n		}catch(Exception e){\r\n			tx.rollback();\r\n			e.printStackTrace();\r\n		}\r\n		return result;\r\n	}\r\n      public List searchAll(){\r\n               List list=null;\r\n		Session s=HibernateSessionFactory.getSession();\r\n\r\n		try{\r\n                  String hql=\"from UserInfo \";\r\n                  Query query=s.createQuery(hql);\r\n                  list=query.list();\r\n		}catch(Exception e){\r\n			tx.rollback();\r\n			e.printStackTrace();\r\n		}\r\n		return list;\r\n            ','8',10,13),
 (119,'3','Spring中的IoC是什么意思?','Spring通过控制反转技术促进了松耦合。当应用了IoC，一个对象依赖的其它对象会通过被动的方式传递进来，而不是这个对象自己创建或者查找依赖对象。可以认为IoC与JNDI相反——不是我们自己控制对象从容器中查找依赖，而是容器在对象初始化时不等对象请求就主动将依赖传递给它。','9',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (120,'3','什么是AOP?','Spring提供了面向切面的编程支持，AOP将与程序业务无关的内容分离提取，应用对象只实现它们应该做的——完成业务逻辑——仅此而已。它们并不负责其它的系统级关注点，例如日志或事务支持。\r\nAOP将与业务无关的逻辑横切进真正的逻辑中。\r\n','9',10,13),
 (121,'1','下面的集合中，（）可以存储重复元素的是：\r\nA．Set\r\nB．Collection\r\nC．Map\r\nD．List\r\n\r\n','D','6',11,13),
 (122,'3','编程计算距当前时间10天后的日期和时间，并用“xxxx年xx月xx日”的格式输出新的日期和时间。','mport java.util.Calendar;\r\npublic class Ex12 {\r\n	public static void main(String[] args) {\r\n		Calendar cal=Calendar.getInstance();\r\n		cal.add(Calendar.DAY_OF_YEAR,10);\r\n		String strDate=cal.get(Calendar.YEAR)+\"年\"\r\n					  +(cal.get(Calendar.MONTH)+1)+\"月\"\r\n					  +cal.get(Calendar.DATE)+\"日\";\r\n		System.out.println(\"10天后的日期为：\"+strDate);\r\n	}\r\n}\r\n','6',11,13),
 (123,'3','设计一个程序，基于泛型Map实现10个英文单词的汉语翻译，即通过单词得到它的中文含义。','import java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class English2China {\r\n	Map map;\r\n	English2China(){\r\n		map=new HashMap();\r\n		map.put(\"english\",\"英语\");\r\n		map.put(\"China\",\"中国\");\r\n		\r\n	}\r\n	public String get(String key) {\r\n		return (String)map.get(key);\r\n	}\r\n	public static void main(String args[]) {\r\n		English2China e2c=new English2China();\r\n		System.out.println(e2c.get(\"english\"));\r\n	}\r\n\r\n}','6',11,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (124,'3','编写一个同学的通讯录（包括姓名和电话），并将同学的信息打印在控制台上。\r\n提示：首先创建一个同学类Student，有两个成员变量：姓名和电话，\r\n然后编写一个测试类Test，在测试类中创建一个List类型的变量students，并创建5个同学对象，\r\n并将这些对象保存在students中。','class Student{\r\n	private String name;\r\n	private String phone;\r\n	public Student(String name, String phone) {\r\n		this.name = name;\r\n		this.phone = phone;\r\n	}\r\n	public String getName() {\r\n		return name;\r\n	}\r\n	public void setName(String name) {\r\n		this.name = name;\r\n	}\r\n	public String getPhone() {\r\n		return phone;\r\n	}\r\n	public void setPhone(String phone) {\r\n		this.phone = phone;\r\n	}\r\n	public String toString() {\r\n		return name+\":\"+phone;\r\n	}\r\n}\r\n//学生操作类\r\npublic class Ex21 {\r\n	\r\n	public List<Student> listAllStudent() {\r\n		List<Student> list=new ArrayList<Student>();\r\n		Student st1=new Student(\"John\",\"23214\");\r\n		Student st2=new Student(\"Alice\",\"4563\");\r\n		list.add(st1);\r\n		list.add(st2);\r\n		return list;		\r\n	}\r\n\r\n	public static void main(String[] args) {\r\n		Ex21 ex21=new Ex21();\r\n		List<Student> list=ex21.listAllStudent();\r\n		Iterator<Student> it=list.iterator();\r\n		while(it.hasNext()) {\r\n			Student student=it.next();\r\n			System.out.println(student.getName());\r\n		}\r\n\r\n	}\r\n\r\n}\r\n','6',11,13),
 (125,'3','列出D盘中所有的文件和目录。如果是目录的话，再次进行列举，直到把D盘中的所有目录中的文件都列举出来为止。','import java.io.File;\r\npublic class Ex11 {\r\n	public static void main(String[] args) {\r\n		File file = new File(\"C:\\\\Inetpub\");\r\n		getFile(file);\r\n	}\r\n	public static void getFile(File file) {\r\n		if (file.isDirectory()) {\r\n			System.out.println(\"目录: \" + file.getAbsolutePath());\r\n			File[] subFiles = file.listFiles();\r\n			for (int i = 0; i < subFiles.length; i++) {\r\n				getFile(subFiles[i]);\r\n			}\r\n		} else {\r\n			System.out.println(\"文件: \" + file.getAbsolutePath());\r\n		}\r\n	}\r\n}\r\n','8',11,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (126,'3','编写一个程序，从键盘读入一个数字字符串，然后转换成相对应的int数值后保存到文件中。','import java.io.*;\r\nimport java.util.Scanner;\r\npublic class Ex13 {\r\n	public static void main(String[] args) {\r\n		Scanner scan=new Scanner(System.in);\r\n		String str=scan.next();\r\n		int i=Integer.valueOf(str);\r\n		try {\r\n			FileWriter fw=new FileWriter(\"out.txt\");\r\n			fw.write(i);\r\n			fw.close();\r\n		} catch (IOException e) {\r\n			e.printStackTrace();\r\n		}\r\n	}\r\n}\r\n','8',11,13),
 (127,'2','Spring框架的核心技术是Ioc和_______','AOP','9',10,13),
 (128,'2','关于AOP正确的说法是_____________','面向切面编程','9',10,13),
 (129,'3','已知与表userinfo对应的实体类为UserInfo，代码如下：\r\npublic class UserInfo{\r\nprivate int userId;\r\nprivate String username;\r\nprivate String password;\r\n//相应的set和get方法省略\r\n}\r\n创建一个OpUserInfo类，添加相应方法实现如下功能：\r\n（1）根据用户名和密码查询用户信息，如果找到满足条件用户则返回1，否则返回0\r\n（2）根据用户名进行模糊查询，返回值为一个List类型的实例，数组实例中存放的是UserInfo类的对象。可参照例10-10。\r\n','import java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Ex04 {\r\n	private Connection connection;\r\n	private PreparedStatement UserQuery;\r\n	private ResultSet results;\r\n	public int getByUserAndPwd(String username,String password){	\r\n		int result=0;\r\n		try {\r\n			connection = ConnectionManager.getConnction();\r\n			UserQuery = connection\r\n.prepareStatement(\"SELECT * from userinfo where userid=? and password=?\");\r\n			UserQuery.setString(1,username);\r\n			UserQuery.setString(2,password);\r\n			ResultSet results = UserQuery.executeQuery();\r\n			if(results.next()) {\r\n				result=1;\r\n			}\r\n		}\r\n		catch (SQLException exception) {// 处理数据库异常\r\n			exception.printStackTrace();\r\n		}\r\n		// 释放资源\r\n		finally {\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(UserQuery);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		return result;\r\n	}\r\n	public List getByUser(String username) {	\r\n		List UserList = new ArrayList();\r\n		try {\r\n			connection = ConnectionManager.getConnction();\r\n			UserQuery = connection\r\n					.prepareStatement(\"SELECT * FROM userinfo where username like \'%\"+username+\"%\'\");\r\n			ResultSet results = UserQuery.executeQuery();\r\n			// 读取行数据\r\n			while (results.next()) {\r\n				UserInfo userinfo=new UserInfo();\r\n                //将数据表中的一条记录数据添加到封装类中\r\n				userinfo.setUserId(results.getInt(1));\r\n				userinfo.setLoginName(results.getString(2));\r\n				userinfo.setPassword(results.getString(3));\r\n				UserList.add(userinfo);\r\n			}\r\n		}\r\n		// 处理数据库异常\r\n		catch (SQLException exception) {\r\n			exception.printStackTrace();\r\n		}\r\n		// 释放资源\r\n		finally {\r\n			ConnectionManager.closeResultSet(results);\r\n			ConnectionManager.closeStatement(UserQuery);\r\n			ConnectionManager.closeConnection(connection);\r\n		}\r\n		return UserList;\r\n	}\r\n}\r\n','10',11,13),
 (130,'3','实验一Spring IoC - Spring上机练习\r\n\r\n一、需求说明\r\n	学生Student实体中包含学号（no）姓名（name）和年龄（age）属性，均由Spring完成注入。\r\n	实体中提供sayHello()方法完成自我介绍。\r\n具体要求：\r\n1.	基于XML完成对Student中的属性的装配，要用设值注入和构造注入两种方法实现\r\n2.	创建测试类，测试装配后的Student中的sayHello()方法\r\n二、实现思路及步骤\r\n	1）创建项目，并添加Spring相关支持；\r\n	2）创建Student实体类；\r\n	3）配置Spring；\r\n	4）测试。\r\n三、程序实现\r\n1. 创建项目\r\n	创建Java Project项目。\r\n	并添加上篇文章中所提供的的Spring相关jar包。\r\n2.创建JavaBean实体类（s001.bean.Student）：\r\n \r\n3. 配置Spring\r\n	在src目录下新建ApplicationContext.xml，配置如下：\r\n  \r\n4. 配置log4j\r\n	log4j日志的配置和上篇文章一样：\r\n # rootLogger是所有日志的根日志，修改该日志属性将对所有日志起作用\r\n        # 下面的属性配置中，所有日志的输出级别是info，输出源是console\r\n        log4j.rootLogger=info, console\r\n        \r\n        #################### console #####################\r\n        # 定义输出源的输出位置是控制台\r\n        log4j.appender.console=org.apache.log4j.ConsoleAppender\r\n        # 定义输出日志的布局采用的类\r\n        log4j.appender.console.layout=org.apache.log4j.PatternLayout\r\n        # 定义输出日志的目标采用的是System.out\r\n        log4j.appender.console.Target=System.out\r\n        # 定义日志的输出布局\r\n        log4j.appender.console.layout.ConversionPattern=%d %p [%c] - %m%n\r\n5. 测试运行\r\n \r\n',NULL,'1',10,13);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (131,'3','实验二 基于Annotation上机练习\r\n\r\n一、需求说明\r\n	有一个StudentDao接口类如下：\r\npublic interface StudentDao {\r\n	public void insert(Student student);\r\n}\r\nStudentDdao的实现类是：StudentDaoImpl,代码如下：\r\npublic class StudentImpl implements StudentDao {	\r\n	@Override\r\n	public void insert() {\r\n		System.out.println(\"insert running\");\r\n	}\r\n}\r\n业务接口StudentService如下：\r\npublic interface StudentService {\r\n	public void save();\r\n}\r\nStudentService的实现类是StudentServiceImpl，在save()中调用StudentDao的insert方法，代码如下：\r\npublic class StudentServiceImpl implements StudentService {	\r\nprivate StudentDao studentDao;\r\n	@Override\r\n	public void save() {\r\n		studentDao.insert();\r\n	}\r\n	public StudentDao getStudentDao() {\r\n		return studentDao;	}\r\n	public void setStudentDao(StudentDao studentDao) {\r\n		this.studentDao = studentDao;\r\n	}\r\n控制器类StudentController的代码如下：\r\n@Controller(\"studentController\")\r\npublic class StudentController {\r\n	@Resource(name=\"studentService\")\r\n	private StudentService studentService;\r\n	public void save() {\r\n		this.studentService.save();\r\n	}\r\n	\r\n\r\n}\r\n\r\n具体要求：\r\n1.	基于XML完成对以上类装配，要用设值注入方法实现，并创建测试类，测试装配后的save()方法\r\n2.	基于Annotation完成对以上类的装配，并创建测试类，测试装配后的save()方法\r\n二、实现思路及步骤\r\n   1）创建项目，并添加Spring相关支持；\r\n	2）创建根包s+学号\r\n	3）创建相关接口与实现类；\r\n	4）配置Spring；\r\n	5）测试。\r\n',NULL,'2',10,13),
 (132,'3','实现一个名为Person的类和它的子类Employee，ExcellentEmployee是Employee的子类，设计一个方法Add用于涨工资，普通员工一次能涨10％，优秀员工一次能涨20％。具体要求如下：\r\n（1）Person类中的属性有：姓名name（String类型），地址address（String类型）并写出该类的构造方法；\r\n（2）Employee类中的属性有：工号ID（String型），工资wage（double类型），工龄（int型），写出该类的构造方法；\r\n（3）ExcellentEmployee类中的属性有：级别level（String类型），根据级别涨工资的方法add(String level),并写出该类的构造方法；\r\n编写一个测试类，产生一个普通员工和一个优秀员工并输出员工的所有属性的信息。\r\n','package com;\r\n\r\n	class Person\r\n{\r\n	String name;\r\n	String adress;\r\n	Person(String a,String b)\r\n	{\r\n		name=a;\r\n		adress=b;\r\n	}\r\n}\r\n\r\nclass Employee extends Person\r\n{\r\n	String id;\r\n	double wage;\r\n	int age;\r\n	Employee(String a,String b,String c,double d,int e)\r\n	{\r\n		super(a,b);\r\n		id=c;\r\n		wage=d;\r\n		age=e;\r\n	}\r\n	\r\n}\r\n\r\nclass ExcellentEmployee extends Employee\r\n{\r\n	String level;\r\n	ExcellentEmployee(String a,String b,String c,double d,int e,String f)\r\n	{\r\n		super(a,b,c,d,e);\r\n		level=f;\r\n	}\r\n	\r\n	void add()\r\n	{\r\n		if(level.equals(\"优秀\"))\r\n		\r\n			wage+=wage*0.2;\r\n		else\r\n			wage+=wage*0.1;\r\n	}\r\n	\r\n	void show()\r\n	{\r\n		System.out.println(\"名字：\"+name);\r\n		System.out.println(\"地址：\"+adress);\r\n		System.out.println(\"工号：\"+id);\r\n		System.out.println(\"工资：\"+wage);\r\n		System.out.println(\"工龄：\"+age);\r\n		System.out.println(\"等级：\"+level);\r\n	\r\n	}\r\n}\r\npublic class Test {\r\n	public static void main(String agrs[])\r\n	{\r\n		ExcellentEmployee aa=new ExcellentEmployee(\"小四\",\"中国\",\"123456\",1000,25,\"优秀\");\r\n		aa.add();\r\n		aa.show();\r\n		System.out.println(\"\");\r\n		ExcellentEmployee dd=new ExcellentEmployee(\"小五\",\"中国\",\"123455\",1000,28,\"普通\");\r\n		dd.add();\r\n		dd.show();\r\n		\r\n	}\r\n\r\n}\r\n				   \r\n					   ','5',11,15);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (133,'3','定义一个图形接口Shape，声明计算图形面积和周长的抽象方法，再设计圆类Circle和长方形类Rectangle实现这个接口和接口中的所有方法，创建两个类的实例并测试类中的方法。','package com;\r\n\r\ninterface Shape{\r\npublic  double getArea();\r\npublic  double getPerimeter();	\r\n}\r\nclass Circle implements Shape{\r\ndouble r;\r\nCircle(double r){\r\nthis.r=r;\r\n}\r\npublic double getArea(){\r\nreturn(3.14*r*r);\r\n}\r\npublic double getPerimeter(){\r\nreturn (3.14*r*2);\r\n}\r\n}\r\nclass Rectangle implements Shape{\r\ndouble length;\r\ndouble width;\r\nRectangle(double length,double width){\r\nthis.length=length;\r\nthis.width=width;\r\n}\r\npublic double getArea(){\r\nreturn length*width;\r\n}\r\npublic double getPerimeter(){\r\nreturn (length+width)*2;\r\n}\r\n}\r\npublic class Test{\r\npublic static void main(String[] args){\r\nCircle circle=new Circle(6);\r\nSystem.out.println(\"圆面积：\"+circle.getArea()+\",圆周长：\"+circle.getPerimeter());\r\nRectangle rectangle=new Rectangle(8,10);\r\nSystem.out.println(\"矩形面积:\"+rectangle.getArea()+\",矩形周长:\"+rectangle.getPerimeter());\r\n}\r\n}\r\n				   \r\n					   \r\n					   \r\n					   ','5',11,15),
 (134,'3','对异常进行捕获和处理：\r\n要求：定义一个方法，求三角形面积getArea(int a,int b,int c)，三角形的三条边由数组元\r\n      素接收，来自键盘的输入。当数据类型不匹配时，抛出异常；当数据个数不满足\r\n      要求时，抛出异常；当三条边的值不能构成三角行时，抛出异常。\r\n步骤：\r\n(1)  定义方法void triangle(int a,int b,int c)；\r\n(2)  不符合条件的则抛出异常，如：(if  a+b<=c(或a+c<=b,b+c<=a) then  throw  new  \r\nIllegalArgumentException(),)；\r\n(3)  在main方法中调用triangle方法，用try…..catch…. finally语句捕获异常。\r\n',NULL,'7',11,15);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (135,'3','字符流统计文件： \r\n要求：使用字符流统计文件中包含的单词个数和行数。\r\n步骤：\r\n(1)  自建一个原始文本文件，使用字符流BufferedReader类；\r\n(2)  单词和单词间的分隔符是空格；\r\n(3)  文本按行读取，统计其文本内容所占行数。\r\n',NULL,'8',11,15),
 (136,'3',' 表student的数据库结构为，id(int),loginname(varchar),password(varchar),username(varchar),age(int)。已知与表student对应的实体类为Student，代码如下：\r\npublic class Student {\r\n	private int id;\r\n	private String loginname;//登录名\r\n	private String password;//密码\r\n	private String username;//学生姓名\r\n	private int age;  //年龄\r\n//相应的set和get方法省略\r\n}\r\n创建一个StudentDao类，添加相应方法实现如下功能：\r\n（1）public int searchByLoginnameAndPassword(int loginname,String password),这个方法是根据登录名和密码查询用户信息，如果找到满足条件用户则返回1，否则返回0\r\n（2）public  Student searchByUsername(String username),这个方法是根据用户名进行模糊查询，返回值为一个List类型的实例，数组实例中存放的是Student类的对象。可参照例10-10。\r\n','','10',11,15),
 (137,'2','下面代码将输出内容是什么？  \r\nint i = 1;\r\nswitch (i) {\r\ncase 0: System.out.println(\"zero\");\r\n           break;\r\ncase 1: System.out.println(\"one\");\r\ncase 2: System.out.println(\"two\");\r\ndefault:System.out.println(\"default\");\r\n}\r\n','one  two  default','3',11,15);
INSERT INTO `tb_exercise` (`id`,`kind`,`content`,`answer`,`chapter`,`course_id`,`tea_id`) VALUES 
 (138,'2','下面代码将输出内容是什么？ \r\nclass EqualsTest {\r\n      public static void main(String[] args) {\r\n         char a=\'\\u0005\';\r\n         String s=a==0x0005L？\"Equal\":\"Not Equal\";\r\n          System.out.println(s);\r\n        }\r\n}\r\n','Equal','3',11,15),
 (139,'2','以下代码共创建了几个对象？\r\nString s1=new String(\"hello\");\r\nString s2=new String(\"hello\");\r\nString s3=s1;\r\nString s4=s2;\r\n','2','4',11,15);
/*!40000 ALTER TABLE `tb_exercise` ENABLE KEYS */;


--
-- Table structure for table `homework`.`tb_student`
--

DROP TABLE IF EXISTS `tb_student`;
CREATE TABLE `tb_student` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `loginname` varchar(20) NOT NULL,
  `password` varchar(20) NOT NULL,
  `username` varchar(255) NOT NULL,
  `clazz_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `clazz_id` (`clazz_id`),
  CONSTRAINT `tb_student_ibfk_3` FOREIGN KEY (`clazz_id`) REFERENCES `tb_clazz` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=614 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `homework`.`tb_student`
--

/*!40000 ALTER TABLE `tb_student` DISABLE KEYS */;
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (275,'1713071001','nhce111','刘奕彤',15),
 (276,'1713071002','1713071002','孟韵怡',15),
 (277,'1713071003','1713071003','刘欣雨',15),
 (278,'1713071004','1713071004','陈思',15),
 (279,'1713071005','1713071005','李雯倩',15),
 (280,'1713071006','1713071006','丁张琦',15),
 (281,'1713071007','1713071007','郭东升',15),
 (282,'1713071008','1713071008','蒋文轩',15),
 (283,'1713071009','1713071009','王辉',15),
 (284,'1713071010','1713071010','丁尧',15),
 (285,'1713071011','1713071011','陈新宇',15),
 (286,'1713071012','1713071012','周佳慧',15),
 (287,'1713071013','1713071013','宋磊',15),
 (288,'1713071014','1713071014','潘嘉盛',15),
 (289,'1713071015','5t6y7u8i','管海宇',15),
 (290,'1713071016','1713071016','王逸凡',15),
 (291,'1713071017','1713071017','张家毓',15),
 (292,'1713071018','1713071018','张云兵',15),
 (293,'1713071019','1713071019','张来磊',15),
 (294,'1713071020','1713071020','关力斌',15),
 (295,'1713071021','1713071021','夏威',15);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (296,'1713071022','1713071022','朱家枫',15),
 (297,'1713071023','1713071023','高星可',15),
 (298,'1713071024','1713071024','陈虎',15),
 (299,'1713071025','1713071025','祝一鸣',15),
 (300,'1713071026','1713071026','李子然',15),
 (301,'1713071027','1713071027','王学晨',15),
 (302,'1713071028','1713071028','蒋家欢',15),
 (303,'1713071029','1713071029','邱枫',15),
 (304,'1713071030','1713071030','唐鹤龙',15),
 (305,'1713071031','1713071031','袁一桐',14),
 (306,'1713071032','199906050028','李伊琳',14),
 (307,'1713071033','jtt@19990922','谭艺婧',14),
 (308,'1713071034','zhouyanlin123','周彦琳',14),
 (309,'1713071035','1713071035','方文婷',14),
 (310,'1713071036','1713071036','薛笑林',14),
 (311,'1713071037','1713071037','王柯',14),
 (312,'1713071038','1713071038','蒋志程',14),
 (313,'1713071039','1713071039','陈纳川',14),
 (314,'1713071040','1713071040','许建华',14),
 (315,'1713071041','1713071041','李响',14);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (316,'1713071042','1713071042','石浩翔',14),
 (317,'1713071043','1713071043','汪辰睿',14),
 (318,'1713071044','1713071044','孔苏鹏',14),
 (319,'1713071045','1713071045','支宝',14),
 (320,'1713071046','1713071046','李嘉信',14),
 (321,'1713071047','1713071047','李强',14),
 (322,'1713071048','1713071048','蔡周宇',14),
 (323,'1713071049','1713071049','谭天航',14),
 (324,'1713071050','1713071050','周煜文',14),
 (325,'1713071051','123456m','邵正宇',14),
 (326,'1713071052','1713071052','吴涛',14),
 (327,'1713071053','1713071053','王伟晔',14),
 (328,'1713071054','1713071054','周宇航',14),
 (329,'1713071055','1713071055','陈明一',14),
 (330,'1713071056','1713071056','崔玉林',14),
 (331,'1713071057','1713071057','刘高鹏',14),
 (332,'1713071058','1713071058','陈方宁',14),
 (333,'1713071059','1713071059','汪正君',14),
 (334,'1713071060','1713071060','周子隽',14),
 (335,'1613072001','1613072001','江文',12);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (336,'1613072003','1613072003','许文佳',12),
 (337,'1613072004','1613072004','董瑞',12),
 (338,'1613072005','1613072005','蒋晓明',12),
 (339,'1613072006','1613072006','陈扬',12),
 (340,'1613072007','1613072007','周磊',12),
 (341,'1613072008','1613072008','俞林森',12),
 (342,'1613072009','1613072009','唐庆阳',12),
 (343,'1613072010','1613072010','戴俊明',12),
 (344,'1613072011','1613072011','蒋兆丰',12),
 (345,'1613072012','1613072012','王友亮',12),
 (346,'1613072013','1613072013','刘赛',12),
 (347,'1613072014','1613072014','卢杰',12),
 (348,'1613072015','1613072015','候玉权',12),
 (349,'1613072016','1613072016','高耀',12),
 (350,'1613072017','1613072017','钱金',12),
 (351,'1613072018','1613072018','邱子良',12),
 (352,'1613072019','1613072019','李想',12),
 (353,'1613072020','1613072020','周展',12),
 (354,'1613072021','1613072021','屈聪聪',12),
 (355,'1613072022','1613072022','马照彬',12),
 (356,'1613072023','1613072023','庄志强',12);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (357,'1613072024','1613072024','江文浩',12),
 (358,'1613072025','1613072025','李赟波',12),
 (359,'1613072026','1613072026','唐顺成',12),
 (360,'1613072027','1613072027','吴涛',12),
 (361,'1613072028','1613072028','陈志华',12),
 (362,'1613072029','1613072029','徐东',12),
 (363,'1613072030','1613072030','张鑫',12),
 (364,'1613072031','1613072031','殷玉洁',11),
 (365,'1613072032','1613072032','赵亦明',11),
 (366,'1613072033','1613072033','王楠楠',11),
 (367,'1613072034','1613072034','陈原',11),
 (368,'1613072035','1613072035','周怡峰',11),
 (369,'1613072036','1613072036','谭琪',11),
 (370,'1613072037','1613072037','张铭锐',11),
 (371,'1613072038','1613072038','夏文杰',11),
 (372,'1613072040','1613072040','高昶',11),
 (373,'1613072041','1613072041','秦伟杰',11),
 (374,'1613072042','1613072042','邱财岭',11),
 (375,'1613072043','1613072043','李文斌',11),
 (376,'1613072044','1613072044','张扬',11),
 (377,'1613072045','1613072045','徐泽辉',11);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (378,'1613072046','1613072046','霍星',11),
 (379,'1613072047','1613072047','梅岭',11),
 (380,'1613072048','1613072048','王立凯',11),
 (381,'1613072049','1613072049','张天奕',11),
 (382,'1613072050','1613072050','马钰',11),
 (383,'1613072051','1613072051','朱佳豪',11),
 (384,'1613072052','1613072052','申可佳',11),
 (385,'1613072053','1613072053','李俊杰',11),
 (386,'1613072054','1613072054','政路航',11),
 (387,'1613072055','1613072055','潘博',11),
 (388,'1613072056','1613072056','侯磊',11),
 (389,'1613072057','1613072057','张鑫',11),
 (390,'1613072058','1613072058','张泽飞',11),
 (391,'1613072059','1613072059','胡子翔',11),
 (392,'1613072060','1613072060','杨春华',11),
 (393,'1513062028','1513062028','施诚泷',12),
 (396,'1513022012','1513022012','孙延明',17),
 (397,'1513022025','1513022025','金帅',17),
 (398,'1515032021','1515032021','李洪兴',17),
 (399,'1613022001','1613022001','钟颖',17),
 (400,'1613022002','1613022002','刘佳敏',17);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (401,'1613022003','1613022003','李俊琦',17),
 (402,'1613022004','1613022004','鱼文慧',17),
 (403,'1613022005','1613022005','陈洁',17),
 (404,'1613022006','1613022006','顾艳婷',17),
 (405,'1613022007','1613022007','吴钰',17),
 (406,'1613022008','1613022008','杨玥',17),
 (407,'1613022009','1613022009','李鑫鑫',17),
 (408,'1613022010','1613022010','张童',17),
 (409,'1613022011','1613022011','吴清群',17),
 (410,'1613022012','1613022012','赵益林',17),
 (411,'1613022013','1613022013','安宏彬',17),
 (412,'1613022014','1613022014','敬康',17),
 (413,'1613022015','1613022015','黄杰',17),
 (414,'1613022016','1613022016','叶鹏',17),
 (415,'1613022017','1613022017','唐道鲜',17),
 (416,'1613022018','1613022018','李雨翰',17),
 (417,'1613022019','1613022019','庞洋禾',17),
 (418,'1613022020','1613022020','王磊',17),
 (419,'1613022021','1613022021','张振勤',17),
 (420,'1613022022','1613022022','罗启顺',17),
 (421,'1613022023','1613022023','白绍明',17);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (422,'1613022024','1613022024','杨正志',17),
 (423,'1613022025','1613022025','朱航',17),
 (424,'1613022026','1613022026','管浩男',17),
 (425,'1613022027','1613022027','唐学雨',17),
 (426,'1613022028','1613022028','韦吉',17),
 (427,'1613022029','1613022029','杨金达',17),
 (428,'1613022030','1613022030','戴清杨',17),
 (429,'1613022031','1613022031','孙逸峰',17),
 (430,'1613022032','1613022032','杨路',17),
 (431,'1413022016','1413022016','张亮',18),
 (432,'1513022032','1513022032','李立强',18),
 (433,'1513022036','1513022036','王江',18),
 (434,'1513022043','1513022043','仲重壬',18),
 (435,'1613022034','1613022034','徐佳丽',18),
 (436,'1613022035','1613022035','张雨欣',18),
 (437,'1613022036','1613022036','杨媛艳',18),
 (438,'1613022037','1613022037','施胜岚',18),
 (439,'1613022038','1613022038','陈静怡',18),
 (440,'1613022039','1613022039','何娴雅',18),
 (441,'1613022040','1613022040','栾秦芳',18);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (442,'1613022041','1613022041','徐文倩',18),
 (443,'1613022042','1613022042','潘婷婷',18),
 (444,'1613022043','1613022043','陈亿黎',18),
 (445,'1613022044','1613022044','单义冰',18),
 (446,'1613022046','1613022046','蒲政',18),
 (447,'1613022047','1613022047','刘奇',18),
 (448,'1613022048','1613022048','杜浩森',18),
 (449,'1613022049','1613022049','刘越',18),
 (450,'1613022050','1613022050','李俊锋',18),
 (451,'1613022051','1613022051','李韬',18),
 (452,'1613022052','1613022052','普令福',18),
 (453,'1613022053','1613022053','王昊',18),
 (454,'1613022055','1613022055','罗灯杰',18),
 (455,'1613022056','1613022056','蔡亮',18),
 (456,'1613022057','1613022057','黎亮亮',18),
 (457,'1613022058','1613022058','吴宗晖',18),
 (458,'1613022059','1613022059','董家明',18),
 (459,'1613022060','1613022060','高嘉铭',18),
 (460,'1613022061','1613022061','季朗永',18),
 (461,'1613022062','1613022062','祁海梁',18),
 (462,'1613022063','1613022063','黄凯',18);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (463,'1613022065','1613022065','徐耀',18),
 (464,'1613022066','1613022066','邵昌泽',18),
 (466,'1502042021','1502042021','彭帅',19),
 (467,'1514032025','1514032025','吴锦程',19),
 (468,'1515062010','1515062010','戴敏',19),
 (469,'1613032002','1613032002','王琴',19),
 (470,'1613032003','1613032003','孙芳林',19),
 (471,'1613032004','1613032004','刘微',19),
 (472,'1613032005','1613032005','林园',19),
 (473,'1613032006','1613032006','徐霖',19),
 (474,'1613032007','1613032007','吴信亚',19),
 (475,'1613032008','1613032008','袁紫薇',19),
 (476,'1613032009','1613032009','赵春雨',19),
 (477,'1613032010','1613032010','管文青',19),
 (478,'1613032011','1613032011','聂豫杭',19),
 (479,'1613032012','1613032012','唐伟',19),
 (480,'1613032013','1613032013','张志彪',19),
 (481,'1613032014','1613032014','吴顺达',19),
 (482,'1613032015','1613032015','陈天翼',19),
 (483,'1613032017','1613032017','钟凯耀',19),
 (484,'1613032018','1613032018','李中健',19);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (485,'1613032019','1613032019','李屹',19),
 (486,'1613032020','1613032020','庄毓超',19),
 (487,'1613032021','1613032021','游超敏',19),
 (488,'1613032022','1613032022','刘腾腾',19),
 (489,'1613032023','1613032023','雍健',19),
 (490,'1613032024','1613032024','王潇',19),
 (491,'1613032025','1613032025','杨家剑',19),
 (492,'1613032026','1613032026','王依然',19),
 (493,'1613032027','1613032027','陈鹏飞',19),
 (494,'1613032029','1613032029','李金',19),
 (495,'1613042017','1613042017','李昊洋',19),
 (496,'1613042055','1613042055','苏峰',19),
 (497,'1513023070','1513023070','王伟杰',20),
 (498,'1613023001','1613023001','陈惠敏',20),
 (499,'1613023002','1613023002','程小婉',20),
 (500,'1613023003','1613023003','陆燕',20),
 (501,'1613023004','1613023004','孙露萍',20),
 (502,'1613023005','1613023005','汪姚娜',20),
 (503,'1613023006','1613023006','徐慧杰',20),
 (504,'1613023007','1613023007','徐露',20),
 (505,'1613023009','1613023009','卞越',20);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (506,'1613023010','1613023010','蔡丛峡',20),
 (507,'1613023012','1613023012','耿文彬',20),
 (508,'1613023013','1613023013','何江',20),
 (509,'1613023014','1613023014','胡嘉培',20),
 (510,'1613023015','1613023015','姜雨洋',20),
 (511,'1613023016','1613023016','刘祥',20),
 (512,'1613023017','1613023017','马睿琪',20),
 (513,'1613023018','1613023018','倪赛君',20),
 (514,'1613023019','1613023019','荣兴',20),
 (515,'1613023020','1613023020','沈子钦',20),
 (516,'1613023021','1613023021','孙浩',20),
 (517,'1613023022','1613023022','孙屹',20),
 (518,'1613023023','1613023023','王海峰',20),
 (519,'1613023024','1613023024','王俊杰',20),
 (520,'1613023025','1613023025','王寅杰',20),
 (521,'1613023026','1613023026','夏磊',20),
 (522,'1613023027','1613023027','修帅',20),
 (523,'1613023028','1613023028','徐伟',20),
 (524,'1613023029','1613023029','杨凯',20),
 (525,'1613023030','1613023030','尤昕宇',20),
 (526,'1613023032','1613023032','张昔润',20);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (527,'1613023033','1613023033','张益民',20),
 (528,'1613023034','1613023034','朱磊',20),
 (557,'1710041052','1710041052','支文韬',25),
 (558,'1813021053','1813021053','卢姿彤',25),
 (559,'1813021054','1813021054','罗洪翠',25),
 (560,'1813021055','1813021055','马芸芸',25),
 (561,'1813021056','1813021056','杨利英',25),
 (562,'1813021057','1813021057','柏轶昕',25),
 (563,'1813021058','1813021058','周璇',25),
 (564,'1813021059','1813021059','张颖',25),
 (565,'1813021060','1813021060','赵颖钏',25),
 (566,'1813021061','1813021061','李茂斌',25),
 (567,'1813021062','1813021062','杨臣',25),
 (568,'1813021063','1813021063','梁振',25),
 (569,'1813021064','1813021064','杜潇',25),
 (570,'1813021065','1813021065','杨程羽',25),
 (571,'1813021066','1813021066','韦厚耀',25),
 (572,'1813021067','1813021067','杨会龙',25),
 (573,'1813021068','1813021068','简江进',25),
 (574,'1813021069','1813021069','王伟杰',25),
 (575,'1813021070','1813021070','陈典',25);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (576,'1813021071','1813021071','徐昊',25),
 (577,'1813021072','1813021072','张明鉴',25),
 (578,'1813021073','1813021073','韦慧卿',25),
 (579,'1813021074','1813021074','陈嘉懿',25),
 (580,'1813021075','wjq1999','翁佳琦',25),
 (581,'1813021076','1813021076','张钰成',25),
 (582,'1813021077','DJXdjx760301','高凯',25),
 (583,'1813021078','20010522liu','刘晟',25),
 (584,'1815051018','1815051018','华启磊',25),
 (585,'1713021018','1713021018','杨晨',26),
 (586,'1721091005','1721091005','吴媛媛',26),
 (587,'1813021079','xuezhiqian0717.','施雅涵',26),
 (588,'1813021080','1813021080','陈苏婉',26),
 (589,'1813021081','990418','侯美伊',26),
 (590,'1813021082','990511','刘双',26),
 (591,'1813021083','1813021083','卞金凤',26),
 (592,'1813021086','1813021086','秦梓韵',26),
 (593,'1813021087','1813021087','黄侯睿',26),
 (594,'1813021088','1813021088','王剑冬',26),
 (595,'1813021089','1813021089','赵旭',26),
 (596,'1813021090','1813021090','台衍衡',26);
INSERT INTO `tb_student` (`id`,`loginname`,`password`,`username`,`clazz_id`) VALUES 
 (597,'1813021091','1813021091','许舒源',26),
 (598,'1813021092','1813021092','徐素皓',26),
 (599,'1813021093','1813021093','安炳同',26),
 (600,'1813021094','1813021094','曾金波',26),
 (601,'1813021095','1813021095','魏宗邦',26),
 (602,'1813021096','1813021096','缪祺',26),
 (603,'1813021098','1813021098','徐百川',26),
 (604,'1813021099','1813021099','李浩',26),
 (605,'1813021100','1813021100','顾海泉',26),
 (606,'1813021101','1813021101','张凡',26),
 (607,'1813021102','1813021102','张陈鹏',26),
 (608,'1813021103','1813021103','董海林',26),
 (609,'1813021104','1813021104','刘金池',26),
 (610,'1822021023','1822021023','郑奇隆',26),
 (611,'1826041043','1826041043','赵明辉',26),
 (612,'ffff','ff','fffffffff',11),
 (613,'s123456','123456','123456',25);
/*!40000 ALTER TABLE `tb_student` ENABLE KEYS */;


--
-- Table structure for table `homework`.`tb_teacher`
--

DROP TABLE IF EXISTS `tb_teacher`;
CREATE TABLE `tb_teacher` (
  `loginname` varchar(18) NOT NULL,
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(18) NOT NULL,
  `username` varchar(18) DEFAULT NULL,
  `role` varchar(1) DEFAULT '2' COMMENT '1系统管理员，2为普通教师',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `homework`.`tb_teacher`
--

/*!40000 ALTER TABLE `tb_teacher` DISABLE KEYS */;
INSERT INTO `tb_teacher` (`loginname`,`id`,`password`,`username`,`role`) VALUES 
 ('admin',13,'english','史胜辉','1'),
 ('admin1',14,'11','李丽','2'),
 ('admin2',15,'english','史胜辉1','2');
/*!40000 ALTER TABLE `tb_teacher` ENABLE KEYS */;


--
-- Table structure for table `homework`.`tb_workbook`
--

DROP TABLE IF EXISTS `tb_workbook`;
CREATE TABLE `tb_workbook` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `teacher_id` int(11) NOT NULL COMMENT '与teacher表关联的外键',
  `course_id` int(11) NOT NULL COMMENT '与course表关联的外键',
  `title` varchar(30) NOT NULL COMMENT '作业名称',
  `clazz_id` int(11) NOT NULL COMMENT ' 与clazz表关联的外键',
  `wflag` varchar(1) NOT NULL DEFAULT '0' COMMENT '示表作业是否发布，0 为不发布，1为发布,2为已批改',
  `term` varchar(15) NOT NULL COMMENT '示表第几学期',
  `createdate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '建创日期',
  `fileName` varchar(50) DEFAULT NULL COMMENT '师教布置作业上传文件',
  PRIMARY KEY (`id`),
  KEY `clazz_id` (`clazz_id`),
  KEY `teacher_id` (`teacher_id`),
  KEY `course_id` (`course_id`),
  CONSTRAINT `tb_workbook_ibfk_2` FOREIGN KEY (`teacher_id`) REFERENCES `tb_teacher` (`id`),
  CONSTRAINT `tb_workbook_ibfk_3` FOREIGN KEY (`course_id`) REFERENCES `tb_course` (`id`),
  CONSTRAINT `tb_workbook_ibfk_6` FOREIGN KEY (`clazz_id`) REFERENCES `tb_clazz` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=74 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `homework`.`tb_workbook`
--

/*!40000 ALTER TABLE `tb_workbook` DISABLE KEYS */;
INSERT INTO `tb_workbook` (`id`,`teacher_id`,`course_id`,`title`,`clazz_id`,`wflag`,`term`,`createdate`,`fileName`) VALUES 
 (39,15,11,'Java程序设计第一次作业',25,'2','2019-2020-1','2019-10-09 15:29:29',NULL),
 (40,15,11,'Java程序设计第一次作业',26,'2','2019-2020-1','2019-10-09 15:29:36',NULL),
 (41,15,11,'Java程序设计第二次作业',25,'2','2019-2020-1','2019-10-17 09:19:20',NULL),
 (42,15,11,'Java程序设计第二次作业',26,'2','2019-2020-1','2019-10-17 09:19:26',NULL),
 (43,15,11,'Java程序设计第三次作业',25,'2','2019-2020-1','2019-11-01 10:32:39',NULL),
 (44,15,11,'Java程序设计第三次作业',26,'2','2019-2020-1','2019-11-01 10:32:47',NULL),
 (45,15,11,'Java程序设计第四次作业',25,'2','2019-2020-1','2019-11-13 19:41:12',NULL),
 (46,15,11,'Java程序设计第四次作业',26,'2','2019-2020-1','2019-11-13 19:41:17',NULL),
 (48,15,11,'Java程序设计第五次作业',26,'2','2019-2020-1','2019-11-27 09:30:26',NULL),
 (49,15,11,'Java程序设计第五次作业',25,'2','2019-2020-1','2019-11-27 09:34:31',NULL),
 (50,15,11,'Java程序设计第 六次作业',25,'2','2019-2020-1','2019-12-22 20:41:51',NULL);
INSERT INTO `tb_workbook` (`id`,`teacher_id`,`course_id`,`title`,`clazz_id`,`wflag`,`term`,`createdate`,`fileName`) VALUES 
 (51,15,11,'Java程序设计第六次作业',26,'2','2019-2020-1','2019-12-23 16:54:02',NULL),
 (58,13,10,'Java框架开发技术第一次作业',11,'0','2019-2020-2','2019-12-29 09:13:43',NULL),
 (59,13,10,'Java程序设计第二次作业',11,'0','2019-2020-2','2019-12-29 09:14:03',NULL),
 (60,13,10,'Java程序设计第三次作业',11,'0','2019-2020-2','2019-12-29 09:14:18',NULL),
 (61,13,10,'Java程序设计第四次作业',11,'0','2019-2020-2','2019-12-29 09:14:48',NULL),
 (62,13,10,'Java程序设计第五次作业',11,'0','2019-2020-2','2019-12-29 09:15:26',NULL),
 (63,13,10,'Java程序设计第6次作业',11,'0','2019-2020-2','2019-12-29 09:14:53',NULL),
 (64,13,10,'Java框架开发技术第7次作业',11,'0','2019-2020-2','2019-12-29 09:15:00',NULL),
 (65,13,10,'Java程序设计第8次作业',11,'0','2019-2020-2','2019-12-29 09:15:19',NULL),
 (66,13,10,'Java程序设计第9次作业',11,'1','2019-2020-2','2019-12-27 20:23:29',NULL),
 (67,13,10,'Java程序设计第10次作业',11,'1','2019-2020-2','2019-12-27 20:40:40',NULL);
INSERT INTO `tb_workbook` (`id`,`teacher_id`,`course_id`,`title`,`clazz_id`,`wflag`,`term`,`createdate`,`fileName`) VALUES 
 (68,13,10,'Java框架开发技术第11次作业',11,'0','2018-2019-1','2019-12-26 21:01:35',NULL),
 (69,13,10,'Java程序设计第12次作业',11,'0','2018-2019-1','2019-12-26 21:01:49',NULL),
 (70,13,11,'Java框架开发技术第一次作业',12,'0','2019-2020-2','2019-12-27 20:10:42',NULL),
 (71,13,11,'Java程序设计2',12,'0','2020-2021-2','2019-12-28 20:01:17',NULL),
 (72,14,11,'Java程序设计第1次作业',11,'0','2019-2020-1','2019-12-28 21:22:04',NULL),
 (73,14,11,'Java程序设计第2次作业',11,'0','2019-2020-1','2019-12-28 21:22:35',NULL);
/*!40000 ALTER TABLE `tb_workbook` ENABLE KEYS */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
